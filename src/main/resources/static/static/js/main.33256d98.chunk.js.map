{"version":3,"sources":["components/deliverypp/product/ProductCard.js","components/deliverypp/product/ProductTable.js","components/common/Toolbar.js","Deliverypp.js","services/ProductService.js","components/common/Modal.js","components/deliverypp/product/ProductView.js","components/deliverypp/order/OrderTable.js","services/OrderService.js","components/deliverypp/order/OrderView.js","components/deliverypp/product/OrderProductsView.js","components/deliverypp/DeliveryppTab.js","components/main/NavBar.js","components/main/Footer.js","services/AuthService.js","components/common/Loader.js","components/main/auth/LoginForm.js","components/main/auth/RegisterForm.js","components/main/auth/RegisterLoginTab.js","components/common/MainLoader.js","App.js","serviceWorker.js","index.js"],"names":["ProductCard","props","className","selected","onClick","Card","style","width","CardImg","top","src","imageUrl","alt","description","CardBody","CardTitle","category","CardText","price","ProductTable","Table","striped","bordered","hover","products","map","product","key","id","ActionButtons","onEditClick","disabled","title","onAddClick","onDeleteClick","Toolbar","onChange","onSearch","type","placeholder","aria-describedby","required","noActionButtons","ENVIRONMENTS","Deliverypp","env","getPath","this","console","error","STATUS","SUCCESS","ERROR","basePath","ProductService","handleResponse","response","data","deliveryppResponse","getProducts","axios","get","getProductById","productId","token","localStorage","getItem","headers","Authorization","addProduct","post","updateProduct","put","deleteProductById","delete","DModal","Modal","isOpen","showModal","ModalHeader","toggle","ModalBody","children","ModalFooter","Button","color","onSave","onCancel","ProductActionForm","Input","name","value","e","target","onProductUpdate","Label","for","ProductView","showAlert","useState","cardView","selectedProductId","setSelectedProductId","setProducts","filterableProducts","setFilterableProducts","setShowModal","action","setAction","selectedProduct","setSelectedProduct","filter","setFilter","a","responseData","success","log","message","createProduct","newProduct","newProducts","filterProducts","forEach","useEffect","onProductCardClick","handleDeleteProduct","window","confirm","filteredProducts","Object","keys","propValue","includes","getActionDescription","event","OrderTable","responsive","orders","order","onRowClick","user","username","email","telephone","createdAt","total","status","comment","OrderService","generateErrorResponse","getOrders","getOrderById","orderId","addOrder","ProductDetailsModal","onClose","toggleShowModal","orderLines","location","activeTab","setActiveTab","tab","Nav","tabs","NavItem","NavLink","cursor","TabContent","TabPane","tabId","OrderedProductDetailsView","WrappedMap","orderLine","imageHidden","mappedOrderLines","setMappedOrderLines","toggleImageHidden","newMappedOrderLines","quantity","marginBottom","marginTop","class","fontSize","position","height","GoogleApiWrapper","apiKey","google","padding","zoom","initialCenter","lat","latitude","lng","longitude","WrappedAllLocationsMapContainer","locations","OrderView","setOrders","filterableOrders","setFilterableOrders","selectedOrder","setSelectedOrder","showOrderedProductsModal","setShowOrderedProductsModal","filteredOrders","OrderProductsView","DeliveryppTab","isUserLoggedIn","role","NavBar","onSignInClick","onLogOutClick","Navbar","light","expand","NavbarBrand","href","navbar","outline","Footer","AuthService","register","login","getUserByToken","logout","Loader","Spinner","LoginForm","onLogin","password","dirty","setDirty","setUsername","setPassword","loading","setLoading","preventDefault","setTimeout","handleSetDirty","prop","newDirty","isValidUsername","isValidPassword","length","Form","Col","FormGroup","valid","invalid","FormFeedback","RegisterForm","onRegister","setEmail","setName","lastName","setLastName","setTelephone","setItem","clearForm","isValidEmail","validator","isEmail","isValidName","isValidTelephone","RegisterLoginTab","loginIconColor","registerIconColor","MainLoader","Notfound","App","showRegisterLoginTab","setShowRegisterLoginTab","alertVisible","setAlertVisible","alertMessage","setAlertMessage","alertColor","setAlertColor","appLoading","setAppLoading","setIsUserLoggedIn","setUser","getUser","Alert","removeItem","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.33256d98.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle\r\n  } from 'reactstrap';\r\n  \r\nimport './ProductCard.css';\r\n\r\nfunction ProductCard(props) {\r\n    return (\r\n        <div className={`ProductCard m-1 p-2 ${props.selected}`} onClick={() => props.onClick(props)}>\r\n            <Card style={{ width: '18rem' }}>\r\n                <CardImg top width=\"100%\" src={props.imageUrl} alt={props.description} />\r\n                <CardBody>\r\n                    <CardTitle>{props.category}</CardTitle>\r\n                    <CardText>\r\n                        {\r\n                            props.description\r\n                        }\r\n                    </CardText>\r\n                    <CardText>\r\n                        {\r\n                            `RD$${props.price}`\r\n                        }\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard;","import React from \"react\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nfunction ProductTable(props) {\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Categoría</th>\r\n          <th>Descripción</th>\r\n          <th>Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.products.map((product) => {\r\n          return <tr key={product.id} onClick={() => props.onClick(product)}>\r\n                    <td>{product.id}</td>\r\n                    <td>{product.category}</td>\r\n                    <td>{product.description}</td>\r\n                    <td>{product.price}</td>\r\n                </tr>;\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default ProductTable;\r\n","import React from \"react\";\r\n\r\nimport './Toolbar.css';\r\n\r\nfunction Toolbar(props) {\r\n  return (\r\n    <div className=\"Toolbar p-2 border rounded\">\r\n      <div className=\"searchInputContainer p-1\">\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"inputGroupPrepend2\">\r\n                <i className=\"fa fa-search\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n                onChange={props.onSearch}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Buscar\"\r\n                aria-describedby=\"inputGroupPrepend2\"\r\n                required\r\n            />\r\n          </div>\r\n      </div>\r\n\r\n        {\r\n            props.noActionButtons ? null : <ActionButtons {...props} />\r\n        }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ActionButtons(props) {\r\n    return (\r\n        <div className=\"actionButtonsContainer p-1\">\r\n        <button onClick={props.onEditClick} disabled={props.disabled} className=\"btn btn-secondary mr-1\" title=\"Editar Producto\">\r\n          <i className=\"fa fa-pencil\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onAddClick} className=\"btn btn-info mr-1\" title=\"Agregar Product\">\r\n          <i className=\"fa fa-plus\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onDeleteClick} disabled={props.disabled} className=\"btn btn-danger\" title=\"Borrar Product\">\r\n          <i className=\"fa fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar;","\r\nconst ENVIRONMENTS = {\r\n    DEV: 'dev',\r\n    QA: 'qa',\r\n    PROD: 'prod'\r\n};\r\n\r\nconst STATUS = {\r\n    SUCCESS: 'SUCCESS',\r\n    ERROR: 'ERROR'\r\n};\r\n\r\nconst Deliverypp = {\r\n    env: ENVIRONMENTS.DEV,\r\n    getPath() {\r\n        switch(this.env) {\r\n            case ENVIRONMENTS.DEV:\r\n                return '';\r\n            case ENVIRONMENTS.QA:\r\n            case ENVIRONMENTS.PROD:\r\n                return ''\r\n            default:\r\n                console.error('Wrong operation.');\r\n                break;\r\n        }\r\n    },\r\n    STATUS\r\n};\r\n\r\nexport default  Deliverypp;","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst ProductService = {\r\n    async handleResponse(response) {\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getProducts() {\r\n\r\n        const response = await axios.get(`${basePath}/api/products`);\r\n\r\n        return this.handleResponse(response);\r\n\r\n    },\r\n    \r\n    async getProductById(productId) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.get(`${basePath}/api/products/${productId}`, { headers });\r\n\r\n        return this.handleResponse(response);\r\n    \r\n    },\r\n    \r\n    async addProduct(product) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.post(`${basePath}/api/products`, product, { headers });\r\n\r\n        return this.handleResponse(response);\r\n\r\n    },\r\n    async updateProduct(product) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.put(`${basePath}/api/products`, product, { headers });\r\n\r\n        return this.handleResponse(response);\r\n\r\n    },\r\n    async deleteProductById(productId) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.delete(`${basePath}/api/products/${productId}`, { headers });\r\n\r\n        return this.handleResponse(response);\r\n\r\n\r\n    }\r\n};\r\n\r\nexport default ProductService;","import React from 'react';\r\n\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nfunction DModal(props) {\r\n    return (\r\n        <div>\r\n        <Modal isOpen={props.showModal}>\r\n            <ModalHeader toggle={props.toggle}>{props.title}</ModalHeader>\r\n            <ModalBody>\r\n                {\r\n                    props.children\r\n                }\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"success\" onClick={props.onSave}>Guardar</Button>{' '}\r\n            <Button color=\"secondary\" onClick={props.onCancel}>Cancelar</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DModal;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductTable from \"./ProductTable\";\r\n\r\nimport \"./ProductView.css\";\r\n\r\nimport Toolbar from '../../common/Toolbar';\r\n\r\nimport ProductService from '../../../services/ProductService';\r\n\r\nimport Modal from '../../common/Modal';\r\n\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Input, Label\r\n  } from 'reactstrap';\r\n\r\n\r\nfunction ProductView({ showAlert }) {\r\n  const [cardView, setCardView] = useState(true);\r\n  const [selectedProductId, setSelectedProductId] = useState(-1);\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [filterableProducts, setFilterableProducts] = useState([]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [action, setAction] = useState('add');\r\n\r\n  const [selectedProduct, setSelectedProduct] = useState({description: '', price: 0, imageUrl: '', category: ''});\r\n\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const getProducts = async () => {\r\n\r\n    const responseData = await ProductService.getProducts();\r\n    if(responseData && responseData.success) {\r\n      const products = responseData.response;\r\n      setProducts(products);\r\n        setFilterableProducts(products);\r\n        \r\n    } else {\r\n      console.log('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error obteniendo productos.'});\r\n    }\r\n\r\n  };\r\n\r\n  const createProduct = async () => {\r\n\r\n    const responseData = await ProductService.addProduct(selectedProduct);\r\n\r\n    if(responseData && responseData.success) {\r\n\r\n      const newProduct = responseData.response;\r\n\r\n      const newProducts = [newProduct, ...products];\r\n\r\n      setProducts(newProducts);\r\n      filterProducts(newProducts, filter);\r\n      showAlert({ color: 'success', message: 'Producto agregado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.log('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error agregando producto.'});\r\n    }\r\n    \r\n  };\r\n  const updateProduct = async () => {\r\n\r\n    const responseData = await ProductService.updateProduct(selectedProduct);\r\n\r\n    if(responseData && responseData.success) {\r\n\r\n      const newProduct = responseData.response;\r\n\r\n      const newProducts = [...products];\r\n\r\n      newProducts.forEach(product => {\r\n        if(product.id === newProduct.id) {\r\n          product.description = newProduct.description;\r\n          product.price = newProduct.price;\r\n          product.category = newProduct.category;\r\n          product.imageUrl = newProduct.imageUrl;\r\n          return false;\r\n        }\r\n      });\r\n\r\n      setProducts(newProducts);\r\n      filterProducts(newProducts, filter);\r\n      showAlert({ color: 'success', message: 'Producto agregado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.log('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error agregando producto.'});\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    getProducts();\r\n\r\n  }, []);\r\n\r\n  const onProductCardClick = product => {\r\n    setSelectedProduct(product);\r\n    setSelectedProductId(product.id);\r\n  };\r\n\r\n  const getProductCards = () => {\r\n    return filterableProducts.map((product) => {\r\n        const selected = product.id === selectedProductId ? 'selected' : '';\r\n        return <ProductCard key={product.id} {...product} onClick={onProductCardClick} selected={selected} />;\r\n    });\r\n  };\r\n\r\n  const getProductTable = () => {\r\n    return <ProductTable products={filterableProducts} />;\r\n  };\r\n\r\n  const showEditProductForm = () => {\r\n\r\n    setAction('edit');\r\n\r\n    setShowModal(true);\r\n\r\n  }\r\n\r\n  const showAddProductForm = () => {\r\n\r\n    setAction('add');\r\n    setSelectedProduct({description: '', price: 0, imageUrl: '', category: ''});\r\n    setShowModal(true);\r\n\r\n  }\r\n\r\n  const handleDeleteProduct = async () => {\r\n\r\n    const deleteProductConfirm = window.confirm('Seguro quiere borrar el producto seleccionado?');\r\n\r\n    if(deleteProductConfirm) {\r\n\r\n      const responseData = await ProductService.deleteProductById(selectedProductId);\r\n\r\n      if(responseData && responseData.success) {\r\n        showAlert({ color: 'success', message: 'Producto eliminado.'});\r\n        const filteredProducts = products.filter(product => product.id !== selectedProductId);\r\n        setProducts(filteredProducts);\r\n        filterProducts(filteredProducts, filter);\r\n      } else {\r\n        console.log('Error deleting product.')\r\n        showAlert({ color: 'warning', message: 'Error eliminando producto.'});\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const filterProducts = (products, value) => {\r\n    if(value) {\r\n\r\n      const filteredProducts = products.filter(product => {\r\n\r\n          const keys = Object.keys(product);\r\n\r\n          for(let key of keys) {\r\n\r\n              if(key === 'category' || key === 'price' || key === 'description') {\r\n                  let propValue = product[key];\r\n                  if(propValue) {\r\n                      propValue = '' + propValue;\r\n                      if(propValue.includes(value)) {\r\n                          return true;\r\n                      }\r\n                  }\r\n              }\r\n              \r\n          }\r\n\r\n          return false;\r\n\r\n      });\r\n      setFilterableProducts(filteredProducts);\r\n\r\n  } else {\r\n      setFilterableProducts(products);\r\n  }\r\n  }\r\n\r\n  const handleSearch = (event) => {\r\n\r\n    const value = event.target.value;\r\n\r\n    setFilter(value);\r\n    filterProducts(products, value);\r\n\r\n  }\r\n\r\n  const onSave = () => {\r\n\r\n    switch(action) {\r\n      case 'add':\r\n        createProduct();\r\n        break;\r\n      case 'edit':\r\n        updateProduct();\r\n        break;\r\n      default:\r\n        console.error('Wrong operation.');\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setShowModal(false);\r\n  }\r\n\r\n  const toggle = () => {\r\n    setShowModal(!showModal);\r\n  }\r\n\r\n  const getActionDescription = () => {\r\n      switch(action) {\r\n        case 'add':\r\n            return 'Agregar un producto';\r\n        case 'edit':\r\n            return 'Editar un producto';\r\n        default:\r\n          console.error('Wrong operation.');\r\n          break;\r\n      }\r\n  }\r\n\r\n  const onProductUpdate = product => {\r\n\r\n    setSelectedProduct(product);\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"ProductView\">\r\n    <Modal\r\n        onSave={onSave}\r\n        onCancel={onCancel}\r\n        showModal={showModal}\r\n        toggle={toggle}\r\n        title={getActionDescription()}\r\n    >\r\n        <ProductActionForm imageUrl={'product.png'} onProductUpdate={onProductUpdate} product={selectedProduct} />\r\n    </Modal>\r\n\r\n      {false && (\r\n        <div>\r\n          <button className=\"btn btn-primary\" onClick={() => setCardView(true)}>\r\n            Card View\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setCardView(false)}\r\n          >\r\n            Card Table\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n        <Toolbar\r\n            onSearch={handleSearch}\r\n            onEditClick={showEditProductForm}\r\n            onAddClick={showAddProductForm}\r\n            onDeleteClick={handleDeleteProduct}\r\n            disabled={selectedProductId === -1}\r\n        />\r\n\r\n      <div>\r\n        {cardView ? (\r\n          <div className=\"ProductCardContainer\">{getProductCards()}</div>\r\n        ) : (\r\n          <div className=\"ProductTableContainer\">{getProductTable()}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductActionForm(props) {\r\n\r\n\r\n    const onImageUrlChange = (e) => {\r\n\r\n        let value = e.target.value;\r\n\r\n        if(!value) {\r\n            value = 'product.png';\r\n        }\r\n\r\n        const product = {...props.product};\r\n\r\n        product.imageUrl = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.category = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onDescriptionChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.description = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onPriceChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.price = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const imageUrl = props.product.imageUrl ? props.product.imageUrl : 'product.png';\r\n\r\n    return (\r\n        <div>\r\n        <Card>\r\n            <CardImg top width=\"100%\" src={imageUrl} />\r\n            <CardBody>\r\n                <CardTitle>\r\n                    <Input type=\"text\" name=\"category\" id=\"category\" placeholder=\"Categoría\" value={props.product.category} onChange={onCategoryChange} />\r\n                </CardTitle>\r\n                <CardText>\r\n                    <Label for=\"imageUrl\">URL de la imagen</Label>\r\n                    <Input type=\"url\" name=\"imageUrl\" id=\"imageUrl\"  value={imageUrl} onChange={onImageUrlChange}/>\r\n                </CardText>\r\n                <CardText>\r\n                    <Label for=\"description\">Descripción</Label>\r\n                    <Input type=\"textarea\" name=\"description\" id=\"description\" value={props.product.description} onChange={onDescriptionChange} />\r\n                </CardText>\r\n                <CardText>\r\n                    <Input type=\"number\" name=\"price\" id=\"price\" placeholder=\"Precio\"  value={props.product.price} onChange={onPriceChange}/>\r\n                </CardText>\r\n            </CardBody>\r\n        </Card>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProductView;\r\n","import React from \"react\";\r\n\r\nimport { Table } from \"reactstrap\";\r\n\r\nimport './OrderView.css';\r\n\r\nfunction OrderTable(props) {\r\n  return (\r\n    <div className=\"OrderTable\">\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Usuario</th>\r\n            <th>Email</th>\r\n            <th>Teléfono</th>\r\n            <th>Fecha</th>\r\n            <th>Total</th>\r\n            <th>Estado</th>\r\n            <th>Comentario</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.orders.map((order) => {\r\n            return (\r\n              <tr className=\"order-row\" key={order.id} onClick={() => props.onRowClick(order)}>\r\n                <td>{order.id}</td>\r\n                <td>{order.user.username}</td>\r\n                <td>{order.user.email}</td>\r\n                <td>{order.user.telephone}</td>\r\n                <td>{order.createdAt}</td>\r\n                <td>{order.total}</td>\r\n                <td>{order.status}</td>\r\n                <td>{order.comment}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderTable;\r\n","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst OrderService = {\r\n    generateErrorResponse(message) {\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    handleResponse(response) {\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getOrders() {\r\n\r\n        try {\r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n\r\n            const response = await axios.get(`${basePath}/api/orders`, { headers });\r\n\r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n    \r\n    async getOrderById(orderId) {\r\n\r\n        try {\r\n\r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/orders/${orderId}`, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n    \r\n    },\r\n    \r\n    async addOrder(order) {\r\n\r\n        try {\r\n            \r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.post(`${basePath}/api/orders`, order, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n    \r\n};\r\n\r\nexport default OrderService;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport OrderTable from \"./OrderTable\";\r\n\r\nimport Toolbar from \"../../common/Toolbar\";\r\n\r\nimport OrderService from '../../../services/OrderService';\r\n\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Button, Modal, ModalHeader, ModalBody, ModalFooter, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nimport './OrderView.css';\r\n\r\nfunction OrderView({ showAlert }) {\r\n  const [orders, setOrders] = useState([]);\r\n  const [filterableOrders, setFilterableOrders] = useState([]);\r\n\r\n  const [selectedOrder, setSelectedOrder] = useState({orderLines: [], locations: []});\r\n  const [showOrderedProductsModal, setShowOrderedProductsModal] = useState(false);\r\n\r\n  const getOrders = async () => {\r\n\r\n    const responseData = await OrderService.getOrders();\r\n\r\n    if(responseData && responseData.success) {\r\n      const orders = responseData.response;\r\n        setOrders(orders);\r\n        setFilterableOrders(orders);\r\n    } else {\r\n      console.log('Error getting orders.')\r\n      showAlert({ color: 'warning', message: 'Error getting orders.'});\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n  const handleRowClick = order => {\r\n    setSelectedOrder(order);\r\n    setShowOrderedProductsModal(true);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value;\r\n    if(value) {\r\n        const filteredOrders = orders.filter(order => {\r\n            const keys = Object.keys(order);\r\n            for(let key of keys) {\r\n                let propValue = order[key];\r\n                if(propValue) {\r\n                    propValue = '' + propValue;\r\n                    if(propValue.includes(value)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        setFilterableOrders(filteredOrders);\r\n    } else {\r\n        setFilterableOrders(orders);\r\n    }\r\n\r\n  }\r\n\r\n  const onOrderedProductsModalClose = () => {\r\n    setShowOrderedProductsModal(false);\r\n  }\r\n\r\n  const toggle = () => {\r\n    setShowOrderedProductsModal(!showOrderedProductsModal);\r\n  }\r\n\r\n  return (\r\n    <div className=\"OrderView\">\r\n      <WrappedAllLocationsMapContainer locations={orders.map(order => order.location)} />\r\n      <ProductDetailsModal\r\n        showModal={showOrderedProductsModal}\r\n        toggleShowModal={toggle}\r\n        onClose={onOrderedProductsModalClose}\r\n        orderLines={selectedOrder.orderLines}\r\n        orderId={selectedOrder.id}\r\n        location={selectedOrder.location}\r\n       />\r\n      <div>\r\n        <Toolbar\r\n        onSearch={handleSearch}\r\n          noActionButtons={true}\r\n        />\r\n      </div>\r\n      <div className=\"Container mt-1\">\r\n        <OrderTable\r\n            orders={filterableOrders}\r\n            onRowClick={handleRowClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductDetailsModal({ onClose, showModal, toggleShowModal, orderLines, orderId, location }) {\r\n\r\n  const [activeTab, setActiveTab] = useState('orderProductsDetails');\r\n\r\n  const toggle = tab => {\r\n      if(activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal}>\r\n        <ModalHeader toggle={toggleShowModal}>\r\n          <CardText>Order #: {orderId}</CardText>\r\n          <CardText>Productos ordenados</CardText>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className={activeTab === \"orderProductsDetails\" ? \"active\" : \"\"}\r\n                  onClick={() => {\r\n                    toggle(\"orderProductsDetails\");\r\n                  }}\r\n                >\r\n                  Productos\r\n                </NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem>\r\n                <NavLink\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className={activeTab === \"orderProductsLocation\" ? \"active\" : \"\"}\r\n                  onClick={() => {\r\n                    toggle(\"orderProductsLocation\");\r\n                  }}\r\n                >\r\n                  Localización\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n              <TabPane tabId=\"orderProductsDetails\">\r\n              <OrderedProductDetailsView orderLines={orderLines} />\r\n              </TabPane>\r\n              <TabPane tabId=\"orderProductsLocation\">\r\n                <WrappedMap location={location} />\r\n              </TabPane>\r\n            </TabContent>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"success\" onClick={onClose}>\r\n            Cerrar\r\n          </Button>{\" \"}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction OrderedProductDetailsView({orderLines}) {\r\n\r\n  const [mappedOrderLines, setMappedOrderLines] = useState(orderLines.map(orderLine => ({ ...orderLine, imageHidden: true })));\r\n\r\n  const toggleImageHidden = (id) => {\r\n    console.log('id', id)\r\n    const newMappedOrderLines = mappedOrderLines.map(orderLine => {\r\n      if(orderLine.product.id === id) {\r\n        orderLine.imageHidden = !orderLine.imageHidden;\r\n      }\r\n      return orderLine;\r\n    });\r\n    setMappedOrderLines(newMappedOrderLines);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {mappedOrderLines.map(({ quantity, product, imageHidden }) => (\r\n        <Card key={product.id} style={{ marginBottom: 4, marginTop: 4 }}>\r\n          \r\n          {\r\n            imageHidden && <div className=\"imageIconContainer text-center\" title=\"Mostrar image del producto\" onClick={() => toggleImageHidden(product.id)}><i class=\"fas fa-image\" style={{fontSize: 24, color: 'grey'}}></i></div>\r\n          }\r\n\r\n          {\r\n            !imageHidden && <CardImg\r\n                              top\r\n                              width=\"100%\"\r\n                              src={product.imageUrl}\r\n                              alt={product.description}\r\n                              onClick={() => toggleImageHidden(product.id)}\r\n                              title=\"Ocultar imagel del producto\"\r\n                              className=\"cardImgElem\"\r\n                            />\r\n          }\r\n          \r\n          <CardBody>\r\n            <CardTitle>{product.description}</CardTitle>\r\n            <CardText>{`Precio RD$${product.price}`}</CardText>\r\n            <CardText>{`Cantidad ${quantity}`}</CardText>\r\n            <CardText>{`Total RD$${product.price * quantity}`}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst style = {\r\n  position: 'relative',  \r\n  width: '100%',\r\n  height: '100%'\r\n}\r\n\r\nfunction MapContainer({ google, location }) {\r\n\r\n  return (\r\n    <div style={{height: 400, padding: 0, position: 'relative'}}>\r\n      <Map\r\n        google={google}\r\n        zoom={14}\r\n        style={style}\r\n        initialCenter={{\r\n          lat: location.latitude,\r\n          lng: location.longitude\r\n        }}>\r\n        <Marker name={'Current location'} />\r\n      </Map>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nconst WrappedMap = GoogleApiWrapper({\r\n  apiKey: ('AIzaSyC1wC2ImcL1s4wITbDbM-g3nLK01fJHGkc')\r\n})(MapContainer);\r\n\r\nfunction AllLocationsMapContainer({ google, locations }) {\r\n\r\n  return (\r\n    <div style={{height: 400, padding: 0, position: 'relative'}}>\r\n      <Map\r\n        google={google}\r\n        zoom={11}\r\n        style={style}\r\n        initialCenter={{\r\n          lat: 18.486057,\r\n          lng: -69.931213\r\n        }}\r\n      >\r\n        {\r\n          locations.map(location => (\r\n            <Marker\r\n              title={'The marker`s title will appear as a tooltip.'}\r\n              name={'SOMA'}\r\n              position={{lat: location.latitude, lng: location.longitude}}\r\n            />\r\n          ))\r\n        }\r\n      </Map>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst WrappedAllLocationsMapContainer = GoogleApiWrapper({\r\n  apiKey: ('AIzaSyC1wC2ImcL1s4wITbDbM-g3nLK01fJHGkc')\r\n})(AllLocationsMapContainer);\r\n \r\nexport default OrderView;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport ProductCard from './ProductCard';\r\n\r\nimport ProductService from '../../../services/ProductService';\r\n\r\nimport './ProductView.css';\r\n\r\nfunction OrderProductsView({ showAlert }) {\r\n\r\n    const [products, setProducts ] = useState([]);\r\n    const [filterableProducts, setFilterableProducts ] = useState([]);\r\n    const [selectedProductId, setSelectedProductId] = useState(-1);\r\n    const [selectedProduct, setSelectedProduct] = useState({});\r\n\r\n    const getProducts = async () => {\r\n\r\n        const responseData = await ProductService.getProducts();\r\n\r\n        if(responseData.success) {\r\n            const products = responseData.response;\r\n            setProducts(products);\r\n              setFilterableProducts(products);\r\n              \r\n          } else {\r\n            console.log('Error getting products')\r\n            showAlert({ color: 'warning', message: 'Error obteniendo productos.'});\r\n          }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProducts();\r\n    }, []);\r\n\r\n    const onProductCardClick = product => {\r\n        setSelectedProduct(product);\r\n        setSelectedProductId(product.id);\r\n    };\r\n\r\n    const getProductCards = () => {\r\n        return filterableProducts.map((product) => {\r\n            const selected = product.id === selectedProductId ? 'selected' : '';\r\n            return <ProductCard key={product.id} {...product} onClick={onProductCardClick} selected={selected} />;\r\n        });\r\n      };\r\n\r\n    return (\r\n        <div className=\"ProductCardContainer\">\r\n\r\n            {\r\n                getProductCards()\r\n            }\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OrderProductsView;","import React, { useState } from 'react';\r\n\r\nimport ProductView from './product/ProductView';\r\nimport OrderView from './order/OrderView';\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport OrderProductsView from './product/OrderProductsView';\r\n\r\nfunction DeliveryppTab(props) {\r\n\r\n    const [activeTab, setActiveTab] = useState('available_products');\r\n\r\n    const toggle = tab => {\r\n        if(activeTab !== tab) setActiveTab(tab);\r\n    };\r\n\r\n    const getAdminTabNavItems = () => {\r\n        return (\r\n            <>\r\n                <NavItem>\r\n                    <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'product' ? 'active' : '' } onClick={() => { toggle('product'); }}>Productos</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'orders' ? 'active' : '' } onClick={() => { toggle('orders'); }} >Ordenes</NavLink>\r\n                </NavItem>\r\n            </>  \r\n        );\r\n    };\r\n\r\n    const getAdminTabPanes = () => {\r\n        return (\r\n            <>\r\n                <TabPane tabId=\"product\">\r\n                    <ProductView showAlert={props.showAlert} />\r\n                </TabPane>\r\n                <TabPane tabId=\"orders\">\r\n                    <OrderView showAlert={props.showAlert} />\r\n                </TabPane>\r\n            </>\r\n        )\r\n    }\r\n\r\n  return (\r\n    <div className=\"container-md p-1 border mb-8\">\r\n\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'available_products' ? 'active' : '' } onClick={() => { toggle('available_products'); }}>Productos Disponibles</NavLink>\r\n        </NavItem>\r\n        {\r\n            props.isUserLoggedIn && props.user.role === 'ADMIN' && getAdminTabNavItems()\r\n        }\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"available_products\">\r\n          <OrderProductsView showAlert={props.showAlert} />\r\n        </TabPane>\r\n        {\r\n            props.isUserLoggedIn && props.user.role === 'ADMIN' && getAdminTabPanes()\r\n        }\r\n      </TabContent>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryppTab;","import React from \"react\";\r\n\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Button,\r\n  } from 'reactstrap';\r\n\r\n\r\nfunction NavBar({ onSignInClick, onLogOutClick, isUserLoggedIn, user}) {\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">\r\n            <span style={{color: '#940205'}}>Deliverypp</span>\r\n        </NavbarBrand>\r\n        <Nav className=\"mr-auto\" navbar></Nav>\r\n        {\r\n          /*\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                  <NavLink href=\"/products\">Productos</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          */\r\n        }\r\n        \r\n        {\r\n            isUserLoggedIn ?\r\n                  <div>\r\n                      <span className=\"mr-1\">{user.name}</span>\r\n                      <Button outline title=\"Salir\" onClick={onLogOutClick} className=\"mr-1\"><i className=\"fas fa-sign-out-alt\"></i></Button>  \r\n                  </div>\r\n                :\r\n                  <div>\r\n                      <Button outline title=\"Entrar\" onClick={onSignInClick} className=\"mr-1\"><i className=\"fas fa-sign-in-alt\"></i></Button>\r\n                  </div>\r\n        }\r\n\r\n      </Navbar>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        © 2020 Copyright:\r\n        <a href=\"/\"> Deliverypp.com</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst AuthService = {\r\n    generateErrorResponse(error) {\r\n\r\n        let message = error.message;\r\n\r\n        if(message.includes('401')) {\r\n            message = \"Credenciales incorrectas. Verifique que su usuario y contraseña son correctos.\"\r\n        }\r\n\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    handleResponse(response) {\r\n        if(response && response.data) {\r\n\r\n            const deliveryppResponse = response.data;\r\n\r\n            return deliveryppResponse;\r\n\r\n        }\r\n    },\r\n    async register(user) {\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/register`, user);\r\n\r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n\r\n        }\r\n\r\n    },\r\n    async login(user) {\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/login`, user);\r\n\r\n            const responseData = this.handleResponse(response);\r\n\r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n            \r\n            return this.generateErrorResponse(e);\r\n\r\n        }\r\n        \r\n    },\r\n    async getUserByToken(token) {\r\n\r\n        try {\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/auth/${token}`, headers);\r\n    \r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n            \r\n        }\r\n\r\n    },\r\n    async logout(token) {\r\n\r\n        try {\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/auth/${token}`, headers);\r\n    \r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n};\r\n\r\nexport default AuthService;","import React from 'react';\r\n\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport './Loader.css';\r\n\r\nfunction Loader(props) {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <Spinner color=\"light\"  style={{ width: '4rem', height: '4rem' }} />\r\n            <span style={{color: '#fff'}}> Espere...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { useState } from 'react';\r\n\r\nimport {\r\n    Col, Form,\r\n    FormGroup, Label, Input,\r\n    Button,\r\n    FormFeedback \r\n} from 'reactstrap';\r\n\r\nimport AuthService from '../../../services/AuthService';\r\n\r\nimport Loader from '../../common/Loader';\r\n\r\nfunction LoginForm({ onLogin = () => {} }) {\r\n\r\n    const [dirty, setDirty] = useState({\r\n        username: false,\r\n        password: false,\r\n    });\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const login = async e => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            username,\r\n            password\r\n        };\r\n\r\n        setLoading(true);\r\n\r\n        const responseData = await AuthService.login(user);\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            onLogin(responseData);\r\n        }, 1000);\r\n\r\n        // TODO: close form\r\n\r\n    }\r\n\r\n    const onUsernameInputChange = e => {\r\n\r\n        handleSetDirty('username');\r\n\r\n        const input = e.target;\r\n\r\n        const username = input.value;\r\n\r\n        setUsername(username);\r\n\r\n    }\r\n\r\n    const onPasswordInputChange = e => {\r\n\r\n        handleSetDirty('password');\r\n\r\n        const input = e.target;\r\n\r\n        const password = input.value;\r\n\r\n        setPassword(password);\r\n\r\n    }\r\n\r\n    const handleSetDirty = (prop) => {\r\n\r\n        if(!dirty[prop]) {\r\n            const newDirty = {...dirty};\r\n            newDirty[prop] = true;\r\n            setDirty(newDirty);\r\n        }\r\n\r\n    }\r\n\r\n    const isValidUsername = !!username;\r\n    const isValidPassword = !!password && password.length > 5;\r\n\r\n    const isFormValid = () => {\r\n        return isValidUsername && isValidPassword;\r\n    }\r\n\r\n    return (\r\n\r\n        <Form className=\"form position-relative p-2\">\r\n            {\r\n                loading && <Loader />\r\n            }\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"username\">Usuario</Label>\r\n                    <Input\r\n                        valid={dirty.username && isValidUsername}\r\n                        invalid={dirty.username && !isValidUsername}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        value={username}\r\n                        onChange={onUsernameInputChange}\r\n                    />\r\n                    {\r\n                        dirty.username && <FormFeedback>El nombre de usuario no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Contraseña</Label>\r\n                    <Input\r\n                        valid={dirty.password && isValidPassword}\r\n                        invalid={dirty.password && !isValidPassword}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"examplePassword\"\r\n                        placeholder=\"********\"\r\n                        value={password}\r\n                        onChange={onPasswordInputChange}\r\n                    />\r\n                    {\r\n                        dirty.password && <FormFeedback>Introduce una contraseña de más de 5 caracteres.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Button disabled={!isFormValid()} onClick={login}>Entrar</Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\n\r\nimport {\r\n    Col, Form,\r\n    FormGroup, Label, Input,\r\n    Button, FormFeedback \r\n} from 'reactstrap';\r\n\r\nimport validator from 'validator';\r\n\r\nimport AuthService from '../../../services/AuthService';\r\n\r\nimport Loader from '../../common/Loader';\r\n\r\nfunction RegisterForm({onRegister = () => {}}) {\r\n\r\n    const [dirty, setDirty] = useState({\r\n        username: false,\r\n        email: false,\r\n        password: false,\r\n        name: false,\r\n        telephone: false \r\n    });\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [telephone, setTelephone] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const register = async e => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            name,\r\n            username,\r\n            email,\r\n            password,\r\n            lastName,\r\n            telephone\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const response = await AuthService.register(user);\r\n\r\n        if(response && response.token) {\r\n            localStorage.setItem('deliverypp_user_login_token', response.token);\r\n        }\r\n\r\n        clearForm();\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            onRegister(response);\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    const clearForm = () => {\r\n\r\n        setUsername('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setName('');\r\n        setLastName('');\r\n        setTelephone('');\r\n\r\n        setDirty({\r\n            username: false,\r\n            email: false,\r\n            password: false,\r\n            name: false,\r\n            telephone: false \r\n        });\r\n\r\n    }\r\n\r\n    const onUsernameInputChange = e => {\r\n\r\n        handleSetDirty('username');\r\n\r\n        const input = e.target;\r\n\r\n        const username = input.value;\r\n\r\n        setUsername(username);\r\n\r\n    }\r\n\r\n    const onEmailInputChange = e => {\r\n\r\n        handleSetDirty('email');\r\n\r\n        const input = e.target;\r\n\r\n        const email = input.value;\r\n\r\n        setEmail(email);\r\n\r\n    }\r\n\r\n    const onPasswordInputChange = e => {\r\n\r\n        handleSetDirty('password');\r\n\r\n        const input = e.target;\r\n\r\n        const password = input.value;\r\n\r\n        setPassword(password);\r\n\r\n    }\r\n\r\n    const onNameInputChange = e => {\r\n\r\n        handleSetDirty('name');\r\n\r\n        const input = e.target;\r\n\r\n        const name = input.value;\r\n\r\n        setName(name);\r\n    }\r\n\r\n    const onLastNameInputChange = e => {\r\n        const input = e.target;\r\n\r\n        const lastName = input.value;\r\n\r\n        setLastName(lastName);\r\n    }\r\n\r\n    const onTelephoneInputChange = e => {\r\n\r\n        handleSetDirty('telephone');\r\n\r\n        const input = e.target;\r\n\r\n        const telephone = input.value;\r\n\r\n        setTelephone(telephone);\r\n    }\r\n\r\n    const handleSetDirty = (prop) => {\r\n\r\n        if(!dirty[prop]) {\r\n            const newDirty = {...dirty};\r\n            newDirty[prop] = true;\r\n            setDirty(newDirty);\r\n        }\r\n\r\n    }\r\n\r\n    const isValidEmail = !!email && validator.isEmail(email);\r\n    const isValidUsername = !!username;\r\n    const isValidName = !!name;\r\n    const isValidPassword = !!password && password.length > 5;\r\n    const isValidTelephone = !!telephone && telephone.length === 10;\r\n\r\n    const isFormValid = () => {\r\n        return isValidEmail && isValidUsername && isValidName && isValidPassword && isValidTelephone;\r\n    }\r\n\r\n    return (\r\n\r\n        <Form className=\"form position-relative p-2\">\r\n            {\r\n                loading && <Loader />\r\n            }\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"register_username\">Usuario</Label>\r\n                    <Input\r\n                        valid={dirty.username && isValidUsername}\r\n                        invalid={dirty.username && !isValidUsername}\r\n                        type=\"text\"\r\n                        name=\"register_username\"\r\n                        id=\"register_username\"\r\n                        required\r\n                        value={username}\r\n                        onChange={onUsernameInputChange}\r\n                    />\r\n                    {\r\n                        dirty.username && <FormFeedback>El nombre de usuario no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input\r\n                        valid={dirty.email && isValidEmail}\r\n                        invalid={dirty.email && !isValidEmail}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"exampleEmail\"\r\n                        placeholder=\"youremail@email.com\"\r\n                        required\r\n                        value={email}\r\n                        onChange={onEmailInputChange}\r\n                    />\r\n                    {\r\n                        dirty.email && <FormFeedback>Introduce un email válido.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Contraseña</Label>\r\n                    <Input\r\n                        valid={dirty.password && isValidPassword}\r\n                        invalid={dirty.password && !isValidPassword}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"********\"\r\n                        value={password}\r\n                        onChange={onPasswordInputChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.password && <FormFeedback>Introduce una contraseña de más de 5 caracteres.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"name\">Nombre</Label>\r\n                    <Input\r\n                        valid={dirty.name && isValidName}\r\n                        invalid={dirty.name && !isValidName}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        value={name}\r\n                        onChange={onNameInputChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.name && <FormFeedback>El nombre no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"lastname\">Apellido</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"lastname\"\r\n                        id=\"lastname\"\r\n                        value={lastName}\r\n                        onChange={onLastNameInputChange}\r\n                        required\r\n                    />\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"telephone\">Teléfono</Label>\r\n                    <Input\r\n                        valid={dirty.telephone && isValidTelephone}\r\n                        invalid={dirty.telephone && !isValidTelephone}\r\n                        type=\"number\"\r\n                        name=\"telephone\"\r\n                        id=\"telephone\"\r\n                        value={telephone}\r\n                        onChange={onTelephoneInputChange}\r\n                        placeholder=\"8095005000\"\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.name && <FormFeedback>Introduce un teléfono válido.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Button disabled={!isFormValid()} onClick={register}>Registrarse</Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default RegisterForm;","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nimport LoginForm from './LoginForm';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nimport './RegisterLoginTab.css';\r\n\r\nfunction RegisterLoginTab(props) {\r\n\r\n  const [activeTab, setActiveTab] = useState('login');\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  let loginIconColor = 'grey';\r\n  let registerIconColor = 'grey';\r\n\r\n  if(activeTab === 'login') {\r\n    loginIconColor = props.color;\r\n  } else if(activeTab === 'register') {\r\n    registerIconColor = props.color;\r\n  }\r\n\r\n  const onRegister = (responseData) => {\r\n\r\n    if(!responseData) {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el registro. Trate luego.'});\r\n    } else if(responseData && !responseData.success) {\r\n      props.showAlert({ color: 'warning', message: responseData.message});\r\n    } if(responseData && responseData.success) {\r\n      setActiveTab('login');\r\n    } else {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el registro. Trate luego.'});\r\n    }\r\n\r\n  }\r\n\r\n  const onLogin = (responseData) => {\r\n\r\n    if(!responseData) {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el ingreso. Trate luego.'});\r\n    } else if(responseData && !responseData.success) {\r\n      props.showAlert({ color: 'warning', message: responseData.message});\r\n    } if(responseData && responseData.success && responseData.response) {\r\n        const response = responseData.response;\r\n        if(response.token) {\r\n            localStorage.setItem('deliverypp_user_login_token',  response.token);\r\n            props.toggle();\r\n            props.onLogin(response.user);\r\n        }\r\n    } else {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el ingreso. Trate luego.'});\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"RegisterLoginTab\">\r\n      <Modal isOpen={props.showModal}>\r\n        <ModalHeader toggle={props.toggle}>Entrar</ModalHeader>\r\n        <ModalBody>\r\n          <Nav tabs>\r\n            <NavItem>\r\n              <NavLink\r\n                style={{ cursor: \"pointer\" }}\r\n                className={ activeTab === 'login' ? 'active' : '' }\r\n                onClick={() => { toggle(\"login\"); }}\r\n              >\r\n                Entrar <i className=\"fas fa-user\" style={{color: loginIconColor}}></i>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                style={{ cursor: \"pointer\" }}\r\n                className={ activeTab === 'register' ? 'active' : '' }\r\n                onClick={() => { toggle(\"register\"); }}\r\n              >\r\n                Registrarse <i className=\"fas fa-sign-in-alt\" style={{color: registerIconColor}}></i>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"login\">\r\n              <LoginForm onLogin={onLogin} color={props.color} />\r\n            </TabPane>\r\n            <TabPane tabId=\"register\">\r\n              <RegisterForm onRegister={onRegister} color={props.color} />\r\n            </TabPane>\r\n          </TabContent>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterLoginTab;\r\n","import React from 'react';\r\n\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport './Loader.css';\r\n\r\nfunction MainLoader(props) {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <Spinner type=\"grow\" color=\"dark\"  style={{ width: '4rem', height: '4rem' }} />\r\n            <span style={{color: '#fff'}}> Espere...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainLoader;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport DeliveryppTab from './components/deliverypp/DeliveryppTab';\nimport NavBar from './components/main/NavBar';\nimport Footer from './components/main/Footer';\n\nimport RegisterLoginTab from './components/main/auth/RegisterLoginTab';\n\nimport { Alert } from 'reactstrap';\n\nimport MainLoader from './components/common/MainLoader';\n\nimport AuthService from './services/AuthService';\n\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\n\nconst mainColor = '#940205';\n\nfunction App() {\n\n  const [showRegisterLoginTab, setShowRegisterLoginTab] = useState(false);\n  const [alertVisible, setAlertVisible] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('Registered');\n  const [alertColor, setAlertColor] = useState('info');\n  const [appLoading, setAppLoading] = useState(true);\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n\n    const token = localStorage.getItem('deliverypp_user_login_token');\n\n    const getUser = async () => {\n      if(token) {\n        const responseData = await AuthService.getUserByToken(token);\n\n        if(responseData && responseData.response) {\n          const user = responseData.response;\n          if(responseData.success) {\n            setUser(user);\n            setIsUserLoggedIn(true);\n          }\n        } else {\n          setIsUserLoggedIn(false);\n        }\n        setTimeout(() => { setAppLoading(false); }, 1000);\n      } else {\n  \n        setIsUserLoggedIn(false);\n        setTimeout(() => { setAppLoading(false); }, 1000);\n        setIsUserLoggedIn(false);\n\n      }\n    }\n\n    if(!isUserLoggedIn) {\n      getUser();\n    }\n    \n  }, [isUserLoggedIn]);\n\n  const toggleRegisterLoginTab = () => {\n    setShowRegisterLoginTab(!showRegisterLoginTab);\n  };\n\n  const showAlert = ({ color, message }) => {\n    setAlertColor(color);\n    setAlertMessage(message);\n    setAlertVisible(true);\n\n    setTimeout(() => {\n      setAlertColor('info');\n      setAlertVisible(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n\n  const onAlertDismiss = () => {\n    setAlertVisible(false);\n  };\n\n  const onLogOutClick = () => {\n\n    setAppLoading(true);\n\n    const token = localStorage.getItem('deliverypp_user_login_token');\n\n    AuthService.logout(token);\n\n    localStorage.removeItem('deliverypp_user_login_token');\n\n    setUser({});\n    setIsUserLoggedIn(false);\n\n    setTimeout(() => { setAppLoading(false); }, 1000);\n\n  };\n\n  const onLogin = (user) => {\n\n    setAppLoading(true);\n\n    setUser(user);\n    setIsUserLoggedIn(true);\n\n    setTimeout(() => { setAppLoading(false); }, 1000);\n\n  };\n\n  if(appLoading) {\n    return (\n      <MainLoader />\n    )\n  } else {\n    return (\n      <Router>\n        <div className=\"App\">\n\n          <div className=\"alertContainer\">\n            <Alert color={alertColor} isOpen={alertVisible} toggle={onAlertDismiss}>\n                {alertMessage}\n            </Alert>\n          </div>  \n\n          <NavBar\n            isUserLoggedIn={isUserLoggedIn}\n            user={user}\n            onSignInClick={() => setShowRegisterLoginTab(true)}\n            onLogOutClick={onLogOutClick}\n            color={mainColor}\n          />\n          \n          {\n            showRegisterLoginTab && <RegisterLoginTab showModal={showRegisterLoginTab} toggle={toggleRegisterLoginTab} color={mainColor} showAlert={showAlert} onLogin={onLogin} />\n          }\n\n          <Switch>\n            <Route exact path=\"/\" component={() => <DeliveryppTab showAlert={showAlert} color={mainColor} isUserLoggedIn={isUserLoggedIn} user={user} />} />\n            <Route component={Notfound} />\n          </Switch>\n\n          <Footer color={mainColor} />\n        </div>\n      </Router>\n    );\n  }\n\n}\n\nfunction Notfound() {\n  return (\n    <div>\n      La página no fue encontrada\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}