{"version":3,"sources":["components/deliverypp/product/ProductCard.js","components/deliverypp/product/ProductTable.js","components/deliverypp/product/CategorySelect.js","components/deliverypp/product/Toolbar.js","Deliverypp.js","services/ProductService.js","components/common/Modal.js","components/deliverypp/product/ProductActionForm.js","components/common/Alert.js","components/deliverypp/product/ProductView.js","services/OrderService.js","util/StatusClassMapper.js","components/deliverypp/order/OrderTable.js","components/deliverypp/order/StatusSelect.js","components/deliverypp/order/OrderedProductDetailsView.js","components/deliverypp/order/maps/OrderMapView.js","components/deliverypp/order/ProductDetailsModal.js","components/deliverypp/order/maps/AllOrdersMapsView.js","components/deliverypp/order/OrderToolbar.js","components/deliverypp/order/OrderView.js","components/deliverypp/category/CategoryToolbar.js","components/deliverypp/category/CategoryView.js","components/deliverypp/DeliveryppTab.js","components/main/NavBar.js","components/main/Footer.js","services/AuthService.js","components/common/Loader.js","components/main/auth/LoginForm.js","components/main/auth/RegisterForm.js","components/main/auth/RegisterLoginTab.js","components/common/MainLoader.js","App.js","serviceWorker.js","redux/reducers/categories.js","redux/actionTypes.js","redux/reducers/isLoggedIn.js","redux/reducers/index.js","services/CategoryService.js","redux/actions.js","redux/store.js","index.js"],"names":["ProductCard","product","selected","onClick","imageUrl","description","category","price","className","Card","style","width","CardImg","top","src","alt","CardBody","CardTitle","CardText","ProductTable","CategorySelect","onCategoryChange","categories","useSelector","state","Label","htmlFor","Input","type","id","onChange","event","target","value","key","map","Toolbar","props","onSearch","placeholder","aria-describedby","required","onEditClick","disabled","title","onAddClick","onCloneClick","onDeleteClick","ENVIRONMENTS","Deliverypp","env","getPath","this","console","error","STATUS","SUCCESS","ERROR","basePath","ProductService","generateErrorResponse","message","success","status","handleResponse","response","data","deliveryppResponse","getProducts","axios","get","getProductById","productId","token","localStorage","getItem","headers","Authorization","addProduct","post","updateProduct","put","cloneProduct","deleteProductById","delete","DModal","Modal","isOpen","showModal","ModalHeader","toggle","ModalBody","children","ModalFooter","Button","color","onSave","onCancel","ProductActionForm","priceEditable","action","name","e","onProductUpdate","for","DAlert","show","Alert","ProductView","useState","selectedProductId","setSelectedProductId","products","setProducts","filterableProducts","setFilterableProducts","setShowModal","setAction","selectedProduct","setSelectedProduct","filter","setFilter","categoryFilter","setCategoryFilter","alertState","setAlertState","showAlert","alert","setTimeout","a","responseData","createProduct","newProduct","newProducts","filterByCategoryAndSearchText","forEach","useEffect","onProductCardClick","handleDeleteProduct","window","confirm","filteredProducts","searchText","filterProductByCategory","Object","keys","propValue","toLowerCase","includes","filterProducts","getActionDescription","returnedFromSetFilter","OrderService","getOrders","getOrderById","orderId","addOrder","order","updateStatus","StatusClassMapper","statusMap","ORDERED","PAID","ACQUIRING","ACQUIRED","TRANSIT","DELIVERED","getClassStatusClass","StatusTranslateMapper","OrderTable","activeRow","setActiveRow","onColumnClick","prop","bordered","hover","responsive","orders","onRowClick","handleOnRowClick","username","email","telephone","createdAt","total","comment","StatusSelect","orderStatus","onOrderStatusChange","borderWidth","OrderedProductDetailsView","orderLines","orderLine","imageHidden","mappedOrderLines","setMappedOrderLines","toggleImageHidden","newMappedOrderLines","quantity","marginBottom","marginTop","fontSize","WrappedOrderMapView","GoogleApiWrapper","apiKey","google","location","height","padding","position","zoom","initialCenter","lat","latitude","lng","longitude","TotalDisplay","CustomerView","user","lastName","ProductDetailsModal","onClose","toggleShowModal","activeTab","setActiveTab","tab","handleStatusChange","newStatus","Nav","tabs","NavItem","NavLink","cursor","TabContent","TabPane","tabId","WrappedAllOrdersMapsView","locations","onMarkerClick","OrderToolbar","toggleTableSort","OrderView","setOrders","tableData","setTableData","selectedOrder","setSelectedOrder","showOrderedProductsModal","setShowOrderedProductsModal","statusFilter","setStatusFilter","transformToTableData","locationId","find","newOrders","mappedTableData","record","filteredOrders","toggleSort","compare","value1","value2","sort","orderA","orderB","CategoryToolbar","CategoryView","DeliveryppTab","isUserLoggedIn","role","NavBar","onSignInClick","onLogOutClick","Navbar","light","expand","NavbarBrand","href","navbar","outline","Footer","AuthService","register","login","getUserByToken","logout","Loader","Spinner","LoginForm","onLogin","password","dirty","setDirty","setUsername","setPassword","loading","setLoading","preventDefault","handleSetDirty","newDirty","isValidUsername","isValidPassword","length","Form","Col","FormGroup","valid","invalid","FormFeedback","RegisterForm","onRegister","setEmail","setName","setLastName","setTelephone","setItem","clearForm","isValidEmail","validator","isEmail","isValidName","isValidTelephone","RegisterLoginTab","loginIconColor","registerIconColor","MainLoader","Notfound","App","showRegisterLoginTab","setShowRegisterLoginTab","alertVisible","setAlertVisible","alertMessage","setAlertMessage","alertColor","setAlertColor","appLoading","setAppLoading","setIsUserLoggedIn","setUser","getUser","removeItem","exact","path","component","Boolean","hostname","match","categoryReducer","payload","updatedCategory","loggedReducer","rootReducer","combineReducers","isLoggedIn","CategoryService","getCategories","getHeader","addCategory","updateCategory","deleteCategory","categoryId","getToken","freeze","addCategories","store","createStore","applyMiddleware","thunkMiddleware","dispatch","then","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.699dbc98.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\r\n  \r\nimport './ProductCard.css';\r\n\r\nfunction ProductCard({ product, selected, onClick }) {\r\n\r\n    const { imageUrl, description, category, price } = product;\r\n\r\n    return (\r\n        <div className={`ProductCard m-1 p-2 ${selected}`} onClick={() => onClick(product)}>\r\n            <Card style={{ width: '18rem' }}>\r\n                <CardImg top width=\"100%\" src={imageUrl} alt={description} />\r\n                <CardBody>\r\n                    <CardTitle className=\"text-muted font-italic\">{category}</CardTitle>\r\n                    <CardText>\r\n                        {\r\n                            description\r\n                        }\r\n                    </CardText>\r\n                    <CardText className=\"font-weight-bold text-success\">\r\n                        {\r\n                            `RD$${price}`\r\n                        }\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard;","import React from \"react\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nfunction ProductTable(props) {\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Categoría</th>\r\n          <th>Descripción</th>\r\n          <th>Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.products.map(product => ( \r\n            <tr key={product.id} onClick={() => props.onClick(product)}>\r\n              <td>{product.id}</td>\r\n              <td>{product.category}</td>\r\n              <td>{product.description}</td>\r\n              <td>{product.price}</td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default ProductTable;\r\n","import React from 'react';\r\n\r\nimport { Label, Input } from 'reactstrap';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction CategorySelect({ onCategoryChange }) {\r\n\r\n    const categories = useSelector(state => state.categories);\r\n\r\n    const handleOnChange = (event) => {\r\n        const category = event.target.value;\r\n        onCategoryChange(category);\r\n    }\r\n\r\n    return (\r\n      <div className=\"d-flex flex-row justify-content-center align-items-cente mr-2\">\r\n        <Label className=\"mr-2\" htmlFor=\"categorySelect\">Categorías</Label>\r\n        <Input type=\"select\" id=\"categorySelect\" onChange={handleOnChange}>\r\n          <option key={0} value={''}></option>\r\n          {\r\n              categories.map(({ category, id }) => (\r\n                <option key={id}>{category}</option>\r\n              ))\r\n          }\r\n        </Input>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default CategorySelect;","import React from \"react\";\r\n\r\nimport './Toolbar.css';\r\n\r\nimport CategorySelect from './CategorySelect';\r\n\r\nfunction Toolbar(props) {\r\n  return (\r\n    <div className=\"Toolbar d-flex flex-wrap p-2 border rounded\">\r\n      <div className=\"searchInputContainer p-1\">\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"inputGroupPrepend2\">\r\n                <i className=\"fa fa-search\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n                onChange={props.onSearch}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Buscar\"\r\n                aria-describedby=\"inputGroupPrepend2\"\r\n                required\r\n            />\r\n          </div>\r\n      </div>\r\n\r\n      <CategorySelect onCategoryChange={props.onCategoryChange} />\r\n\r\n      <div className=\"actionButtonsContainer p-1\">\r\n        <button onClick={props.onEditClick} disabled={props.disabled} className=\"btn btn-secondary mr-1\" title=\"Editar Producto\">\r\n          <i className=\"fa fa-pencil\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onAddClick} className=\"btn btn-info mr-1\" title=\"Agregar Producto\">\r\n          <i className=\"fa fa-plus\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onCloneClick} disabled={props.disabled} className=\"btn btn-secondary mr-1\" title=\"Clonar Producto y ocultar original\">\r\n          <i className=\"fa fa-copy\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onDeleteClick} disabled={props.disabled} className=\"btn btn-danger\" title=\"Borrar Producto\">\r\n          <i className=\"fa fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toolbar;","\r\nconst ENVIRONMENTS = {\r\n    getActiveEnv() {\r\n        return Deliverypp;\r\n    },\r\n    DEV: 'dev',\r\n    QA: 'qa',\r\n    PROD: 'prod'\r\n};\r\n\r\nconst STATUS = {\r\n    SUCCESS: 'SUCCESS',\r\n    ERROR: 'ERROR'\r\n};\r\n\r\nconst Deliverypp = {\r\n    env: ENVIRONMENTS.DEV,\r\n    getPath() {\r\n        switch(this.env) {\r\n            case ENVIRONMENTS.DEV:\r\n                return '';\r\n            case ENVIRONMENTS.QA:\r\n            case ENVIRONMENTS.PROD:\r\n                return ''\r\n            default:\r\n                console.error('Wrong operation.');\r\n                break;\r\n        }\r\n    },\r\n    STATUS\r\n};\r\n\r\nexport default  Deliverypp;","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst ProductService = {\r\n    generateErrorResponse(message) {\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    async handleResponse(response) {\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getProducts() {\r\n\r\n        try {\r\n            const response = await axios.get(`${basePath}/api/products`);\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n\r\n    },\r\n    \r\n    async getProductById(productId = {}) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        try {\r\n            const response = await axios.get(`${basePath}/api/products/${productId}`, { headers });\r\n\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n\r\n    },\r\n    \r\n    async addProduct(product = {}) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/products`, product, { headers });\r\n\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n\r\n    },\r\n    async updateProduct(product = {}) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        try {\r\n            const response = await axios.put(`${basePath}/api/products`, product, { headers });\r\n\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n\r\n    },\r\n    async cloneProduct(product = {}) {\r\n\r\n        product.id = 0;\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/products/clone`, product, { headers });\r\n\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n   \r\n    },\r\n    async deleteProductById(productId = -1) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        try {\r\n            const response = await axios.delete(`${basePath}/api/products/${productId}`, { headers });\r\n\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default ProductService;","import React from 'react';\r\n\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nfunction DModal(props) {\r\n    return (\r\n        <div>\r\n        <Modal isOpen={props.showModal}>\r\n            <ModalHeader toggle={props.toggle}>{props.title}</ModalHeader>\r\n            <ModalBody>\r\n                {\r\n                    props.children\r\n                }\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"success\" onClick={props.onSave}>Guardar</Button>{' '}\r\n                <Button color=\"secondary\" onClick={props.onCancel}>Cancelar</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DModal;","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Input, Label } from 'reactstrap';\r\n\r\nfunction ProductActionForm(props) {\r\n\r\n    const categories = useSelector(state => state.categories);\r\n\r\n    const onImageUrlChange = (e) => {\r\n      let value = e.target.value;\r\n      if(!value) {\r\n          value = 'product.png';\r\n      }\r\n      const product = {...props.product};\r\n      product.imageUrl = value;\r\n      props.onProductUpdate(product);\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n      const value = e.target.value;\r\n      const product = {...props.product};\r\n      product.category = value;\r\n      props.onProductUpdate(product);\r\n    }\r\n\r\n    const onDescriptionChange = (e) => {\r\n      const value = e.target.value;\r\n      const product = {...props.product};\r\n      product.description = value;\r\n      props.onProductUpdate(product);\r\n    }\r\n\r\n    const onPriceChange = (e) => {\r\n      const value = e.target.value;\r\n      const product = {...props.product};\r\n      product.price = value;\r\n      props.onProductUpdate(product);\r\n    }\r\n\r\n    const imageUrl = props.product.imageUrl ? props.product.imageUrl : 'product.png';\r\n    const priceEditable = props.action === 'edit';\r\n\r\n    return (\r\n        <div>\r\n        <Card>\r\n            <CardImg top width=\"100%\" src={imageUrl} />\r\n            <CardBody>\r\n                <CardTitle>\r\n                    <Input type=\"select\" name=\"categorySelect\" id=\"categorySelect\" value={props.product.category} onChange={onCategoryChange}>\r\n                        <option>{''}</option>\r\n                        {\r\n                            categories.map(({ key, category }) => (\r\n                                <option>{category}</option>\r\n                            ))\r\n                        }\r\n                    </Input>\r\n                </CardTitle>\r\n                <CardText>\r\n                    <Label for=\"imageUrl\">URL de la imagen</Label>\r\n                    <Input type=\"url\" name=\"imageUrl\" id=\"imageUrl\"  value={imageUrl} onChange={onImageUrlChange}/>\r\n                </CardText>\r\n                <CardText>\r\n                    <Label for=\"description\">Descripción</Label>\r\n                    <Input type=\"textarea\" name=\"description\" id=\"description\" value={props.product.description} onChange={onDescriptionChange} />\r\n                </CardText>\r\n                <CardText>\r\n                    <Label for=\"price\">Precio</Label>\r\n                    <Input type=\"number\" name=\"price\" id=\"price\" placeholder=\"Precio\" disabled={priceEditable} value={props.product.price} onChange={onPriceChange}/>\r\n                </CardText>\r\n            </CardBody>\r\n        </Card>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProductActionForm;","import React from 'react';\r\n\r\nimport { Alert } from 'reactstrap';\r\n\r\nfunction DAlert({ show, message, color }) {\r\n    return (\r\n        <div className=\"alertContainer\">\r\n            <Alert color={color} isOpen={show}>\r\n                { message }\r\n            </Alert>\r\n      </div>  \r\n    )\r\n}\r\n\r\nexport default DAlert;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductTable from \"./ProductTable\";\r\n\r\nimport \"./ProductView.css\";\r\n\r\nimport Toolbar from './Toolbar';\r\n\r\nimport ProductService from '../../../services/ProductService';\r\n\r\nimport Modal from '../../common/Modal';\r\n\r\nimport ProductActionForm from './ProductActionForm';\r\n\r\nimport Alert from '../../common/Alert';\r\n\r\nfunction ProductView() {\r\n\r\n  const [cardView, setCardView] = useState(() => true);\r\n  const [selectedProductId, setSelectedProductId] = useState(() => -1);\r\n  const [products, setProducts] = useState(() => []);\r\n  const [filterableProducts, setFilterableProducts] = useState(() => []);\r\n  const [showModal, setShowModal] = useState(() => false);\r\n  const [action, setAction] = useState(() => 'add');\r\n  const [selectedProduct, setSelectedProduct] = useState(() => ({description: '', price: 0, imageUrl: '', category: ''}));\r\n  const [filter, setFilter] = useState(() => '');\r\n  const [categoryFilter, setCategoryFilter] = useState(() => '');\r\n  const [alertState, setAlertState] = useState(() => ({ color: 'success', show: false, message: '' }));\r\n\r\n  const showAlert = alert => {\r\n    setAlertState(alert);\r\n    setTimeout(() => {\r\n      setAlertState({ color: 'success', show: false, message: '' });\r\n    }, 2000);\r\n  }\r\n\r\n  const getProducts = async () => {\r\n    const responseData = await ProductService.getProducts();\r\n    if(responseData && responseData.success) {\r\n      const products = responseData.response;\r\n      setProducts(products);\r\n        setFilterableProducts(products);\r\n    } else {\r\n      console.error('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error obteniendo productos.'});\r\n    }\r\n  };\r\n\r\n  const createProduct = async () => {\r\n    const responseData = await ProductService.addProduct(selectedProduct);\r\n    if(responseData && responseData.success) {\r\n      const newProduct = responseData.response;\r\n      const newProducts = [newProduct, ...products];\r\n      setProducts(newProducts);\r\n      filterByCategoryAndSearchText(categoryFilter, filter, newProducts);\r\n      showAlert({ color: 'success', message: 'Producto agregado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.error('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error agregando producto.'});\r\n    }\r\n    \r\n  };\r\n  const updateProduct = async () => {\r\n    const responseData = await ProductService.updateProduct(selectedProduct);\r\n    if(responseData && responseData.success) {\r\n      const newProduct = responseData.response;\r\n      const newProducts = [...products];\r\n      newProducts.forEach(product => {\r\n        if(product.id === newProduct.id) {\r\n          product.description = newProduct.description;\r\n          product.price = newProduct.price;\r\n          product.category = newProduct.category;\r\n          product.imageUrl = newProduct.imageUrl;\r\n          return false;\r\n        }\r\n      });\r\n      setProducts(newProducts);\r\n      filterByCategoryAndSearchText(categoryFilter, filter, newProducts);\r\n      showAlert({ color: 'success', message: 'Producto agregado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.error('Error adding products.');\r\n      showAlert({ color: 'warning', message: 'Error agregando producto.'});\r\n    }\r\n\r\n  };\r\n\r\n  const cloneProduct = async () => {\r\n    const responseData = await ProductService.cloneProduct(selectedProduct);\r\n    if(responseData && responseData.success) {\r\n      const newProduct = responseData.response;\r\n      const newProducts = [newProduct, ...products];\r\n      setProducts(newProducts);\r\n      filterByCategoryAndSearchText(categoryFilter, filter, newProducts);\r\n      showAlert({ color: 'success', message: 'Producto clonado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.error('Error cloning product');\r\n      showAlert({ color: 'warning', message: 'Error clonando producto.'});\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  const onProductCardClick = product => {\r\n    setSelectedProduct(product);\r\n    setSelectedProductId(product.id);\r\n  };\r\n\r\n  const getProductCards = () => {\r\n    return filterableProducts.map(product => {\r\n        const selected = product.id === selectedProductId ? 'selected' : '';\r\n        return <ProductCard key={product.id} product={product} onClick={onProductCardClick} selected={selected} />;\r\n    });\r\n  };\r\n\r\n  const getProductTable = () => {\r\n    return <ProductTable products={filterableProducts} />;\r\n  };\r\n\r\n  const showEditProductForm = () => {\r\n    setAction('edit');\r\n    setShowModal(true);\r\n  }\r\n\r\n  const showAddProductForm = () => {\r\n    setAction('add');\r\n    setSelectedProduct({description: '', price: 0, imageUrl: '', category: ''});\r\n    setShowModal(true);\r\n  }\r\n\r\n  const showCloneProductForm = () => {\r\n    setAction('clone');\r\n    setShowModal(true);\r\n  }\r\n\r\n  const handleDeleteProduct = async () => {\r\n    const deleteProductConfirm = window.confirm('Seguro quiere borrar el producto seleccionado?');\r\n    if(deleteProductConfirm) {\r\n      const responseData = await ProductService.deleteProductById(selectedProductId);\r\n      if(responseData && responseData.success) {\r\n        showAlert({ color: 'success', message: 'Producto eliminado.'});\r\n        let filteredProducts = products.filter(product => product.id !== selectedProductId);\r\n        setProducts(filteredProducts);\r\n        filterByCategoryAndSearchText(categoryFilter, filter, filteredProducts);\r\n      } else {\r\n        console.error('Error deleting product.')\r\n        showAlert({ color: 'warning', message: 'Error eliminando producto.'});\r\n      }\r\n    }\r\n  };\r\n\r\n  const filterProducts = (value, products) => {\r\n    if(value) {\r\n      const filteredProducts = products.filter(product => {\r\n          const keys = Object.keys(product);\r\n          for(let key of keys) {\r\n              if(key === 'category' || key === 'price' || key === 'description') {\r\n                  let propValue = product[key];\r\n                  if(propValue) {\r\n                      propValue = '' + propValue;\r\n                      if(propValue.toLowerCase().includes(value.toLowerCase())) {\r\n                          return true;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          return false;\r\n      });\r\n      return filteredProducts;\r\n    }\r\n\r\n    return products;\r\n\r\n  }\r\n\r\n  const onCategoryChange = category => {\r\n    setCategoryFilter(category);\r\n    filterByCategoryAndSearchText(category, filter, products);\r\n  }\r\n\r\n  const filterProductByCategory = (category, products) => {\r\n    if(!category) {\r\n      return products;\r\n    }\r\n    const filteredProducts = products.filter(product => product.category === category);\r\n    return filteredProducts;\r\n  }\r\n\r\n  const filterByCategoryAndSearchText = (category, searchText) => {\r\n    let filteredProducts = filterProductByCategory(category, products);\r\n    filteredProducts = filterProducts(searchText, filteredProducts);\r\n    setFilterableProducts(filteredProducts);\r\n  }\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value;\r\n    const returnedFromSetFilter = setFilter(value);\r\n    console.error('returnedFromSetFilter', returnedFromSetFilter)\r\n    filterByCategoryAndSearchText(categoryFilter, value, products);\r\n  }\r\n\r\n  const onSave = () => {\r\n    switch(action) {\r\n      case 'add':\r\n        createProduct();\r\n        break;\r\n      case 'edit':\r\n        updateProduct();\r\n        break;\r\n      case 'clone':\r\n          cloneProduct();\r\n          break;\r\n      default:\r\n        console.error('Wrong operation.');\r\n        break;\r\n    }\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setShowModal(false);\r\n  }\r\n\r\n  const toggle = () => {\r\n    setShowModal(!showModal);\r\n  }\r\n\r\n  const getActionDescription = () => {\r\n    switch(action) {\r\n      case 'add':\r\n          return 'Agregar producto';\r\n      case 'edit':\r\n          return 'Editar producto';\r\n      case 'clone':\r\n        return 'Clonar producto y ocultar original';\r\n      default:\r\n        console.error('Wrong operation.');\r\n        break;\r\n    }\r\n  }\r\n\r\n  const onProductUpdate = product => {\r\n    setSelectedProduct(product);\r\n  }\r\n\r\n  return (\r\n    <div className=\"ProductView\">\r\n\r\n      <Alert {...alertState} />\r\n\r\n      <Modal\r\n          onSave={onSave}\r\n          onCancel={onCancel}\r\n          showModal={showModal}\r\n          toggle={toggle}\r\n          title={getActionDescription()}\r\n      >\r\n          <ProductActionForm imageUrl={'product.png'} action={action} onProductUpdate={onProductUpdate} product={selectedProduct} />\r\n      </Modal>\r\n\r\n      <Toolbar\r\n          onSearch={handleSearch}\r\n          onEditClick={showEditProductForm}\r\n          onAddClick={showAddProductForm}\r\n          onCloneClick={showCloneProductForm}\r\n          onDeleteClick={handleDeleteProduct}\r\n          disabled={selectedProductId === -1}\r\n          onCategoryChange={onCategoryChange}\r\n      />\r\n\r\n      <div>\r\n        <div className=\"ProductCardContainer\">{getProductCards()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductView;\r\n","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst OrderService = {\r\n    generateErrorResponse(message) {\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    handleResponse(response) {\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getOrders() {\r\n\r\n        try {\r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n\r\n            const response = await axios.get(`${basePath}/api/orders`, { headers });\r\n\r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n    \r\n    async getOrderById(orderId) {\r\n\r\n        try {\r\n\r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/orders/${orderId}`, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n    \r\n    },\r\n    \r\n    async addOrder(order) {\r\n\r\n        try {\r\n            \r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.post(`${basePath}/api/orders`, order, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n\r\n    async updateStatus(orderId, status) {\r\n\r\n        try {\r\n            \r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.put(`${basePath}/api/orders/${orderId}/status/${status}`, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n    \r\n};\r\n\r\nexport default OrderService;","const StatusClassMapper = {\r\n    statusMap: {\r\n      ORDERED: 'danger',\r\n      PAID: 'info',\r\n      ACQUIRING: 'secondary',\r\n      ACQUIRED: 'primary',\r\n      TRANSIT: 'warning',\r\n      DELIVERED: 'success'\r\n    },\r\n    getClassStatusClass(status) {\r\n      return this.statusMap[status];\r\n    }\r\n  }\r\n\r\n  export default StatusClassMapper;\r\n  ","import React, { useState } from \"react\";\r\n\r\nimport { Table } from \"reactstrap\";\r\n\r\nimport './OrderView.css';\r\n\r\nimport StatusClassMapper from '../../../util/StatusClassMapper';\r\n\r\nconst StatusTranslateMapper = {\r\n  ORDERED: 'Ordenado',\r\n  PAID: 'Pagado',\r\n  ACQUIRING: 'Adquiriendo',\r\n  ACQUIRED: 'Adquirido',\r\n  TRANSIT: 'Tránsito',\r\n  DELIVERED: 'Entregado'\r\n};\r\n\r\nfunction OrderTable(props) {\r\n\r\n  const [activeRow, setActiveRow] = useState(null);\r\n\r\n  const handleOnRowClick = (order) => {\r\n    setActiveRow(order);\r\n    props.onRowClick(order.id)\r\n  }\r\n\r\n  const onColumnClick = (prop) => {\r\n    props.onColumnClick(prop);\r\n  }\r\n\r\n  return (\r\n    <div className=\"OrderTable\">\r\n      <Table bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => onColumnClick('id')}>Id</th>\r\n            <th onClick={() => onColumnClick('status')}>Estado</th>\r\n            <th onClick={() => onColumnClick('username')}>Usuario</th>\r\n            <th onClick={() => onColumnClick('email')}>Email</th>\r\n            <th onClick={() => onColumnClick('telephone')}>Teléfono</th>\r\n            <th onClick={() => onColumnClick('createdAt')}>Fecha</th>\r\n            <th onClick={() => onColumnClick('total')}>Total</th>\r\n            <th onClick={() => onColumnClick('comment')}>Comentario</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.orders.map((order) => {\r\n            return (\r\n              <tr className={`order-row ${activeRow && activeRow.id === order.id ? 'selected' : ''}`} key={order.id} onClick={() => handleOnRowClick(order)} >\r\n                <td>{order.id}</td>\r\n                <td className={`text-${StatusClassMapper.getClassStatusClass(order.status)}`}>{ StatusTranslateMapper[order.status] }</td>\r\n                <td>{order.username}</td>\r\n                <td>{order.email}</td>\r\n                <td>{order.telephone}</td>\r\n                <td>{order.createdAt}</td>\r\n                <td>{order.total}</td>\r\n                <td>{order.comment}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderTable;\r\n","\r\n\r\nimport React from 'react';\r\n\r\nimport { Label, Input } from 'reactstrap';\r\n\r\nimport StatusClassMapper from '../../../util/StatusClassMapper';\r\n\r\nfunction StatusSelect({ orderStatus, onOrderStatusChange }) {\r\n    return (\r\n      <div className=\"d-flex flex-row justify-content-center align-items-cente mr-2\">\r\n        <Label className=\"mr-2\" htmlFor=\"statusSelect\">Estado</Label>\r\n        <Input style={{borderWidth: 2}} className={`border-${StatusClassMapper.getClassStatusClass(orderStatus)}`} type=\"select\" id=\"statusSelect\" value={orderStatus} onChange={onOrderStatusChange}>\r\n          <option value={''}></option>\r\n          <option value={'ORDERED'}>Ordenado</option>\r\n          <option value={'PAID'}>Pagado</option>\r\n          <option value={'ACQUIRING'}>Adquiriendo</option>\r\n          <option value={'ACQUIRED'}>Adquirido</option>\r\n          <option value={'TRANSIT'}>En Tránsito</option>\r\n          <option value={'DELIVERED'}>Entregado</option>\r\n        </Input>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default StatusSelect;","import React, { useState } from 'react';\r\n\r\nimport { Card, CardImg, CardBody, CardTitle } from 'reactstrap';\r\n\r\nfunction OrderedProductDetailsView({orderLines}) {\r\n\r\n    const [mappedOrderLines, setMappedOrderLines] = useState(orderLines.map(orderLine => ({ ...orderLine, imageHidden: true })));\r\n  \r\n    const toggleImageHidden = (id) => {\r\n      const newMappedOrderLines = mappedOrderLines.map(orderLine => {\r\n        if(orderLine.product.id === id) {\r\n          orderLine.imageHidden = !orderLine.imageHidden;\r\n        }\r\n        return orderLine;\r\n      });\r\n      setMappedOrderLines(newMappedOrderLines);\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        {mappedOrderLines.map(({ quantity, product, imageHidden }) => (\r\n          <Card key={product.id} style={{ marginBottom: 4, marginTop: 4 }} className=\"shadow p-2 mb-2 bg-white\">\r\n            \r\n            {\r\n              imageHidden && <div className=\"imageIconContainer text-center\" title=\"Mostrar image del producto\" onClick={() => toggleImageHidden(product.id)}><i className=\"fas fa-image\" style={{fontSize: 24, color: 'grey'}}></i></div>\r\n            }\r\n  \r\n            {\r\n              !imageHidden && (\r\n                <CardImg\r\n                  top\r\n                  width=\"100%\"\r\n                  src={product.imageUrl}\r\n                  alt={product.description}\r\n                  onClick={() => toggleImageHidden(product.id)}\r\n                  title=\"Ocultar imagel del producto\"\r\n                  className=\"cardImgElem\"\r\n                />\r\n              )\r\n            }\r\n            \r\n            <CardBody>\r\n              <CardTitle className=\"text-center font-weight-bold\">{product.description}</CardTitle>\r\n                <form>\r\n\r\n                    <div className=\"form-group row border-bottom\">\r\n                        <label htmlFor=\"idPrice\" className=\"col-6 col-form-label\">Precio</label>\r\n                        <label htmlFor=\"idPrice\" className=\"col-sm-6 col-form-label\">RD${product.price}</label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row border-bottom\">\r\n                        <label htmlFor=\"quantityProp\" className=\"col-sm-6 col-form-label\">Cantidad</label>\r\n                        <label htmlFor=\"quantityProp\" className=\"col-sm-6 col-form-label\">{quantity}</label>\r\n                    </div>\r\n \r\n                    <div className=\"form-group row border-bottom\">\r\n                        <label htmlFor=\"totalProp\" className=\"col-sm-6 col-form-label font-weight-bold\">Total</label>\r\n                        <label htmlFor=\"totalProp\" className=\"col-sm-6 col-form-label font-weight-bold text-success\">RD${product.price * quantity}</label>\r\n                    </div>\r\n                \r\n                </form>\r\n\r\n            </CardBody>\r\n          </Card>\r\n        ))}\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default OrderedProductDetailsView;","\r\nimport React from 'react';\r\n\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nfunction OrderMapView({ google, location }) {\r\n    return (\r\n      <div style={{height: 400, padding: 0, position: 'relative'}}>\r\n        <Map\r\n          google={google}\r\n          zoom={14}\r\n          initialCenter={{\r\n            lat: location.latitude,\r\n            lng: location.longitude\r\n          }}>\r\n          <Marker name={'Current location'} />\r\n        </Map>\r\n      </div>\r\n    );\r\n}\r\n  \r\nconst WrappedOrderMapView = GoogleApiWrapper({\r\napiKey: ('AIzaSyC1wC2ImcL1s4wITbDbM-g3nLK01fJHGkc')\r\n})(OrderMapView);\r\n\r\nexport default WrappedOrderMapView;","import React, { useState } from 'react';\r\n\r\nimport { CardText, Button, Modal, ModalHeader, ModalBody, ModalFooter, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport StatusSelect from './StatusSelect';\r\n\r\nimport OrderedProductDetailsView from './OrderedProductDetailsView';\r\n\r\nimport OrderMapView from './maps/OrderMapView';\r\n\r\nimport OrderService from '../../../services/OrderService';\r\n\r\nfunction ProductDetailsModal({ onClose, showModal, toggleShowModal, order, showAlert, onOrderStatusChange }) {\r\n\r\n    const { orderLines, id: orderId, location, status: orderStatus, total } = order;\r\n\r\n    const [activeTab, setActiveTab] = useState(() => 'orderProductsDetails');\r\n  \r\n    const toggle = tab => {\r\n        if(activeTab !== tab) setActiveTab(tab);\r\n    };\r\n  \r\n    const handleStatusChange = async event => {\r\n      const newStatus = event.target.value;\r\n      const responseData = await OrderService.updateStatus(orderId, newStatus);\r\n      if(responseData && responseData.success) {\r\n        onOrderStatusChange(orderId, newStatus);\r\n      } else {\r\n        console.error('Error updating status.')\r\n        showAlert({ color: 'warning', message: 'Error actualizando el estado.'});\r\n      }\r\n  \r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <Modal isOpen={showModal}>\r\n          <ModalHeader toggle={toggleShowModal}>\r\n            <CardText>Order #: {orderId}</CardText>\r\n            <CardText>Productos ordenados</CardText>\r\n            <StatusSelect orderStatus={orderStatus} onOrderStatusChange={handleStatusChange} />\r\n          </ModalHeader>\r\n          <ModalBody>\r\n              <Nav tabs>\r\n\r\n                <NavItem>\r\n                  <NavLink style={{ cursor: \"pointer\" }} className={activeTab === \"orderProductsDetails\" ? \"active\" : \"\"} onClick={() => toggle(\"orderProductsDetails\") }>Productos</NavLink>\r\n                </NavItem>\r\n  \r\n                <NavItem>\r\n                  <NavLink style={{ cursor: \"pointer\" }} className={activeTab === \"orderProductsLocation\" ? \"active\" : \"\"} onClick={() => toggle(\"orderProductsLocation\") }>Localización</NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <NavLink style={{ cursor: \"pointer\" }} className={activeTab === \"customer\" ? \"active\" : \"\"} onClick={() => toggle(\"customer\") }>Cliente</NavLink>\r\n                </NavItem>\r\n\r\n              </Nav>\r\n\r\n              <TabContent activeTab={activeTab}>\r\n\r\n                <TabPane tabId=\"orderProductsDetails\">\r\n                    <TotalDisplay total={total} />\r\n                    <div>\r\n                        <OrderedProductDetailsView orderLines={orderLines} />\r\n                    </div>\r\n                    <TotalDisplay total={total} />\r\n                \r\n                </TabPane>\r\n\r\n                <TabPane tabId=\"orderProductsLocation\">\r\n                    <div className=\"mt-2\">\r\n                        <OrderMapView location={location} />\r\n                    </div>\r\n                  \r\n                </TabPane>\r\n\r\n                <TabPane tabId=\"customer\">\r\n                  <CustomerView user={order.user} />\r\n                </TabPane>\r\n\r\n              </TabContent>\r\n\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"success\" onClick={onClose}>\r\n              Cerrar\r\n            </Button>{\" \"}\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst TotalDisplay = ({ total }) => {\r\n    return (\r\n\r\n        <div className=\"form-group row p-1\">\r\n            <label htmlFor=\"generalTotalProp\" className=\"col-sm-4 col-form-label font-weight-bold\">Total</label>\r\n            <label htmlFor=\"generalTotalProp\" className=\"col-sm-4 col-form-label font-weight-bold text-success\">RD${total}</label>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nfunction CustomerView({ user }) {\r\n\r\n    const { id, username, name, lastName, email, telephone } = user;\r\n\r\n    return (\r\n        <div className=\"shadow bg-white mt-2\">\r\n            <form className=\"p-4\">\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"idProp\" className=\"col-sm-6 col-form-label font-weight-bold\">#:</label>\r\n                    <label htmlFor=\"idProp\" className=\"col-sm-6 col-form-label font-weight-bold\">{id}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"usernameProp\" className=\"col-sm-6 col-form-label\">Usuario:</label>\r\n                    <label htmlFor=\"usernameProp\" className=\"col-sm-6 col-form-label\">{username}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"nameProp\" className=\"col-sm-6 col-form-label\">Nombre: </label>\r\n                    <label htmlFor=\"nameProp\" className=\"col-sm-6 col-form-label\">{name} {lastName}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"emailProp\" className=\"col-sm-6 col-form-label\">Email: </label>\r\n                    <label htmlFor=\"emailProp\" className=\"col-sm-6 col-form-label\">{email}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"telephoneProp\" className=\"col-sm-6 col-form-label\">Teléfono: </label>\r\n                    <label htmlFor=\"telephoneProp\" className=\"col-sm-6 col-form-label\">{telephone}</label>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default ProductDetailsModal;","\r\nimport React from 'react';\r\n\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nfunction AllOrdersMapsView({ google, locations, onMarkerClick = () => {} }) {\r\n    return (\r\n      <div style={{height: 400, padding: 0, position: 'relative'}}>\r\n        <Map\r\n          google={google}\r\n          zoom={11}\r\n          initialCenter={{\r\n            lat: 18.486057,\r\n            lng: -69.931213\r\n          }}\r\n        >\r\n          {\r\n            locations.map(location => (\r\n              <Marker\r\n                key={location.id}\r\n                title={'The marker`s title will appear as a tooltip.'}\r\n                name={'SOMA'}\r\n                position={{lat: location.latitude, lng: location.longitude}}\r\n                onClick={() => onMarkerClick(location.id)}\r\n              />\r\n            ))\r\n          }\r\n        </Map>\r\n      </div>\r\n    )  \r\n}\r\n  \r\nconst WrappedAllOrdersMapsView = GoogleApiWrapper({\r\napiKey: ('AIzaSyC1wC2ImcL1s4wITbDbM-g3nLK01fJHGkc')\r\n})(AllOrdersMapsView);\r\n\r\nexport default WrappedAllOrdersMapsView;","\r\n\r\nimport React from 'react';\r\n\r\nimport StatusSelect from './StatusSelect';\r\n\r\nfunction OrderToolbar({ onSearch, orderStatus, onOrderStatusChange }) {\r\n    return (\r\n      <div className=\"Toolbar p-2 border rounded\">\r\n        <div className=\"searchInputContainer p-1\">\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"inputGroupPrepend2\">\r\n                  <i className=\"fa fa-search\"></i>\r\n                </span>\r\n              </div>\r\n              <input\r\n                  onChange={onSearch}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Buscar\"\r\n                  aria-describedby=\"inputGroupPrepend2\"\r\n                  required\r\n              />\r\n              <div className=\"ml-2\">\r\n                <StatusSelect orderStatus={orderStatus} onOrderStatusChange={onOrderStatusChange} />\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default OrderToolbar;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport './OrderView.css';\r\n\r\nimport OrderService from '../../../services/OrderService';\r\n\r\nimport OrderTable from \"./OrderTable\";\r\nimport ProductDetailsModal from './ProductDetailsModal';\r\nimport AllOrdersMapsView from './maps/AllOrdersMapsView';\r\nimport OrderToolbar from './OrderToolbar';\r\n\r\nconst toggleTableSort = { id: false, username: false, email: false, telephone: false, createdAt: false, total: false, comment: false };\r\n\r\nfunction OrderView({ showAlert }) {\r\n  const [orders, setOrders] = useState(() => []);\r\n  const [tableData, setTableData] = useState(() => []);\r\n  const [selectedOrder, setSelectedOrder] = useState(() => ({orderLines: [], locations: []}));\r\n  const [showOrderedProductsModal, setShowOrderedProductsModal] = useState(() => false);\r\n  const [statusFilter, setStatusFilter] = useState(() => '');\r\n\r\n  const transformToTableData = orders => {\r\n    return orders.map((\r\n      { user: { username, email, telephone }, status, id, createdAt, total, comment }) => ({ id, status, total, comment, createdAt, username, email, telephone })\r\n    );\r\n  };\r\n\r\n  const getOrders = async () => {\r\n\r\n    const responseData = await OrderService.getOrders();\r\n\r\n    if(responseData && responseData.success) {\r\n      const orders = responseData.response;\r\n        setOrders(orders);\r\n        const tableData = transformToTableData(orders);\r\n        setTableData(tableData);\r\n    } else {\r\n      console.error('Error getting orders.', responseData);\r\n      showAlert({ color: 'warning', message: 'Error getting orders.'});\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n  const handleRowClick = orderId => {\r\n    const order = orders.find(order => order.id === orderId)\r\n    if(order) {\r\n      setSelectedOrder(order);\r\n      setShowOrderedProductsModal(true);\r\n    }\r\n  };\r\n\r\n  const filterTableData = event => {\r\n    const value = event.target.value;\r\n    const tableData = transformToTableData(orders);\r\n    if(value) {\r\n        const filteredOrders = tableData.filter(order => {\r\n            const keys = Object.keys(order);\r\n            for(let key of keys) {\r\n                let propValue = order[key];\r\n                if(propValue) {\r\n                    propValue = '' + propValue;\r\n                    if(propValue.includes(value)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        setTableData(filteredOrders);\r\n    } else {\r\n      setTableData(tableData);\r\n    }\r\n  };\r\n\r\n  const onOrderedProductsModalClose = () => {\r\n    setShowOrderedProductsModal(false);\r\n  };\r\n\r\n  const toggleShowModal = () => {\r\n    setShowOrderedProductsModal(!showOrderedProductsModal);\r\n  };\r\n\r\n  const onOrderStatusChange = (orderId, newStatus) => {\r\n\r\n    const newOrders = orders.map(order => {\r\n      if(order.id === orderId) {\r\n        order.status = newStatus;\r\n      }\r\n      return order;\r\n    });\r\n\r\n    setOrders(newOrders);\r\n\r\n    const mappedTableData = tableData.map(record => {\r\n      if(record.id === orderId) {\r\n        record.status = newStatus;\r\n        const order = orders.find(order => order.id === orderId);\r\n        setSelectedOrder(order);\r\n      }\r\n      return record;\r\n    });\r\n\r\n    \r\n    setTableData(mappedTableData);\r\n\r\n  };\r\n\r\n  const filterByStatus = event => {\r\n\r\n    const status = event.target.value;\r\n\r\n    const tableData = transformToTableData(orders);\r\n\r\n    if(!status) {\r\n      setStatusFilter('');\r\n      return setTableData(tableData);\r\n    }\r\n\r\n    const filteredOrders = tableData.filter(order => order.status === status);\r\n\r\n    setStatusFilter(status);\r\n    setTableData(filteredOrders);\r\n\r\n  };\r\n\r\n  const sortColumn = prop => {\r\n \r\n    const toggleSort = toggleTableSort[prop];\r\n\r\n    const compare = (value1, value2) => {\r\n      if(value1 < value2) {\r\n        return 1;\r\n      } else if (value1 > value2) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    const tableData = transformToTableData(orders);\r\n\r\n    tableData.sort((orderA, orderB) => {\r\n      \r\n      let value1 = orderA[prop];\r\n      let value2 = orderB[prop];\r\n\r\n      if(toggleSort) {\r\n        return compare(value1, value2);\r\n      } else {\r\n        return compare(value2, value1);\r\n      }\r\n\r\n    });\r\n\r\n    toggleTableSort[prop] = !toggleSort;\r\n\r\n    const newOrders = [...tableData];\r\n\r\n    setTableData(newOrders);\r\n\r\n  };\r\n\r\n  const onMarkerClick = (locationId) => {\r\n    const order = orders.find(order => order.location.id === locationId);\r\n    if(order) {\r\n      setSelectedOrder(order);\r\n      setShowOrderedProductsModal(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"OrderView\">\r\n      <AllOrdersMapsView locations={orders.map(order => order.location)} onMarkerClick={onMarkerClick} />\r\n      <ProductDetailsModal\r\n        showModal={showOrderedProductsModal}\r\n        toggleShowModal={toggleShowModal}\r\n        onClose={onOrderedProductsModalClose}\r\n        showAlert={showAlert}\r\n        onOrderStatusChange={onOrderStatusChange}\r\n        order={selectedOrder}\r\n       />\r\n      <div>\r\n        <OrderToolbar\r\n          onSearch={filterTableData}\r\n          orderStatus={statusFilter}\r\n          onOrderStatusChange={filterByStatus}\r\n        />\r\n      </div>\r\n      <div className=\"Container mt-1\">\r\n        <OrderTable\r\n            orders={tableData}\r\n            onRowClick={handleRowClick}\r\n            onColumnClick={sortColumn}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default OrderView;\r\n","import React from 'react';\r\n\r\nfunction CategoryToolbar( { onEditClick, onAddClick, onDeleteClick } ) {\r\n    return (\r\n        <div className=\"actionButtonsContainer p-1\">\r\n            <button onClick={onEditClick} disabled={true} className=\"btn btn-secondary mr-1\" title=\"Editar\">\r\n            <i className=\"fa fa-pencil\"></i>\r\n            </button>\r\n\r\n            <button onClick={onAddClick} disabled={true} className=\"btn btn-info mr-1\" title=\"Agregar\">\r\n            <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n\r\n            <button onClick={onDeleteClick} disabled={true} className=\"btn btn-danger\" title=\"Borrar\">\r\n            <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CategoryToolbar;","import React from 'react';\r\n\r\nimport { Table } from \"reactstrap\";\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './CategoryView.css';\r\n\r\nimport CategoryToolbar from './CategoryToolbar';\r\n\r\nfunction CategoryView(props) {\r\n\r\n    const categories = useSelector(state => state.categories);\r\n\r\n    return (\r\n        <div className=\"CategoryTable\">\r\n            <div className=\"float-right\">\r\n                <CategoryToolbar />\r\n            </div>\r\n\r\n            <Table bordered hover responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Clave</th>\r\n                        <th>Categoría</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {categories.map(({ id, key, category }) => (\r\n                    <tr key={id}>\r\n                        <td>{id}</td>\r\n                        <td>{key}</td>\r\n                        <td>{category}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default CategoryView;","import React, { useState } from 'react';\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport ProductView from './product/ProductView';\r\nimport OrderView from './order/OrderView';\r\nimport CategoryView from './category/CategoryView';\r\n\r\nfunction DeliveryppTab(props) {\r\n\r\n    const [activeTab, setActiveTab] = useState('product');\r\n\r\n    const toggle = tab => {\r\n        if(activeTab !== tab) setActiveTab(tab);\r\n    };\r\n\r\n    const getAdminTabNavItems = () => {\r\n        return (\r\n            <>\r\n                <NavItem>\r\n                    <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'product' ? 'active' : '' } onClick={() => { toggle('product'); }}>Productos</NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                    <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'orders' ? 'active' : '' } onClick={() => { toggle('orders'); }} >Ordenes</NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                    <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'categories' ? 'active' : '' } onClick={() => { toggle('categories'); }} >Categorías</NavLink>\r\n                </NavItem>\r\n            </>  \r\n        );\r\n    };\r\n\r\n    const getAdminTabPanes = () => {\r\n        return (\r\n            <>\r\n                <TabPane tabId=\"product\">\r\n                    <ProductView showAlert={props.showAlert} />\r\n                </TabPane>\r\n\r\n                <TabPane tabId=\"orders\">\r\n                    <OrderView showAlert={props.showAlert} />\r\n                </TabPane>\r\n\r\n                <TabPane tabId=\"categories\">\r\n                    <CategoryView showAlert={props.showAlert} />\r\n                </TabPane>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n  return (\r\n    <div className=\"container-md p-1 border mb-8\">\r\n\r\n      <Nav tabs>\r\n        {\r\n            props.isUserLoggedIn && props.user.role === 'ADMIN' && getAdminTabNavItems()\r\n        }\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        {\r\n            props.isUserLoggedIn && props.user.role === 'ADMIN' && getAdminTabPanes()\r\n        }\r\n      </TabContent>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryppTab;","import React from \"react\";\r\n\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Button,\r\n  } from 'reactstrap';\r\n\r\n\r\nfunction NavBar({ onSignInClick, onLogOutClick, isUserLoggedIn, user}) {\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">\r\n            <span style={{color: '#940205'}}>Deliverypp</span>\r\n        </NavbarBrand>\r\n        <Nav className=\"mr-auto\" navbar></Nav>\r\n        {\r\n          /*\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                  <NavLink href=\"/products\">Productos</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          */\r\n        }\r\n        \r\n        {\r\n            isUserLoggedIn ?\r\n                  <div>\r\n                      <span className=\"mr-1\">{user.name}</span>\r\n                      <Button outline title=\"Salir\" onClick={onLogOutClick} className=\"mr-1\"><i className=\"fas fa-sign-out-alt\"></i></Button>  \r\n                  </div>\r\n                :\r\n                  <div>\r\n                      <Button outline title=\"Entrar\" onClick={onSignInClick} className=\"mr-1\"><i className=\"fas fa-sign-in-alt\"></i></Button>\r\n                  </div>\r\n        }\r\n\r\n      </Navbar>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        © 2020 Copyright:\r\n        <a href=\"/\"> Deliverypp.com</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst AuthService = {\r\n    generateErrorResponse(error) {\r\n\r\n        let message = error.message;\r\n\r\n        if(message.includes('401')) {\r\n            message = \"Credenciales incorrectas. Verifique que su usuario y contraseña son correctos.\"\r\n        }\r\n\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    handleResponse(response) {\r\n        if(response && response.data) {\r\n\r\n            const deliveryppResponse = response.data;\r\n\r\n            return deliveryppResponse;\r\n\r\n        }\r\n    },\r\n    async register(user) {\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/register`, user);\r\n\r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n\r\n        }\r\n\r\n    },\r\n    async login(user) {\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/login`, user);\r\n\r\n            const responseData = this.handleResponse(response);\r\n\r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n            \r\n            return this.generateErrorResponse(e);\r\n\r\n        }\r\n        \r\n    },\r\n    async getUserByToken(token) {\r\n\r\n        try {\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/auth/${token}`, headers);\r\n    \r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n            \r\n        }\r\n\r\n    },\r\n    async logout(token) {\r\n\r\n        try {\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/auth/${token}`, headers);\r\n    \r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n};\r\n\r\nexport default AuthService;","import React from 'react';\r\n\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport './Loader.css';\r\n\r\nfunction Loader(props) {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <Spinner color=\"light\"  style={{ width: '4rem', height: '4rem' }} />\r\n            <span style={{color: '#fff'}}> Espere...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { useState } from 'react';\r\n\r\nimport {\r\n    Col, Form,\r\n    FormGroup, Label, Input,\r\n    Button,\r\n    FormFeedback \r\n} from 'reactstrap';\r\n\r\nimport AuthService from '../../../services/AuthService';\r\n\r\nimport Loader from '../../common/Loader';\r\n\r\nfunction LoginForm({ onLogin = () => {} }) {\r\n\r\n    const [dirty, setDirty] = useState({\r\n        username: false,\r\n        password: false,\r\n    });\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const login = async e => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            username,\r\n            password\r\n        };\r\n\r\n        setLoading(true);\r\n\r\n        const responseData = await AuthService.login(user);\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            onLogin(responseData);\r\n        }, 1000);\r\n\r\n        // TODO: close form\r\n\r\n    }\r\n\r\n    const onUsernameInputChange = e => {\r\n\r\n        handleSetDirty('username');\r\n\r\n        const input = e.target;\r\n\r\n        const username = input.value;\r\n\r\n        setUsername(username);\r\n\r\n    }\r\n\r\n    const onPasswordInputChange = e => {\r\n\r\n        handleSetDirty('password');\r\n\r\n        const input = e.target;\r\n\r\n        const password = input.value;\r\n\r\n        setPassword(password);\r\n\r\n    }\r\n\r\n    const handleSetDirty = (prop) => {\r\n\r\n        if(!dirty[prop]) {\r\n            const newDirty = {...dirty};\r\n            newDirty[prop] = true;\r\n            setDirty(newDirty);\r\n        }\r\n\r\n    }\r\n\r\n    const isValidUsername = !!username;\r\n    const isValidPassword = !!password && password.length > 5;\r\n\r\n    const isFormValid = () => {\r\n        return isValidUsername && isValidPassword;\r\n    }\r\n\r\n    return (\r\n\r\n        <Form className=\"form position-relative p-2\">\r\n            {\r\n                loading && <Loader />\r\n            }\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"username\">Usuario</Label>\r\n                    <Input\r\n                        valid={dirty.username && isValidUsername}\r\n                        invalid={dirty.username && !isValidUsername}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        value={username}\r\n                        onChange={onUsernameInputChange}\r\n                    />\r\n                    {\r\n                        dirty.username && <FormFeedback>El nombre de usuario no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Contraseña</Label>\r\n                    <Input\r\n                        valid={dirty.password && isValidPassword}\r\n                        invalid={dirty.password && !isValidPassword}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"examplePassword\"\r\n                        placeholder=\"********\"\r\n                        value={password}\r\n                        onChange={onPasswordInputChange}\r\n                    />\r\n                    {\r\n                        dirty.password && <FormFeedback>Introduce una contraseña de más de 5 caracteres.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Button disabled={!isFormValid()} onClick={login}>Entrar</Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\n\r\nimport {\r\n    Col, Form,\r\n    FormGroup, Label, Input,\r\n    Button, FormFeedback \r\n} from 'reactstrap';\r\n\r\nimport validator from 'validator';\r\n\r\nimport AuthService from '../../../services/AuthService';\r\n\r\nimport Loader from '../../common/Loader';\r\n\r\nfunction RegisterForm({onRegister = () => {}}) {\r\n\r\n    const [dirty, setDirty] = useState({\r\n        username: false,\r\n        email: false,\r\n        password: false,\r\n        name: false,\r\n        telephone: false \r\n    });\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [telephone, setTelephone] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const register = async e => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            name,\r\n            username,\r\n            email,\r\n            password,\r\n            lastName,\r\n            telephone\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const response = await AuthService.register(user);\r\n\r\n        if(response && response.token) {\r\n            localStorage.setItem('deliverypp_user_login_token', response.token);\r\n        }\r\n\r\n        clearForm();\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            onRegister(response);\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    const clearForm = () => {\r\n\r\n        setUsername('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setName('');\r\n        setLastName('');\r\n        setTelephone('');\r\n\r\n        setDirty({\r\n            username: false,\r\n            email: false,\r\n            password: false,\r\n            name: false,\r\n            telephone: false \r\n        });\r\n\r\n    }\r\n\r\n    const onUsernameInputChange = e => {\r\n\r\n        handleSetDirty('username');\r\n\r\n        const input = e.target;\r\n\r\n        const username = input.value;\r\n\r\n        setUsername(username);\r\n\r\n    }\r\n\r\n    const onEmailInputChange = e => {\r\n\r\n        handleSetDirty('email');\r\n\r\n        const input = e.target;\r\n\r\n        const email = input.value;\r\n\r\n        setEmail(email);\r\n\r\n    }\r\n\r\n    const onPasswordInputChange = e => {\r\n\r\n        handleSetDirty('password');\r\n\r\n        const input = e.target;\r\n\r\n        const password = input.value;\r\n\r\n        setPassword(password);\r\n\r\n    }\r\n\r\n    const onNameInputChange = e => {\r\n\r\n        handleSetDirty('name');\r\n\r\n        const input = e.target;\r\n\r\n        const name = input.value;\r\n\r\n        setName(name);\r\n    }\r\n\r\n    const onLastNameInputChange = e => {\r\n        const input = e.target;\r\n\r\n        const lastName = input.value;\r\n\r\n        setLastName(lastName);\r\n    }\r\n\r\n    const onTelephoneInputChange = e => {\r\n\r\n        handleSetDirty('telephone');\r\n\r\n        const input = e.target;\r\n\r\n        const telephone = input.value;\r\n\r\n        setTelephone(telephone);\r\n    }\r\n\r\n    const handleSetDirty = (prop) => {\r\n\r\n        if(!dirty[prop]) {\r\n            const newDirty = {...dirty};\r\n            newDirty[prop] = true;\r\n            setDirty(newDirty);\r\n        }\r\n\r\n    }\r\n\r\n    const isValidEmail = !!email && validator.isEmail(email);\r\n    const isValidUsername = !!username;\r\n    const isValidName = !!name;\r\n    const isValidPassword = !!password && password.length > 5;\r\n    const isValidTelephone = !!telephone && telephone.length === 10;\r\n\r\n    const isFormValid = () => {\r\n        return isValidEmail && isValidUsername && isValidName && isValidPassword && isValidTelephone;\r\n    }\r\n\r\n    return (\r\n\r\n        <Form className=\"form position-relative p-2\">\r\n            {\r\n                loading && <Loader />\r\n            }\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"register_username\">Usuario</Label>\r\n                    <Input\r\n                        valid={dirty.username && isValidUsername}\r\n                        invalid={dirty.username && !isValidUsername}\r\n                        type=\"text\"\r\n                        name=\"register_username\"\r\n                        id=\"register_username\"\r\n                        required\r\n                        value={username}\r\n                        onChange={onUsernameInputChange}\r\n                    />\r\n                    {\r\n                        dirty.username && <FormFeedback>El nombre de usuario no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input\r\n                        valid={dirty.email && isValidEmail}\r\n                        invalid={dirty.email && !isValidEmail}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"exampleEmail\"\r\n                        placeholder=\"youremail@email.com\"\r\n                        required\r\n                        value={email}\r\n                        onChange={onEmailInputChange}\r\n                    />\r\n                    {\r\n                        dirty.email && <FormFeedback>Introduce un email válido.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Contraseña</Label>\r\n                    <Input\r\n                        valid={dirty.password && isValidPassword}\r\n                        invalid={dirty.password && !isValidPassword}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"********\"\r\n                        value={password}\r\n                        onChange={onPasswordInputChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.password && <FormFeedback>Introduce una contraseña de más de 5 caracteres.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"name\">Nombre</Label>\r\n                    <Input\r\n                        valid={dirty.name && isValidName}\r\n                        invalid={dirty.name && !isValidName}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        value={name}\r\n                        onChange={onNameInputChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.name && <FormFeedback>El nombre no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"lastname\">Apellido</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"lastname\"\r\n                        id=\"lastname\"\r\n                        value={lastName}\r\n                        onChange={onLastNameInputChange}\r\n                        required\r\n                    />\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"telephone\">Teléfono</Label>\r\n                    <Input\r\n                        valid={dirty.telephone && isValidTelephone}\r\n                        invalid={dirty.telephone && !isValidTelephone}\r\n                        type=\"number\"\r\n                        name=\"telephone\"\r\n                        id=\"telephone\"\r\n                        value={telephone}\r\n                        onChange={onTelephoneInputChange}\r\n                        placeholder=\"8095005000\"\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.name && <FormFeedback>Introduce un teléfono válido.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Button disabled={!isFormValid()} onClick={register}>Registrarse</Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default RegisterForm;","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nimport LoginForm from './LoginForm';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nimport './RegisterLoginTab.css';\r\n\r\nfunction RegisterLoginTab(props) {\r\n\r\n  const [activeTab, setActiveTab] = useState('login');\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  let loginIconColor = 'grey';\r\n  let registerIconColor = 'grey';\r\n\r\n  if(activeTab === 'login') {\r\n    loginIconColor = props.color;\r\n  } else if(activeTab === 'register') {\r\n    registerIconColor = props.color;\r\n  }\r\n\r\n  const onRegister = (responseData) => {\r\n\r\n    if(!responseData) {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el registro. Trate luego.'});\r\n    } else if(responseData && !responseData.success) {\r\n      props.showAlert({ color: 'warning', message: responseData.message});\r\n    } if(responseData && responseData.success) {\r\n      setActiveTab('login');\r\n    } else {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el registro. Trate luego.'});\r\n    }\r\n\r\n  }\r\n\r\n  const onLogin = (responseData) => {\r\n\r\n    if(!responseData) {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el ingreso. Trate luego.'});\r\n    } else if(responseData && !responseData.success) {\r\n      props.showAlert({ color: 'warning', message: responseData.message});\r\n    } if(responseData && responseData.success && responseData.response) {\r\n        const response = responseData.response;\r\n        if(response.token) {\r\n            localStorage.setItem('deliverypp_user_login_token',  response.token);\r\n            props.toggle();\r\n            props.onLogin(response.user);\r\n        }\r\n    } else {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el ingreso. Trate luego.'});\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"RegisterLoginTab\">\r\n      <Modal isOpen={props.showModal}>\r\n        <ModalHeader toggle={props.toggle}>Entrar</ModalHeader>\r\n        <ModalBody>\r\n          <Nav tabs>\r\n            <NavItem>\r\n              <NavLink\r\n                style={{ cursor: \"pointer\" }}\r\n                className={ activeTab === 'login' ? 'active' : '' }\r\n                onClick={() => { toggle(\"login\"); }}\r\n              >\r\n                Entrar <i className=\"fas fa-user\" style={{color: loginIconColor}}></i>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                style={{ cursor: \"pointer\" }}\r\n                className={ activeTab === 'register' ? 'active' : '' }\r\n                onClick={() => { toggle(\"register\"); }}\r\n              >\r\n                Registrarse <i className=\"fas fa-sign-in-alt\" style={{color: registerIconColor}}></i>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"login\">\r\n              <LoginForm onLogin={onLogin} color={props.color} />\r\n            </TabPane>\r\n            <TabPane tabId=\"register\">\r\n              <RegisterForm onRegister={onRegister} color={props.color} />\r\n            </TabPane>\r\n          </TabContent>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterLoginTab;\r\n","import React from 'react';\r\n\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport './Loader.css';\r\n\r\nfunction MainLoader(props) {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <Spinner type=\"grow\" color=\"dark\"  style={{ width: '4rem', height: '4rem' }} />\r\n            <span style={{color: '#fff'}}> Espere...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainLoader;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport DeliveryppTab from './components/deliverypp/DeliveryppTab';\nimport NavBar from './components/main/NavBar';\nimport Footer from './components/main/Footer';\n\nimport RegisterLoginTab from './components/main/auth/RegisterLoginTab';\n\nimport { Alert } from 'reactstrap';\n\nimport MainLoader from './components/common/MainLoader';\n\nimport AuthService from './services/AuthService';\n\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\n\nconst mainColor = '#940205';\n\nfunction App() {\n\n  const [showRegisterLoginTab, setShowRegisterLoginTab] = useState(false);\n  const [alertVisible, setAlertVisible] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('Registered');\n  const [alertColor, setAlertColor] = useState('info');\n  const [appLoading, setAppLoading] = useState(true);\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n\n    const token = localStorage.getItem('deliverypp_user_login_token');\n\n    const getUser = async () => {\n      if(token) {\n        const responseData = await AuthService.getUserByToken(token);\n\n        if(responseData && responseData.response) {\n          const user = responseData.response;\n          if(responseData.success) {\n            setUser(user);\n            setIsUserLoggedIn(true);\n          }\n        } else {\n          setIsUserLoggedIn(false);\n        }\n        setTimeout(() => { setAppLoading(false); }, 1000);\n      } else {\n  \n        setIsUserLoggedIn(false);\n        setTimeout(() => { setAppLoading(false); }, 1000);\n        setIsUserLoggedIn(false);\n\n      }\n    }\n\n    if(!isUserLoggedIn) {\n      getUser();\n    }\n    \n  }, [isUserLoggedIn]);\n\n  const toggleRegisterLoginTab = () => {\n    setShowRegisterLoginTab(!showRegisterLoginTab);\n  };\n\n  const showAlert = ({ color, message }) => {\n    setAlertColor(color);\n    setAlertMessage(message);\n    setAlertVisible(true);\n\n    setTimeout(() => {\n      setAlertColor('info');\n      setAlertVisible(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n\n  const onAlertDismiss = () => {\n    setAlertVisible(false);\n  };\n\n  const onLogOutClick = () => {\n\n    setAppLoading(true);\n\n    const token = localStorage.getItem('deliverypp_user_login_token');\n\n    AuthService.logout(token);\n\n    localStorage.removeItem('deliverypp_user_login_token');\n\n    setUser({});\n    setIsUserLoggedIn(false);\n\n    setTimeout(() => { setAppLoading(false); }, 1000);\n\n  };\n\n  const onLogin = (user) => {\n\n    setAppLoading(true);\n\n    setUser(user);\n    setIsUserLoggedIn(true);\n\n    setTimeout(() => { setAppLoading(false); }, 1000);\n\n  };\n\n  if(appLoading) {\n    return (\n      <MainLoader />\n    )\n  } else {\n    return (\n      <Router>\n        <div className=\"App\">\n\n          <div className=\"alertContainer\">\n            <Alert color={alertColor} isOpen={alertVisible} toggle={onAlertDismiss}>\n                {alertMessage}\n            </Alert>\n          </div>  \n\n          <NavBar\n            isUserLoggedIn={isUserLoggedIn}\n            user={user}\n            onSignInClick={() => setShowRegisterLoginTab(true)}\n            onLogOutClick={onLogOutClick}\n            color={mainColor}\n          />\n          \n          {\n            showRegisterLoginTab && <RegisterLoginTab showModal={showRegisterLoginTab} toggle={toggleRegisterLoginTab} color={mainColor} showAlert={showAlert} onLogin={onLogin} />\n          }\n\n          <Switch>\n            <Route exact path=\"/\" component={() => <DeliveryppTab showAlert={showAlert} color={mainColor} isUserLoggedIn={isUserLoggedIn} user={user} />} />\n            <Route component={Notfound} />\n          </Switch>\n\n          <Footer color={mainColor} />\n        </div>\n      </Router>\n    );\n  }\n\n}\n\nfunction Notfound() {\n  return (\n    <div>\n      La página no fue encontrada\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_CATEGORY, UPDATE_CATEGORY, DELETE_CATEGORY, ADD_CATEGORIES } from \"../actionTypes\";\r\n\r\nconst categoryReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_CATEGORIES: {\r\n        const { categories } = action.payload;\r\n\r\n        return categories;\r\n    }\r\n    case ADD_CATEGORY: {\r\n      const { category } = action.payload;\r\n\r\n      return [...state.categories, category];\r\n    }\r\n    case DELETE_CATEGORY: {\r\n        const { category } = action.payload;\r\n        const categories = state.categories.filter(({ id }) => id !== category.id);\r\n        \r\n        return categories;\r\n    }\r\n    case UPDATE_CATEGORY: {\r\n        const updatedCategory = action.payload.category;\r\n        const categories = state.categories.map(category => {\r\n            if(category.id === updatedCategory.id) {\r\n                return updatedCategory;\r\n            }\r\n        });\r\n\r\n        return categories;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default categoryReducer;","export const ADD_CATEGORY = \"ADD_CATEGORY\";\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\r\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\r\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\";\r\nexport const ADD_CATEGORIES = 'ADD_CATEGORIES';","\r\nconst loggedReducer = (state = false, action) => {\r\n    switch(action.type) {\r\n        case 'SIGN_IN':\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default loggedReducer;","import { combineReducers } from \"redux\";\r\nimport categories from \"./categories\";\r\nimport isLoggedIn from \"./isLoggedIn\";\r\n\r\nconst rootReducer = combineReducers({ categories, isLoggedIn });\r\n\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst CategoryService = {\r\n    generateErrorResponse(message) {\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    handleResponse(response) {\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getCategories() {\r\n\r\n        try {\r\n\r\n            const headers = this.getHeader();\r\n\r\n            const response = await axios.get(`${basePath}/api/categories`, { headers });\r\n\r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n    \r\n    async addCategory(category) {\r\n\r\n        try {\r\n            \r\n            const headers = this.getHeader();\r\n\r\n            const response = await axios.post(`${basePath}/api/categories`, category, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n\r\n    async updateCategory(category) {\r\n\r\n        try {\r\n            \r\n            const headers = this.getHeader();\r\n    \r\n            const response = await axios.put(`${basePath}/api/categories`, category, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n\r\n    async deleteCategory(categoryId) {\r\n\r\n        try {\r\n            \r\n            const headers = this.getHeader();\r\n\r\n            const response = await axios.put(`${basePath}/api/categories/${categoryId}`, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n\r\n    getToken() {\r\n        return localStorage.getItem('deliverypp_user_login_token');\r\n    },\r\n\r\n    getHeader() {\r\n\r\n        const token = this.getToken();\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        return headers;\r\n    }\r\n    \r\n};\r\n\r\nexport default Object.freeze(CategoryService);","import { GET_CATEGORIES, ADD_CATEGORY, DELETE_CATEGORY, UPDATE_CATEGORY, ADD_CATEGORIES } from \"./actionTypes\";\r\n\r\nimport CategoryService from '../services/CategoryService';\r\n\r\n//http://localhost:8080\r\n\r\nimport store from './store';\r\n\r\n\r\nexport const loadCategories = () => {\r\n    return dispatch => {\r\n        CategoryService.getCategories()\r\n        .then(response => {\r\n            if(response.success) {\r\n                dispatch(addCategories(response.response));\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const addCategories = (categories) => ({\r\n    type: ADD_CATEGORIES,\r\n    payload: {\r\n        categories\r\n    }\r\n})\r\n\r\nexport const getCategories = () => ({\r\n    type: GET_CATEGORIES\r\n});\r\n\r\nexport const deleteCategory = category => ({\r\n    type: DELETE_CATEGORY,\r\n    payload: {\r\n        category\r\n    }\r\n});\r\n\r\nexport const addCategory = category => ({\r\n    type: ADD_CATEGORY,\r\n    payload: {\r\n        category\r\n    }\r\n});\r\n\r\nexport const updateCategory = category => ({\r\n    type: UPDATE_CATEGORY,\r\n    payload: {\r\n        category\r\n    }\r\n});\r\n\r\n\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { loadCategories } from './actions';\r\n\r\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunkMiddleware)\r\n);\r\n\r\n\r\nexport default store;\r\n\r\n\r\nstore.dispatch(loadCategories());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport store from './redux/store';\n\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}