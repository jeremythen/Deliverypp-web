{"version":3,"sources":["components/deliverypp/product/ProductCard.js","components/deliverypp/product/ProductTable.js","components/common/Toolbar.js","components/deliverypp/product/ProductView.js","components/deliverypp/order/OrderTable.js","components/deliverypp/order/OrderView.js","components/deliverypp/DeliveryppTab.js","components/main/NavBar.js","components/main/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ProductCard","props","className","selected","onClick","Card","style","width","Img","variant","src","imageUrl","Body","Title","category","Text","description","price","ProductTable","Table","striped","bordered","hover","products","map","product","key","id","Toolbar","console","log","type","placeholder","aria-describedby","required","onEditClick","disabled","title","onAddClick","onDeleteClick","ProductView","useState","cardView","selectedProductId","setSelectedProductId","setProducts","fetchData","a","axios","get","response","deliveryppResponse","data","status","error","useEffect","length","onProductCardClick","handleDeleteProduct","delete","OrderTable","orders","order","onRowClick","total","comment","OrderView","setOrders","selectedOrderId","setSelectedOrderId","DeliveryppTab","Tabs","defaultActiveKey","Tab","eventKey","NavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.19ef921b.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport { Card, Button } from 'react-bootstrap';\r\n\r\nimport './ProductCard.css';\r\n\r\nfunction ProductCard(props) {\r\n    return (\r\n        <div className={`ProductCard m-1 p-2 ${props.selected}`} onClick={() => props.onClick(props)}>\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src={props.imageUrl} />\r\n                <Card.Body>\r\n                    <Card.Title>{props.category}</Card.Title>\r\n                    <Card.Text>\r\n                        {\r\n                            props.description\r\n                        }\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        {\r\n                            `RD$${props.price}`\r\n                        }\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nfunction ProductTable(props) {\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Categoría</th>\r\n          <th>Descripción</th>\r\n          <th>Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.products.map((product) => {\r\n          return <tr key={product.id} onClick={() => props.onClick(product)}>\r\n                    <td>{product.id}</td>\r\n                    <td>{product.category}</td>\r\n                    <td>{product.description}</td>\r\n                    <td>{product.price}</td>\r\n                </tr>;\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default ProductTable;\r\n","import React from \"react\";\r\n\r\nimport './Toolbar.css';\r\n\r\nfunction Toolbar(props) {\r\n    console.log('props', props)\r\n  return (\r\n    <div className=\"Toolbar p-2 border rounded\">\r\n      <div className=\"searchInputContainer p-1\">\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"inputGroupPrepend2\">\r\n                <i className=\"fa fa-search\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"validationDefaultUsername\"\r\n              placeholder=\"Buscar\"\r\n              aria-describedby=\"inputGroupPrepend2\"\r\n              required\r\n            />\r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"actionButtonsContainer p-1\">\r\n        <button onClick={props.onEditClick} disabled={props.disabled} className=\"btn btn-secondary mr-1\" title=\"Editar Producto\">\r\n          <i className=\"fa fa-pencil\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onAddClick} className=\"btn btn-info mr-1\" title=\"Agregar Product\">\r\n          <i className=\"fa fa-plus\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onDeleteClick} disabled={props.disabled} className=\"btn btn-danger\" title=\"Borrar Product\">\r\n          <i className=\"fa fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toolbar;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductTable from \"./ProductTable\";\r\n\r\nimport \"./ProductView.css\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Toolbar from '../../common/Toolbar';\r\n\r\nfunction ProductView() {\r\n  const [cardView, setCardView] = useState(true);\r\n  const [selectedProductId, setSelectedProductId] = useState(-1);\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const response = await axios.get(\"http://localhost:8080/api/product\");\r\n  \r\n    const deliveryppResponse = response.data;\r\n\r\n    if (deliveryppResponse.status === \"SUCCESS\") {\r\n      setProducts(deliveryppResponse.response);\r\n    } else {\r\n      console.error(\"Error getting products.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [products.length === 0]);\r\n\r\n  const onProductCardClick = product => {\r\n    console.log('in onProductCardClick product', product)\r\n    setSelectedProductId(product.id);\r\n\r\n    console.log('in onProductCardClick id: ', product.id)\r\n  }\r\n\r\n  const getProductCards = () => {\r\n    return products.map((product) => {\r\n        const selected = product.id == selectedProductId ? 'selected' : '';\r\n        return <ProductCard key={product.id} {...product} onClick={onProductCardClick} selected={selected} />;\r\n    });\r\n  };\r\n\r\n  const getProductTable = () => {\r\n    return <ProductTable products={products} />;\r\n  };\r\n\r\n  const handleProductEdit = () => {\r\n      console.log('in handleProductEdit for product id: ', selectedProductId)\r\n  }\r\n\r\n  const handleAddProduct = () => {\r\n    console.log('in handleAddProduct for product id: ', selectedProductId)\r\n  }\r\n\r\n  const handleDeleteProduct = async () => {\r\n\r\n    const response = await axios.delete(`http://localhost:8080/api/product/${selectedProductId}`);\r\n\r\n    console.log('response', response);\r\n    console.log('response data', response.data);\r\n\r\n    fetchData();\r\n\r\n    console.log('in handleDeleteProduct for product id: ', selectedProductId)\r\n  }\r\n\r\n  return (\r\n    <div className=\"ProductView\">\r\n      {false && (\r\n        <div>\r\n          <button className=\"btn btn-primary\" onClick={() => setCardView(true)}>\r\n            Card View\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setCardView(false)}\r\n          >\r\n            Card Table\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <Toolbar\r\n        onEditClick={handleProductEdit}\r\n        onAddClick={handleAddProduct}\r\n        onDeleteClick={handleDeleteProduct}\r\n        disabled={selectedProductId == -1}\r\n    />\r\n\r\n      <div>\r\n        {cardView ? (\r\n          <div className=\"ProductCardContainer\">{getProductCards()}</div>\r\n        ) : (\r\n          <div className=\"ProductTableContainer\">{getProductTable()}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductView;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nfunction OrderTable(props) {\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Total</th>\r\n          <th>Estado</th>\r\n          <th>Comentario</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.orders.map((order) => {\r\n          return <tr key={order.id} onClick={() => props.onRowClick(order)}>\r\n                    <td>{order.id}</td>\r\n                    <td>{order.total}</td>\r\n                    <td>{order.status}</td>\r\n                    <td>{order.comment}</td>\r\n                </tr>;\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default OrderTable;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport OrderTable from \"./OrderTable\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Toolbar from \"../../common/Toolbar\";\r\n\r\nimport './OrderView.css';\r\n\r\nfunction OrderView(props) {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const [selectedOrderId, setSelectedOrderId] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get(\"http://localhost:8080/api/order\");\r\n\r\n      const deliveryppResponse = response.data;\r\n\r\n      if (deliveryppResponse.status === \"SUCCESS\") {\r\n        setOrders(deliveryppResponse.response);\r\n      } else {\r\n        console.error(\"Error getting products.\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [orders.length === 0]);\r\n\r\n  const handleEditOrder = () => {};\r\n\r\n  const handleAddOrder = () => {};\r\n\r\n  const handleDeleteOrder = () => {};\r\n\r\n  const handleRowClick = order => {\r\n    console.log('handleRowClick order', order)\r\n\r\n    setSelectedOrderId(order.id);\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"OrderView\">\r\n      <div>\r\n        <Toolbar\r\n          onEditClick={handleEditOrder}\r\n          onAddClick={handleAddOrder}\r\n          onDeleteClick={handleDeleteOrder}\r\n          disabled={selectedOrderId == -1}\r\n        />\r\n      </div>\r\n      <div className=\"orderTableContainer mt-1\">\r\n        <OrderTable\r\n            orders={orders}\r\n            onRowClick={handleRowClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderView;\r\n","import React from 'react';\r\n\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\n\r\nimport ProductView from './product/ProductView';\r\nimport OrderView from './order/OrderView';\r\n\r\nfunction DeliveryppTab() {\r\n  return (\r\n    <div className=\"container-md p-1 border mb-8\">\r\n      <Tabs defaultActiveKey=\"products\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"products\" title=\"Productos\">\r\n          <ProductView />\r\n        </Tab>\r\n        <Tab eventKey=\"orders\" title=\"Ordenes\">\r\n          <OrderView />\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryppTab;","import React from \"react\";\r\n\r\nimport { Navbar, NavDropdown, Nav, Form, Button, FormControl  } from 'react-bootstrap';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">Deliverypp</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            <Nav.Link href=\"#link\">Link</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        © 2020 Copyright:\r\n        <a href=\"\"> Deliverypp.com</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.css';\n\nimport DeliveryppTab from './components/deliverypp/DeliveryppTab';\nimport NavBar from './components/main/NavBar';\nimport Footer from './components/main/Footer';\nimport Main from './components/main/Main';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <DeliveryppTab />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}