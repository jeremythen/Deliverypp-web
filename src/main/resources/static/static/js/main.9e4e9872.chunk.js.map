{"version":3,"sources":["components/deliverypp/product/ProductCard.js","components/deliverypp/product/ProductTable.js","components/common/Toolbar.js","deliverypp.js","services/ProductService.js","components/common/Modal.js","components/deliverypp/product/ProductView.js","components/deliverypp/order/OrderTable.js","services/OrderService.js","components/deliverypp/order/OrderView.js","components/deliverypp/product/OrderProductsView.js","components/deliverypp/DeliveryppTab.js","components/main/NavBar.js","components/main/Footer.js","services/AuthService.js","components/common/Loader.js","components/main/auth/LoginForm.js","components/main/auth/RegisterForm.js","components/main/auth/RegisterLoginTab.js","components/common/MainLoader.js","App.js","serviceWorker.js","index.js"],"names":["ProductCard","props","className","selected","onClick","Card","style","width","CardImg","top","src","imageUrl","alt","description","CardBody","CardTitle","category","CardText","price","ProductTable","Table","striped","bordered","hover","products","map","product","key","id","ActionButtons","onEditClick","disabled","title","onAddClick","onDeleteClick","Toolbar","onChange","onSearch","type","placeholder","aria-describedby","required","noActionButtons","ENVIRONMENTS","deliverypp","env","getPath","this","STATUS","SUCCESS","ERROR","basePath","ProductService","handleResponse","response","console","info","data","deliveryppResponse","getProducts","axios","get","getProductById","productId","token","localStorage","getItem","headers","Authorization","addProduct","post","updateProduct","put","deleteProductById","delete","DModal","Modal","isOpen","showModal","ModalHeader","toggle","ModalBody","children","ModalFooter","Button","color","onSave","onCancel","ProductActionForm","Input","name","value","e","target","onProductUpdate","Label","for","ProductView","showAlert","useState","cardView","selectedProductId","setSelectedProductId","setProducts","filterableProducts","setFilterableProducts","setShowModal","action","setAction","selectedProduct","setSelectedProduct","filter","setFilter","a","responseData","log","status","message","createProduct","newProduct","newProducts","filterProducts","forEach","useEffect","onProductCardClick","handleDeleteProduct","window","confirm","filteredProducts","Object","keys","propValue","includes","getActionDescription","event","OrderTable","orders","order","onRowClick","user","username","email","telephone","createdAt","total","comment","OrderService","getOrders","getOrderById","orderId","addOrder","OrderView","setOrders","filterableOrders","setFilterableOrders","setSelectedOrderId","filteredOrders","OrderProductsView","DeliveryppTab","activeTab","setActiveTab","tab","Nav","tabs","NavItem","NavLink","cursor","isUserLoggedIn","role","TabContent","TabPane","tabId","NavBar","onSignInClick","onLogOutClick","Navbar","light","expand","NavbarBrand","href","navbar","outline","Footer","AuthService","register","login","getUserByToken","logout","Loader","Spinner","height","LoginForm","onLogin","password","dirty","setDirty","setUsername","setPassword","loading","setLoading","preventDefault","setTimeout","handleSetDirty","prop","newDirty","isValidUsername","isValidPassword","length","Form","Col","FormGroup","valid","invalid","FormFeedback","RegisterForm","onRegister","setEmail","setName","lastName","setLastName","setTelephone","setItem","clearForm","isValidEmail","validator","isEmail","isValidName","isValidTelephone","RegisterLoginTab","loginIconColor","registerIconColor","handleRegisterLoginResponse","MainLoader","App","showRegisterLoginTab","setShowRegisterLoginTab","alertVisible","setAlertVisible","alertMessage","setAlertMessage","alertColor","setAlertColor","appLoading","setAppLoading","setIsUserLoggedIn","setUser","getUser","Alert","removeItem","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9e4e9872.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle\r\n  } from 'reactstrap';\r\n  \r\nimport './ProductCard.css';\r\n\r\nfunction ProductCard(props) {\r\n    return (\r\n        <div className={`ProductCard m-1 p-2 ${props.selected}`} onClick={() => props.onClick(props)}>\r\n            <Card style={{ width: '18rem' }}>\r\n                <CardImg top width=\"100%\" src={props.imageUrl} alt={props.description} />\r\n                <CardBody>\r\n                    <CardTitle>{props.category}</CardTitle>\r\n                    <CardText>\r\n                        {\r\n                            props.description\r\n                        }\r\n                    </CardText>\r\n                    <CardText>\r\n                        {\r\n                            `RD$${props.price}`\r\n                        }\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard;","import React from \"react\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nfunction ProductTable(props) {\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Categoría</th>\r\n          <th>Descripción</th>\r\n          <th>Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.products.map((product) => {\r\n          return <tr key={product.id} onClick={() => props.onClick(product)}>\r\n                    <td>{product.id}</td>\r\n                    <td>{product.category}</td>\r\n                    <td>{product.description}</td>\r\n                    <td>{product.price}</td>\r\n                </tr>;\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default ProductTable;\r\n","import React from \"react\";\r\n\r\nimport './Toolbar.css';\r\n\r\nfunction Toolbar(props) {\r\n  return (\r\n    <div className=\"Toolbar p-2 border rounded\">\r\n      <div className=\"searchInputContainer p-1\">\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"inputGroupPrepend2\">\r\n                <i className=\"fa fa-search\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n                onChange={props.onSearch}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Buscar\"\r\n                aria-describedby=\"inputGroupPrepend2\"\r\n                required\r\n            />\r\n          </div>\r\n      </div>\r\n\r\n        {\r\n            props.noActionButtons ? null : <ActionButtons {...props} />\r\n        }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ActionButtons(props) {\r\n    return (\r\n        <div className=\"actionButtonsContainer p-1\">\r\n        <button onClick={props.onEditClick} disabled={props.disabled} className=\"btn btn-secondary mr-1\" title=\"Editar Producto\">\r\n          <i className=\"fa fa-pencil\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onAddClick} className=\"btn btn-info mr-1\" title=\"Agregar Product\">\r\n          <i className=\"fa fa-plus\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onDeleteClick} disabled={props.disabled} className=\"btn btn-danger\" title=\"Borrar Product\">\r\n          <i className=\"fa fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar;","\r\nconst ENVIRONMENTS = {\r\n    DEV: 'dev',\r\n    QA: 'qa',\r\n    PROD: 'prod'\r\n};\r\n\r\nconst STATUS = {\r\n    SUCCESS: 'SUCCESS',\r\n    ERROR: 'ERROR'\r\n};\r\n\r\nconst deliverypp = {\r\n    env: ENVIRONMENTS.DEV,\r\n    getPath() {\r\n        switch(this.env) {\r\n            case ENVIRONMENTS.DEV:\r\n                return 'http://localhost:8080';\r\n            case ENVIRONMENTS.QA:\r\n            case ENVIRONMENTS.PROD:\r\n                return '/'\r\n        }\r\n    },\r\n    STATUS\r\n};\r\n\r\nexport default  deliverypp;","import axios from \"axios\";\r\n\r\nimport deliverypp from '../deliverypp';\r\n\r\nconst basePath = deliverypp.getPath();\r\n\r\nconst { SUCCESS, ERROR } = deliverypp.STATUS;\r\n\r\nconst ProductService = {\r\n    async handleResponse(response) {\r\n        console.info('handleResponse: ', response);\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getProducts() {\r\n\r\n        const response = await axios.get(`${basePath}/api/product`);\r\n\r\n        return this.handleResponse(response);\r\n\r\n    },\r\n    \r\n    async getProductById(productId) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.get(`${basePath}/api/product/${productId}`, { headers });\r\n\r\n        return this.handleResponse(response);\r\n    \r\n    },\r\n    \r\n    async addProduct(product) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.post(`${basePath}/api/product`, product, { headers });\r\n\r\n        return this.handleResponse(response);\r\n\r\n    },\r\n    async updateProduct(product) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.put(`${basePath}/api/product`, product, { headers });\r\n\r\n        return this.handleResponse(response);\r\n\r\n    },\r\n    async deleteProductById(productId) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.delete(`${basePath}/api/product/${productId}`, { headers });\r\n\r\n        return this.handleResponse(response);\r\n\r\n\r\n    }\r\n};\r\n\r\nexport default ProductService;","import React from 'react';\r\n\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nfunction DModal(props) {\r\n    return (\r\n        <div>\r\n        <Modal isOpen={props.showModal}>\r\n            <ModalHeader toggle={props.toggle}>{props.title}</ModalHeader>\r\n            <ModalBody>\r\n                {\r\n                    props.children\r\n                }\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"success\" onClick={props.onSave}>Guardar</Button>{' '}\r\n            <Button color=\"secondary\" onClick={props.onCancel}>Cancelar</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DModal;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductTable from \"./ProductTable\";\r\n\r\nimport \"./ProductView.css\";\r\n\r\nimport Toolbar from '../../common/Toolbar';\r\n\r\nimport ProductService from '../../../services/ProductService';\r\n\r\nimport Modal from '../../common/Modal';\r\n\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Input, Label\r\n  } from 'reactstrap';\r\n\r\n\r\nfunction ProductView({ showAlert }) {\r\n  const [cardView, setCardView] = useState(true);\r\n  const [selectedProductId, setSelectedProductId] = useState(-1);\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [filterableProducts, setFilterableProducts] = useState([]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [action, setAction] = useState('add');\r\n\r\n  const [selectedProduct, setSelectedProduct] = useState({description: '', price: 0, imageUrl: '', category: ''});\r\n\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const getProducts = async () => {\r\n\r\n    const responseData = await ProductService.getProducts();\r\n    console.log('in getProducts responseData', responseData)\r\n    if(responseData && responseData.status === 'SUCCESS') {\r\n      const products = responseData.response;\r\n      setProducts(products);\r\n        setFilterableProducts(products);\r\n        \r\n    } else {\r\n      console.log('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error obteniendo productos.'});\r\n    }\r\n\r\n  };\r\n\r\n  const createProduct = async () => {\r\n\r\n    const responseData = await ProductService.addProduct(selectedProduct);\r\n\r\n    if(responseData && responseData.status === 'SUCCESS') {\r\n\r\n      const newProduct = responseData.response;\r\n\r\n      console.log('creatProduct ', newProduct)\r\n\r\n      const newProducts = [newProduct, ...products];\r\n\r\n      setProducts(newProducts);\r\n      console.log('filter', filter)\r\n      filterProducts(newProducts, filter);\r\n      showAlert({ color: 'success', message: 'Producto agregado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.log('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error agregando producto.'});\r\n    }\r\n    \r\n  };\r\n  const updateProduct = async () => {\r\n    \r\n    const responseData = await ProductService.updateProduct(selectedProduct);\r\n\r\n    if(responseData && responseData.status === 'SUCCESS') {\r\n\r\n      const newProduct = responseData.response;\r\n\r\n      const newProducts = [...products];\r\n\r\n      newProducts.forEach(product => {\r\n        if(product.id === newProduct.id) {\r\n          product.description = newProduct.description;\r\n          product.price = newProduct.price;\r\n          product.category = newProduct.category;\r\n          product.imageUrl = newProduct.imageUrl;\r\n          return false;\r\n        }\r\n      });\r\n\r\n      setProducts(newProducts);\r\n      filterProducts(newProducts, filter);\r\n      showAlert({ color: 'success', message: 'Producto agregado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.log('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error agregando producto.'});\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    getProducts();\r\n\r\n  }, []);\r\n\r\n  const onProductCardClick = product => {\r\n    setSelectedProduct(product);\r\n    setSelectedProductId(product.id);\r\n  };\r\n\r\n  const getProductCards = () => {\r\n    return filterableProducts.map((product) => {\r\n        const selected = product.id == selectedProductId ? 'selected' : '';\r\n        return <ProductCard key={product.id} {...product} onClick={onProductCardClick} selected={selected} />;\r\n    });\r\n  };\r\n\r\n  const getProductTable = () => {\r\n    return <ProductTable products={filterableProducts} />;\r\n  };\r\n\r\n  const showEditProductForm = () => {\r\n\r\n    setAction('edit');\r\n\r\n    setShowModal(true);\r\n\r\n  }\r\n\r\n  const showAddProductForm = () => {\r\n\r\n    setAction('add');\r\n    setSelectedProduct({description: '', price: 0, imageUrl: '', category: ''});\r\n    setShowModal(true);\r\n\r\n  }\r\n\r\n  const handleDeleteProduct = async () => {\r\n\r\n    const deleteProductConfirm = window.confirm('Seguro quiere borrar el producto seleccionado?');\r\n\r\n    if(deleteProductConfirm) {\r\n\r\n      const responseData = await ProductService.deleteProductById(selectedProductId);\r\n\r\n      if(responseData && responseData.status === 'SUCCESS') {\r\n        showAlert({ color: 'success', message: 'Producto eliminado.'});\r\n        console.log('products before filtering: ', [...products])\r\n        const filteredProducts = products.filter(product => product.id != selectedProductId);\r\n        console.log('products after filtering: ', [...filteredProducts])\r\n        setProducts(filteredProducts);\r\n\r\n        console.log('filter', filter)\r\n        filterProducts(filteredProducts, filter);\r\n      } else {\r\n        console.log('Error deleting product.')\r\n        showAlert({ color: 'warning', message: 'Error eliminando producto.'});\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const filterProducts = (products, value) => {\r\n    if(value) {\r\n\r\n      const filteredProducts = products.filter(product => {\r\n\r\n          const keys = Object.keys(product);\r\n\r\n          for(let key of keys) {\r\n\r\n              if(key === 'category' || key === 'price' || key === 'description') {\r\n                  let propValue = product[key];\r\n                  if(propValue) {\r\n                      propValue = '' + propValue;\r\n                      if(propValue.includes(value)) {\r\n                          return true;\r\n                      }\r\n                  }\r\n              }\r\n\r\n              \r\n          }\r\n\r\n      });\r\n      console.log('in value filteredProducts', [...filteredProducts])\r\n      setFilterableProducts(filteredProducts);\r\n\r\n  } else {\r\n    console.log('outside value products', [...products])\r\n      setFilterableProducts(products);\r\n  }\r\n  }\r\n\r\n  const handleSearch = (event) => {\r\n\r\n    const value = event.target.value;\r\n\r\n    setFilter(value);\r\n    filterProducts(products, value);\r\n\r\n  }\r\n\r\n  const onSave = () => {\r\n\r\n    switch(action) {\r\n      case 'add':\r\n        createProduct();\r\n        break;\r\n      case 'edit':\r\n        updateProduct();\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setShowModal(false);\r\n  }\r\n\r\n  const toggle = () => {\r\n    setShowModal(!showModal);\r\n  }\r\n\r\n  const getActionDescription = () => {\r\n      switch(action) {\r\n        case 'add':\r\n            return 'Agregar un producto';\r\n        case 'edit':\r\n            return 'Editar un producto';\r\n      }\r\n  }\r\n\r\n  const onProductUpdate = product => {\r\n\r\n    setSelectedProduct(product);\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"ProductView\">\r\n    <Modal\r\n        onSave={onSave}\r\n        onCancel={onCancel}\r\n        showModal={showModal}\r\n        toggle={toggle}\r\n        title={getActionDescription()}\r\n    >\r\n        <ProductActionForm imageUrl={'product.png'} onProductUpdate={onProductUpdate} product={selectedProduct} />\r\n    </Modal>\r\n\r\n      {false && (\r\n        <div>\r\n          <button className=\"btn btn-primary\" onClick={() => setCardView(true)}>\r\n            Card View\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setCardView(false)}\r\n          >\r\n            Card Table\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n        <Toolbar\r\n            onSearch={handleSearch}\r\n            onEditClick={showEditProductForm}\r\n            onAddClick={showAddProductForm}\r\n            onDeleteClick={handleDeleteProduct}\r\n            disabled={selectedProductId == -1}\r\n        />\r\n\r\n      <div>\r\n        {cardView ? (\r\n          <div className=\"ProductCardContainer\">{getProductCards()}</div>\r\n        ) : (\r\n          <div className=\"ProductTableContainer\">{getProductTable()}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductActionForm(props) {\r\n\r\n\r\n    const onImageUrlChange = (e) => {\r\n\r\n        let value = e.target.value;\r\n\r\n        if(!value) {\r\n            value = 'product.png';\r\n        }\r\n\r\n        const product = {...props.product};\r\n\r\n        product.imageUrl = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.category = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onDescriptionChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.description = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onPriceChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.price = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const imageUrl = props.product.imageUrl ? props.product.imageUrl : 'product.png';\r\n\r\n    return (\r\n        <div>\r\n        <Card>\r\n            <CardImg top width=\"100%\" src={imageUrl} />\r\n            <CardBody>\r\n                <CardTitle>\r\n                    <Input type=\"text\" name=\"category\" id=\"category\" placeholder=\"Categoría\" value={props.product.category} onChange={onCategoryChange} />\r\n                </CardTitle>\r\n                <CardText>\r\n                    <Label for=\"imageUrl\">URL de la imagen</Label>\r\n                    <Input type=\"url\" name=\"imageUrl\" id=\"imageUrl\"  value={imageUrl} onChange={onImageUrlChange}/>\r\n                </CardText>\r\n                <CardText>\r\n                    <Label for=\"description\">Descripción</Label>\r\n                    <Input type=\"textarea\" name=\"description\" id=\"description\" value={props.product.description} onChange={onDescriptionChange} />\r\n                </CardText>\r\n                <CardText>\r\n                    <Input type=\"number\" name=\"price\" id=\"price\" placeholder=\"Precio\"  value={props.product.price} onChange={onPriceChange}/>\r\n                </CardText>\r\n            </CardBody>\r\n        </Card>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProductView;\r\n","import React from \"react\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nfunction OrderTable(props) {\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Usuario</th>\r\n          <th>Email</th>\r\n          <th>Teléfono</th>\r\n          <th>Fecha</th>\r\n          <th>Total</th>\r\n          <th>Estado</th>\r\n          <th>Comentario</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.orders.map((order) => {\r\n          return <tr key={order.id} onClick={() => props.onRowClick(order)}>\r\n                    <td>{order.id}</td>\r\n                    <td>{order.user.username}</td>\r\n                    <td>{order.user.email}</td>\r\n                    <td>{order.user.telephone}</td>\r\n                    <td>{order.createdAt}</td>\r\n                    <td>{order.total}</td>\r\n                    <td>{order.status}</td>\r\n                    <td>{order.comment}</td>\r\n                </tr>;\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default OrderTable;\r\n","import axios from \"axios\";\r\n\r\nimport deliverypp from '../deliverypp';\r\n\r\nconst basePath = deliverypp.getPath();\r\n\r\nconst { SUCCESS, ERROR } = deliverypp.STATUS;\r\n\r\nconst OrderService = {\r\n    handleResponse(response) {\r\n        console.info('handleResponse: ', response);\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getOrders() {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        console.log('headers',headers )\r\n\r\n        const response = await axios.get(`${basePath}/api/order`, { headers });\r\n\r\n        return this.handleResponse(response);\r\n\r\n    },\r\n    \r\n    async getOrderById(orderId) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.get(`${basePath}/api/order/${orderId}`, { headers });\r\n\r\n        return this.handleResponse(response);\r\n    \r\n    },\r\n    \r\n    async addOrder(order) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.post(`${basePath}/api/order`, order, { headers });\r\n\r\n        return this.handleResponse(response);\r\n\r\n    },\r\n    \r\n};\r\n\r\nexport default OrderService;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport OrderTable from \"./OrderTable\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Toolbar from \"../../common/Toolbar\";\r\n\r\nimport OrderService from '../../../services/OrderService';\r\n\r\nimport './OrderView.css';\r\n\r\nfunction OrderView({ showAlert }) {\r\n  const [orders, setOrders] = useState([]);\r\n  const [filterableOrders, setFilterableOrders] = useState([]);\r\n\r\n  const [selectedOrderId, setSelectedOrderId] = useState(-1);\r\n\r\n  const getOrders = async () => {\r\n\r\n    const responseData = await OrderService.getOrders();\r\n\r\n    if(responseData && responseData.status === 'SUCCESS') {\r\n      const orders = responseData.response;\r\n        setOrders(orders);\r\n        setFilterableOrders(orders);\r\n    } else {\r\n      console.log('Error getting orders.')\r\n      showAlert({ color: 'warning', message: 'Error getting orders.'});\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n  const handleRowClick = order => {\r\n\r\n    setSelectedOrderId(order.id);\r\n\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n\r\n    const value = event.target.value;\r\n\r\n    if(value) {\r\n\r\n        const filteredOrders = orders.filter(order => {\r\n\r\n            const keys = Object.keys(order);\r\n\r\n            for(let key of keys) {\r\n\r\n                let propValue = order[key];\r\n                if(propValue) {\r\n                    propValue = '' + propValue;\r\n                    if(propValue.includes(value)) {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n        setFilterableOrders(filteredOrders);\r\n\r\n    } else {\r\n        setFilterableOrders(orders);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"OrderView\">\r\n      <div>\r\n        <Toolbar\r\n        onSearch={handleSearch}\r\n          noActionButtons={true}\r\n        />\r\n      </div>\r\n      <div className=\"orderTableContainer mt-1\">\r\n        <OrderTable\r\n            orders={filterableOrders}\r\n            onRowClick={handleRowClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderView;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport ProductCard from './ProductCard';\r\n\r\nimport ProductService from '../../../services/ProductService';\r\n\r\nimport './ProductView.css';\r\n\r\nfunction OrderProductsView({ showAlert }) {\r\n\r\n    const [products, setProducts ] = useState([]);\r\n    const [filterableProducts, setFilterableProducts ] = useState([]);\r\n    const [selectedProductId, setSelectedProductId] = useState(-1);\r\n    const [selectedProduct, setSelectedProduct] = useState({});\r\n\r\n    const getProducts = async () => {\r\n\r\n        const responseData = await ProductService.getProducts();\r\n\r\n        if(responseData.status === 'SUCCESS') {\r\n            const products = responseData.response;\r\n            setProducts(products);\r\n              setFilterableProducts(products);\r\n              \r\n          } else {\r\n            console.log('Error getting products')\r\n            showAlert({ color: 'warning', message: 'Error obteniendo productos.'});\r\n          }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProducts();\r\n    }, []);\r\n\r\n    const onProductCardClick = product => {\r\n        setSelectedProduct(product);\r\n        setSelectedProductId(product.id);\r\n    };\r\n\r\n    const getProductCards = () => {\r\n        return filterableProducts.map((product) => {\r\n            const selected = product.id == selectedProductId ? 'selected' : '';\r\n            return <ProductCard key={product.id} {...product} onClick={onProductCardClick} selected={selected} />;\r\n        });\r\n      };\r\n\r\n    return (\r\n        <div className=\"ProductCardContainer\">\r\n\r\n            {\r\n                getProductCards()\r\n            }\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OrderProductsView;","import React, { useState } from 'react';\r\n\r\nimport ProductView from './product/ProductView';\r\nimport OrderView from './order/OrderView';\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport OrderProductsView from './product/OrderProductsView';\r\n\r\nfunction DeliveryppTab(props) {\r\n\r\n    const [activeTab, setActiveTab] = useState('available_products');\r\n\r\n    const toggle = tab => {\r\n        if(activeTab !== tab) setActiveTab(tab);\r\n    };\r\n\r\n    const getAdminTabNavItems = () => {\r\n        return (\r\n            <>\r\n                <NavItem>\r\n                    <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'product' ? 'active' : '' } onClick={() => { toggle('product'); }}>Productos</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'orders' ? 'active' : '' } onClick={() => { toggle('orders'); }} >Ordenes</NavLink>\r\n                </NavItem>\r\n            </>  \r\n        );\r\n    };\r\n\r\n    const getAdminTabPanes = () => {\r\n        return (\r\n            <>\r\n                <TabPane tabId=\"product\">\r\n                    <ProductView showAlert={props.showAlert} />\r\n                </TabPane>\r\n                <TabPane tabId=\"orders\">\r\n                    <OrderView showAlert={props.showAlert} />\r\n                </TabPane>\r\n            </>\r\n        )\r\n    }\r\n\r\n  return (\r\n    <div className=\"container-md p-1 border mb-8\">\r\n\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'available_products' ? 'active' : '' } onClick={() => { toggle('available_products'); }}>Productos Disponibles</NavLink>\r\n        </NavItem>\r\n        {\r\n            props.isUserLoggedIn && props.user.role === 'ADMIN' && getAdminTabNavItems()\r\n        }\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"available_products\">\r\n          <OrderProductsView showAlert={props.showAlert} />\r\n        </TabPane>\r\n        {\r\n            props.isUserLoggedIn && props.user.role === 'ADMIN' && getAdminTabPanes()\r\n        }\r\n      </TabContent>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryppTab;","import React from \"react\";\r\n\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Button,\r\n  } from 'reactstrap';\r\n\r\n\r\nfunction NavBar({ onSignInClick, onLogOutClick, isUserLoggedIn, user}) {\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">\r\n            <span style={{color: '#940205'}}>Deliverypp</span>\r\n        </NavbarBrand>\r\n        <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n                <NavLink href=\"/products\">Productos</NavLink>\r\n            </NavItem>\r\n            \r\n        </Nav>\r\n\r\n        {\r\n            isUserLoggedIn ?\r\n                    <>\r\n                        <span className=\"mr-1\">{user.name}</span>\r\n                        <Button outline title=\"Salir\" onClick={onLogOutClick} className=\"mr-1\"><i className=\"fas fa-sign-out-alt\"></i></Button>  \r\n                    </>\r\n                    \r\n                :\r\n                    <Button outline title=\"Entrar\" onClick={onSignInClick} className=\"mr-1\"><i className=\"fas fa-sign-in-alt\"></i></Button>\r\n        }\r\n\r\n      </Navbar>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        © 2020 Copyright:\r\n        <a href=\"\"> Deliverypp.com</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nimport deliverypp from '../deliverypp';\r\n\r\nconst basePath = deliverypp.getPath();\r\n\r\nconst { SUCCESS, ERROR } = deliverypp.STATUS;\r\n\r\nconst AuthService = {\r\n    handleResponse(response) {\r\n        console.info('handleResponse: ', response);\r\n        if(response && response.data) {\r\n\r\n            const deliveryppResponse = response.data;\r\n\r\n            return deliveryppResponse;\r\n\r\n        }\r\n    },\r\n    async register(user) {\r\n\r\n        const response = await axios.post(`${basePath}/api/register`, user);\r\n\r\n        const responseData = this.handleResponse(response);\r\n\r\n        return responseData;\r\n\r\n    },\r\n    async login(user) {\r\n\r\n        const response = await axios.post(`${basePath}/api/login`, user);\r\n\r\n        const responseData = this.handleResponse(response);\r\n\r\n        return responseData;\r\n    },\r\n    async getUserByToken(token) {\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.get(`${basePath}/api/auth/${token}`, headers);\r\n\r\n        const responseData = this.handleResponse(response);\r\n\r\n        return responseData;\r\n\r\n    },\r\n    async logout(token) {\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.get(`${basePath}/api/auth/${token}`, headers);\r\n\r\n        const responseData = this.handleResponse(response);\r\n\r\n        return responseData;\r\n\r\n    }\r\n    \r\n};\r\n\r\nexport default AuthService;","import React from 'react';\r\n\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport './Loader.css';\r\n\r\nfunction Loader(props) {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <Spinner color=\"light\"  style={{ width: '4rem', height: '4rem' }} />\r\n            <span style={{color: '#fff'}}> Espere...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { useState } from 'react';\r\n\r\nimport {\r\n    Col, Form,\r\n    FormGroup, Label, Input,\r\n    Button,\r\n    FormFeedback \r\n} from 'reactstrap';\r\n\r\nimport AuthService from '../../../services/AuthService';\r\n\r\nimport Loader from '../../common/Loader';\r\n\r\nfunction LoginForm({ onLogin = () => {} }) {\r\n\r\n    const [dirty, setDirty] = useState({\r\n        username: false,\r\n        password: false,\r\n    });\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const login = async e => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            username,\r\n            password\r\n        };\r\n\r\n        setLoading(true);\r\n\r\n        const responseData = await AuthService.login(user);\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            onLogin(responseData);\r\n        }, 1000);\r\n\r\n        // TODO: close form\r\n\r\n    }\r\n\r\n    const onUsernameInputChange = e => {\r\n\r\n        handleSetDirty('username');\r\n\r\n        const input = e.target;\r\n\r\n        const username = input.value;\r\n\r\n        setUsername(username);\r\n\r\n    }\r\n\r\n    const onPasswordInputChange = e => {\r\n\r\n        handleSetDirty('password');\r\n\r\n        const input = e.target;\r\n\r\n        const password = input.value;\r\n\r\n        setPassword(password);\r\n\r\n    }\r\n\r\n    const handleSetDirty = (prop) => {\r\n\r\n        if(!dirty[prop]) {\r\n            const newDirty = {...dirty};\r\n            newDirty[prop] = true;\r\n            setDirty(newDirty);\r\n        }\r\n\r\n    }\r\n\r\n    const isValidUsername = !!username;\r\n    const isValidPassword = !!password && password.length > 5;\r\n\r\n    const isFormValid = () => {\r\n        return isValidUsername && isValidPassword;\r\n    }\r\n\r\n    return (\r\n\r\n        <Form className=\"form position-relative p-2\">\r\n            {\r\n                loading && <Loader />\r\n            }\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"username\">Usuario</Label>\r\n                    <Input\r\n                        valid={dirty.username && isValidUsername}\r\n                        invalid={dirty.username && !isValidUsername}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        value={username}\r\n                        onChange={onUsernameInputChange}\r\n                    />\r\n                    {\r\n                        dirty.username && <FormFeedback>El nombre de usuario no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Contraseña</Label>\r\n                    <Input\r\n                        valid={dirty.password && isValidPassword}\r\n                        invalid={dirty.password && !isValidPassword}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"examplePassword\"\r\n                        placeholder=\"********\"\r\n                        value={password}\r\n                        onChange={onPasswordInputChange}\r\n                    />\r\n                    {\r\n                        dirty.password && <FormFeedback>Introduce una contraseña de más de 5 caracteres.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Button disabled={!isFormValid()} onClick={login}>Entrar</Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Col, Form,\r\n    FormGroup, Label, Input,\r\n    Button, FormText, FormFeedback \r\n} from 'reactstrap';\r\n\r\nimport validator from 'validator';\r\n\r\nimport AuthService from '../../../services/AuthService';\r\n\r\nimport Loader from '../../common/Loader';\r\n\r\nfunction RegisterForm({onRegister = () => {}}) {\r\n\r\n    const [dirty, setDirty] = useState({\r\n        username: false,\r\n        email: false,\r\n        password: false,\r\n        name: false,\r\n        telephone: false \r\n    });\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [telephone, setTelephone] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const register = async e => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            name,\r\n            username,\r\n            email,\r\n            password,\r\n            lastName,\r\n            telephone\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const response = await AuthService.register(user);\r\n\r\n        if(response && response.token) {\r\n            localStorage.setItem('deliverypp_user_login_token', response.token);\r\n        }\r\n\r\n        clearForm();\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            onRegister(response);\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    const clearForm = () => {\r\n\r\n        setUsername('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setName('');\r\n        setLastName('');\r\n        setTelephone('');\r\n\r\n        setDirty({\r\n            username: false,\r\n            email: false,\r\n            password: false,\r\n            name: false,\r\n            telephone: false \r\n        });\r\n\r\n    }\r\n\r\n    const onUsernameInputChange = e => {\r\n\r\n        handleSetDirty('username');\r\n\r\n        const input = e.target;\r\n\r\n        const username = input.value;\r\n\r\n        setUsername(username);\r\n\r\n    }\r\n\r\n    const onEmailInputChange = e => {\r\n\r\n        handleSetDirty('email');\r\n\r\n        const input = e.target;\r\n\r\n        const email = input.value;\r\n\r\n        setEmail(email);\r\n\r\n    }\r\n\r\n    const onPasswordInputChange = e => {\r\n\r\n        handleSetDirty('password');\r\n\r\n        const input = e.target;\r\n\r\n        const password = input.value;\r\n\r\n        setPassword(password);\r\n\r\n    }\r\n\r\n    const onNameInputChange = e => {\r\n\r\n        handleSetDirty('name');\r\n\r\n        const input = e.target;\r\n\r\n        const name = input.value;\r\n\r\n        setName(name);\r\n    }\r\n\r\n    const onLastNameInputChange = e => {\r\n        const input = e.target;\r\n\r\n        const lastName = input.value;\r\n\r\n        setLastName(lastName);\r\n    }\r\n\r\n    const onTelephoneInputChange = e => {\r\n\r\n        handleSetDirty('telephone');\r\n\r\n        const input = e.target;\r\n\r\n        const telephone = input.value;\r\n\r\n        setTelephone(telephone);\r\n    }\r\n\r\n    const handleSetDirty = (prop) => {\r\n\r\n        if(!dirty[prop]) {\r\n            const newDirty = {...dirty};\r\n            newDirty[prop] = true;\r\n            setDirty(newDirty);\r\n        }\r\n\r\n    }\r\n\r\n    const isValidEmail = !!email && validator.isEmail(email);\r\n    const isValidUsername = !!username;\r\n    const isValidName = !!name;\r\n    const isValidPassword = !!password && password.length > 5;\r\n    const isValidTelephone = !!telephone && telephone.length === 10;\r\n\r\n    const isFormValid = () => {\r\n        return isValidEmail && isValidUsername && isValidName && isValidPassword && isValidTelephone;\r\n    }\r\n\r\n    return (\r\n\r\n        <Form className=\"form position-relative p-2\">\r\n            {\r\n                loading && <Loader />\r\n            }\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"username\">Usuario</Label>\r\n                    <Input\r\n                        valid={dirty.username && isValidUsername}\r\n                        invalid={dirty.username && !isValidUsername}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        required\r\n                        value={username}\r\n                        onChange={onUsernameInputChange}\r\n                    />\r\n                    {\r\n                        dirty.username && <FormFeedback>El nombre de usuario no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input\r\n                        valid={dirty.email && isValidEmail}\r\n                        invalid={dirty.email && !isValidEmail}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"exampleEmail\"\r\n                        placeholder=\"youremail@email.com\"\r\n                        required\r\n                        value={email}\r\n                        onChange={onEmailInputChange}\r\n                    />\r\n                    {\r\n                        dirty.email && <FormFeedback>Introduce un email válido.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Contraseña</Label>\r\n                    <Input\r\n                        valid={dirty.password && isValidPassword}\r\n                        invalid={dirty.password && !isValidPassword}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"********\"\r\n                        value={password}\r\n                        onChange={onPasswordInputChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.password && <FormFeedback>Introduce una contraseña de más de 5 caracteres.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"name\">Nombre</Label>\r\n                    <Input\r\n                        valid={dirty.name && isValidName}\r\n                        invalid={dirty.name && !isValidName}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        value={name}\r\n                        onChange={onNameInputChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.name && <FormFeedback>El nombre no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"lastname\">Apellido</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"lastname\"\r\n                        id=\"lastname\"\r\n                        value={lastName}\r\n                        onChange={onLastNameInputChange}\r\n                        required\r\n                    />\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"telephone\">Teléfono</Label>\r\n                    <Input\r\n                        valid={dirty.telephone && isValidTelephone}\r\n                        invalid={dirty.telephone && !isValidTelephone}\r\n                        type=\"number\"\r\n                        name=\"telephone\"\r\n                        id=\"telephone\"\r\n                        value={telephone}\r\n                        onChange={onTelephoneInputChange}\r\n                        placeholder=\"8095005000\"\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.name && <FormFeedback>Introduce un teléfono válido.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Button disabled={!isFormValid()} onClick={register}>Registrarse</Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default RegisterForm;","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nimport LoginForm from './LoginForm';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nimport { Alert } from 'reactstrap';\r\n\r\nimport './RegisterLoginTab.css';\r\n\r\nfunction RegisterLoginTab(props) {\r\n\r\n  const [activeTab, setActiveTab] = useState('login');\r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('Registered');\r\n  const [alertColor, setAlertColor] = useState('info');\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  let loginIconColor = 'grey';\r\n  let registerIconColor = 'grey';\r\n\r\n  if(activeTab === 'login') {\r\n    loginIconColor = props.color;\r\n  } else if(activeTab === 'register') {\r\n    registerIconColor = props.color;\r\n  }\r\n\r\n  const handleRegisterLoginResponse = (responseData) => {\r\n\r\n    if(responseData) {\r\n\r\n        if(responseData.status === 'ERROR') {\r\n            props.showAlert({ color: 'warning', message: responseData.message});\r\n        } else if(responseData.status === 'SUCCESS') {\r\n            props.showAlert({ color: 'info', message: responseData.message});\r\n        } else {\r\n            props.showAlert({ color: 'warning', message: 'Hubo un error durante el registro. Trata luego.'});\r\n        }\r\n    \r\n    } else {\r\n        props.showAlert({ color: 'warning', message: 'Hubo un error durante el registro. Trata luego.'});\r\n    }\r\n\r\n  };\r\n\r\n  const onRegister = (response) => {\r\n\r\n    handleRegisterLoginResponse(response);\r\n\r\n    setActiveTab('login');\r\n\r\n  }\r\n\r\n  const onLogin = (responseData) => {\r\n\r\n    handleRegisterLoginResponse(responseData);\r\n\r\n    if(responseData && responseData.response) {\r\n        const response = responseData.response;\r\n        if(response.token) {\r\n            localStorage.setItem('deliverypp_user_login_token',  response.token);\r\n            props.toggle();\r\n            props.onLogin(response.user);\r\n        }\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"RegisterLoginTab\">\r\n      <Modal isOpen={props.showModal}>\r\n        <ModalHeader toggle={props.toggle}>Entrar</ModalHeader>\r\n        <ModalBody>\r\n          <Nav tabs>\r\n            <NavItem>\r\n              <NavLink\r\n                style={{ cursor: \"pointer\" }}\r\n                className={ activeTab === 'login' ? 'active' : '' }\r\n                onClick={() => { toggle(\"login\"); }}\r\n              >\r\n                Entrar <i className=\"fas fa-user\" style={{color: loginIconColor}}></i>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                style={{ cursor: \"pointer\" }}\r\n                className={ activeTab === 'register' ? 'active' : '' }\r\n                onClick={() => { toggle(\"register\"); }}\r\n              >\r\n                Registrarse <i className=\"fas fa-sign-in-alt\" style={{color: registerIconColor}}></i>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"login\">\r\n              <LoginForm onLogin={onLogin} color={props.color} />\r\n            </TabPane>\r\n            <TabPane tabId=\"register\">\r\n              <RegisterForm onRegister={onRegister} color={props.color} />\r\n            </TabPane>\r\n          </TabContent>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterLoginTab;\r\n","import React from 'react';\r\n\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport './Loader.css';\r\n\r\nfunction MainLoader(props) {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <Spinner type=\"grow\" color=\"dark\"  style={{ width: '4rem', height: '4rem' }} />\r\n            <span style={{color: '#fff'}}> Espere...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainLoader;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport DeliveryppTab from './components/deliverypp/DeliveryppTab';\nimport NavBar from './components/main/NavBar';\nimport Footer from './components/main/Footer';\n\nimport RegisterLoginTab from './components/main/auth/RegisterLoginTab';\n\nimport { Alert } from 'reactstrap';\n\nimport MainLoader from './components/common/MainLoader';\n\nimport AuthService from './services/AuthService';\n\nimport axios from 'axios';\n\nimport OrderProductsView from './components/deliverypp/product/OrderProductsView';\n\nconst mainColor = '#940205';\n\nfunction App() {\n\n  const [showRegisterLoginTab, setShowRegisterLoginTab] = useState(false);\n  const [alertVisible, setAlertVisible] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('Registered');\n  const [alertColor, setAlertColor] = useState('info');\n  const [appLoading, setAppLoading] = useState(true);\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n\n    const token = localStorage.getItem('deliverypp_user_login_token');\n\n    const getUser = async () => {\n      if(token) {\n        const responseData = await AuthService.getUserByToken(token);\n\n        if(responseData && responseData.response) {\n          const user = responseData.response;\n          if(responseData.status === 'SUCCESS') {\n            setUser(user);\n            setIsUserLoggedIn(true);\n          }\n        } else {\n          setIsUserLoggedIn(false);\n        }\n        setTimeout(() => { setAppLoading(false); }, 1000);\n      } else {\n  \n        setIsUserLoggedIn(false);\n        setTimeout(() => { setAppLoading(false); }, 1000);\n        setIsUserLoggedIn(false);\n\n      }\n    }\n\n    if(!isUserLoggedIn) {\n      getUser();\n    }\n    \n  }, [isUserLoggedIn]);\n\n  const toggleRegisterLoginTab = () => {\n    setShowRegisterLoginTab(!showRegisterLoginTab);\n  };\n\n  const showAlert = ({ color, message }) => {\n    setAlertColor(color);\n    setAlertMessage(message);\n    setAlertVisible(true);\n\n    setTimeout(() => {\n      setAlertColor('info');\n      setAlertVisible(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n\n  const onAlertDismiss = () => {\n    setAlertVisible(false);\n  };\n\n  const onLogOutClick = () => {\n\n    setAppLoading(true);\n\n    const token = localStorage.getItem('deliverypp_user_login_token');\n\n    AuthService.logout(token);\n\n    localStorage.removeItem('deliverypp_user_login_token');\n\n    setUser({});\n    setIsUserLoggedIn(false);\n\n    setTimeout(() => { setAppLoading(false); }, 1000);\n\n  };\n\n  const onLogin = (user) => {\n\n    setAppLoading(true);\n\n    setUser(user);\n    setIsUserLoggedIn(true);\n\n    setTimeout(() => { setAppLoading(false); }, 1000);\n\n  };\n\n  if(appLoading) {\n    return (\n      <MainLoader />\n    )\n  } else {\n    return (\n      <div className=\"App\">\n\n        <div className=\"alertContainer\">\n          <Alert color={alertColor} isOpen={alertVisible} toggle={onAlertDismiss}>\n              {alertMessage}\n          </Alert>\n        </div>  \n\n        <NavBar\n          isUserLoggedIn={isUserLoggedIn}\n          user={user}\n          onSignInClick={() => setShowRegisterLoginTab(true)}\n          onLogOutClick={onLogOutClick}\n          color={mainColor}\n        />\n        \n        {\n          showRegisterLoginTab && <RegisterLoginTab showModal={showRegisterLoginTab} toggle={toggleRegisterLoginTab} color={mainColor} showAlert={showAlert} onLogin={onLogin} />\n        }\n\n        <DeliveryppTab showAlert={showAlert} color={mainColor} isUserLoggedIn={isUserLoggedIn} user={user} />\n\n        <Footer color={mainColor} />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}