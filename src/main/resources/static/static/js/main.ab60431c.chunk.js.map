{"version":3,"sources":["components/deliverypp/product/ProductCard.js","components/deliverypp/product/ProductTable.js","Deliverypp.js","services/CategoryService.js","components/deliverypp/product/CategorySelect.js","components/common/Toolbar.js","services/ProductService.js","components/common/Modal.js","components/deliverypp/product/ProductView.js","services/OrderService.js","util/StatusClassMapper.js","components/deliverypp/order/OrderTable.js","components/deliverypp/order/StatusSelect.js","components/deliverypp/order/OrderedProductDetailsView.js","components/deliverypp/order/maps/OrderMapView.js","components/deliverypp/order/ProductDetailsModal.js","components/deliverypp/order/maps/AllOrdersMapsView.js","components/deliverypp/order/OrderToolbar.js","components/deliverypp/order/OrderView.js","components/deliverypp/DeliveryppTab.js","components/main/NavBar.js","components/main/Footer.js","services/AuthService.js","components/common/Loader.js","components/main/auth/LoginForm.js","components/main/auth/RegisterForm.js","components/main/auth/RegisterLoginTab.js","components/common/MainLoader.js","App.js","serviceWorker.js","index.js"],"names":["ProductCard","product","selected","onClick","imageUrl","description","category","price","className","Card","style","width","CardImg","top","src","alt","CardBody","CardTitle","CardText","ProductTable","props","Table","striped","bordered","hover","products","map","key","id","ENVIRONMENTS","Deliverypp","env","getPath","this","console","error","STATUS","SUCCESS","ERROR","basePath","CategoryService","generateErrorResponse","message","success","status","handleResponse","response","data","getCategories","headers","getHeader","axios","get","addCategory","post","updateCategory","put","deleteCategory","categoryId","getToken","localStorage","getItem","token","Authorization","Object","freeze","CategorySelect","onCategoryChange","f","useState","categories","setCategories","getOrders","a","log","useEffect","Label","htmlFor","Input","type","onChange","value","Toolbar","onSearch","placeholder","aria-describedby","required","onEditClick","disabled","title","onAddClick","onCloneClick","onDeleteClick","ProductService","deliveryppResponse","getProducts","getProductById","productId","addProduct","updateProduct","cloneProduct","deleteProductById","delete","DModal","Modal","isOpen","showModal","ModalHeader","toggle","ModalBody","children","ModalFooter","Button","color","onSave","onCancel","ProductActionForm","name","e","target","onProductUpdate","for","ProductView","showAlert","cardView","selectedProductId","setSelectedProductId","setProducts","filterableProducts","setFilterableProducts","setShowModal","action","setAction","selectedProduct","setSelectedProduct","filter","setFilter","responseData","createProduct","newProduct","newProducts","filterProducts","forEach","onProductCardClick","handleDeleteProduct","window","confirm","filteredProducts","keys","propValue","includes","getActionDescription","event","OrderService","getOrderById","orderId","addOrder","order","updateStatus","StatusClassMapper","statusMap","ORDERED","PAID","ACQUIRING","ACQUIRED","TRANSIT","DELIVERED","getClassStatusClass","StatusTranslateMapper","OrderTable","activeRow","setActiveRow","onColumnClick","prop","responsive","orders","onRowClick","handleOnRowClick","username","email","telephone","createdAt","total","comment","StatusSelect","orderStatus","onOrderStatusChange","borderWidth","OrderedProductDetailsView","orderLines","orderLine","imageHidden","mappedOrderLines","setMappedOrderLines","toggleImageHidden","newMappedOrderLines","quantity","marginBottom","marginTop","fontSize","WrappedOrderMapView","GoogleApiWrapper","apiKey","google","location","height","padding","position","zoom","initialCenter","lat","latitude","lng","longitude","TotalDisplay","CustomerView","user","lastName","ProductDetailsModal","onClose","toggleShowModal","activeTab","setActiveTab","tab","handleStatusChange","newStatus","Nav","tabs","NavItem","NavLink","cursor","TabContent","TabPane","tabId","WrappedAllOrdersMapsView","locations","onMarkerClick","OrderToolbar","toggleTableSort","OrderView","setOrders","tableData","setTableData","selectedOrder","setSelectedOrder","showOrderedProductsModal","setShowOrderedProductsModal","statusFilter","setStatusFilter","transformToTableData","locationId","find","newOrders","mappedTableData","record","filteredOrders","toggleSort","compare","value1","value2","sort","orderA","orderB","DeliveryppTab","isUserLoggedIn","role","NavBar","onSignInClick","onLogOutClick","Navbar","light","expand","NavbarBrand","href","navbar","outline","Footer","AuthService","register","login","getUserByToken","logout","Loader","Spinner","LoginForm","onLogin","password","dirty","setDirty","setUsername","setPassword","loading","setLoading","preventDefault","setTimeout","handleSetDirty","newDirty","isValidUsername","isValidPassword","length","Form","Col","FormGroup","valid","invalid","FormFeedback","RegisterForm","onRegister","setEmail","setName","setLastName","setTelephone","setItem","clearForm","isValidEmail","validator","isEmail","isValidName","isValidTelephone","RegisterLoginTab","loginIconColor","registerIconColor","MainLoader","Notfound","App","showRegisterLoginTab","setShowRegisterLoginTab","alertVisible","setAlertVisible","alertMessage","setAlertMessage","alertColor","setAlertColor","appLoading","setAppLoading","setIsUserLoggedIn","setUser","getUser","Alert","removeItem","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ab60431c.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\r\n  \r\nimport './ProductCard.css';\r\n\r\nfunction ProductCard({ product, selected, onClick }) {\r\n\r\n    const { imageUrl, description, category, price } = product;\r\n\r\n    return (\r\n        <div className={`ProductCard m-1 p-2 ${selected}`} onClick={() => onClick(product)}>\r\n            <Card style={{ width: '18rem' }}>\r\n                <CardImg top width=\"100%\" src={imageUrl} alt={description} />\r\n                <CardBody>\r\n                    <CardTitle className=\"text-muted font-italic\">{category}</CardTitle>\r\n                    <CardText>\r\n                        {\r\n                            description\r\n                        }\r\n                    </CardText>\r\n                    <CardText className=\"font-weight-bold text-success\">\r\n                        {\r\n                            `RD$${price}`\r\n                        }\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard;","import React from \"react\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nfunction ProductTable(props) {\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Categoría</th>\r\n          <th>Descripción</th>\r\n          <th>Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.products.map(product => ( \r\n            <tr key={product.id} onClick={() => props.onClick(product)}>\r\n              <td>{product.id}</td>\r\n              <td>{product.category}</td>\r\n              <td>{product.description}</td>\r\n              <td>{product.price}</td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default ProductTable;\r\n","\r\nconst ENVIRONMENTS = {\r\n    getActiveEnv() {\r\n        return Deliverypp;\r\n    },\r\n    DEV: 'dev',\r\n    QA: 'qa',\r\n    PROD: 'prod'\r\n};\r\n\r\nconst STATUS = {\r\n    SUCCESS: 'SUCCESS',\r\n    ERROR: 'ERROR'\r\n};\r\n\r\nconst Deliverypp = {\r\n    env: ENVIRONMENTS.DEV,\r\n    getPath() {\r\n        switch(this.env) {\r\n            case ENVIRONMENTS.DEV:\r\n                return '';\r\n            case ENVIRONMENTS.QA:\r\n            case ENVIRONMENTS.PROD:\r\n                return ''\r\n            default:\r\n                console.error('Wrong operation.');\r\n                break;\r\n        }\r\n    },\r\n    STATUS\r\n};\r\n\r\nexport default  Deliverypp;","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst CategoryService = {\r\n    generateErrorResponse(message) {\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    handleResponse(response) {\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getCategories() {\r\n\r\n        try {\r\n\r\n            const headers = this.getHeader();\r\n\r\n            const response = await axios.get(`${basePath}/api/categories`, { headers });\r\n\r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n    \r\n    async addCategory(category) {\r\n\r\n        try {\r\n            \r\n            const headers = this.getHeader();\r\n\r\n            const response = await axios.post(`${basePath}/api/categories`, category, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n\r\n    async updateCategory(category) {\r\n\r\n        try {\r\n            \r\n            const headers = this.getHeader();\r\n    \r\n            const response = await axios.put(`${basePath}/api/categories`, category, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n\r\n    async deleteCategory(categoryId) {\r\n\r\n        try {\r\n            \r\n            const headers = this.getHeader();\r\n\r\n            const response = await axios.put(`${basePath}/api/categories/${categoryId}`, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n\r\n    getToken() {\r\n        return localStorage.getItem('deliverypp_user_login_token');\r\n    },\r\n\r\n    getHeader() {\r\n\r\n        const token = this.getToken();\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        return headers;\r\n    }\r\n    \r\n};\r\n\r\nexport default Object.freeze(CategoryService);","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Label, Input } from 'reactstrap';\r\n\r\nimport CategoryService from '../../../services/CategoryService';\r\n\r\nfunction CategorySelect({ onCategoryChange = f => {} }) {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const getOrders = async () => {\r\n\r\n        const response = await CategoryService.getCategories();\r\n        console.log('resposne', response)\r\n        if(response.success) {\r\n            setCategories(response.response);\r\n        } else {\r\n            console.error(response.message);\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrders();\r\n    }, []);\r\n\r\n    const handleOnChange = () => {\r\n\r\n        //\r\n\r\n        onCategoryChange();\r\n\r\n    }\r\n\r\n    return (\r\n      <div className=\"d-flex flex-row justify-content-center align-items-cente mr-2\">\r\n        <Label className=\"mr-2\" htmlFor=\"categorySelect\">Categorías</Label>\r\n        <Input type=\"select\" id=\"categorySelect\" onChange={handleOnChange}>\r\n          <option value={''}></option>\r\n          {\r\n              categories.map(category => (\r\n                <option value={category.key}>{category.category}</option>\r\n              ))\r\n          }\r\n        </Input>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default CategorySelect;","import React from \"react\";\r\n\r\nimport './Toolbar.css';\r\n\r\nimport CategorySelect from '../deliverypp/product/CategorySelect';\r\n\r\nfunction Toolbar(props) {\r\n  return (\r\n    <div className=\"Toolbar p-2 border rounded\">\r\n      <div className=\"searchInputContainer p-1\">\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"inputGroupPrepend2\">\r\n                <i className=\"fa fa-search\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n                onChange={props.onSearch}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Buscar\"\r\n                aria-describedby=\"inputGroupPrepend2\"\r\n                required\r\n            />\r\n          </div>\r\n      </div>\r\n\r\n      <CategorySelect />\r\n\r\n      <div className=\"actionButtonsContainer p-1\">\r\n        <button onClick={props.onEditClick} disabled={props.disabled} className=\"btn btn-secondary mr-1\" title=\"Editar Producto\">\r\n          <i className=\"fa fa-pencil\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onAddClick} className=\"btn btn-info mr-1\" title=\"Agregar Producto\">\r\n          <i className=\"fa fa-plus\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onCloneClick} disabled={props.disabled} className=\"btn btn-secondary mr-1\" title=\"Clonar Producto\">\r\n          <i className=\"fa fa-copy\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onDeleteClick} disabled={props.disabled} className=\"btn btn-danger\" title=\"Borrar Producto\">\r\n          <i className=\"fa fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toolbar;","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst ProductService = {\r\n    generateErrorResponse(message) {\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    async handleResponse(response) {\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getProducts() {\r\n\r\n        try {\r\n            const response = await axios.get(`${basePath}/api/products`);\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n\r\n    },\r\n    \r\n    async getProductById(productId = {}) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        try {\r\n            const response = await axios.get(`${basePath}/api/products/${productId}`, { headers });\r\n\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n\r\n    },\r\n    \r\n    async addProduct(product = {}) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/products`, product, { headers });\r\n\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n\r\n    },\r\n    async updateProduct(product = {}) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        try {\r\n            const response = await axios.put(`${basePath}/api/products`, product, { headers });\r\n\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n\r\n    },\r\n    async cloneProduct(product = {}) {\r\n\r\n        product.id = 0;\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/products/clone`, product, { headers });\r\n\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n   \r\n    },\r\n    async deleteProductById(productId = -1) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        try {\r\n            const response = await axios.delete(`${basePath}/api/products/${productId}`, { headers });\r\n\r\n            return this.handleResponse(response);\r\n        } catch(e) {\r\n            return this.generateErrorResponse(e.message);\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default ProductService;","import React from 'react';\r\n\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nfunction DModal(props) {\r\n    return (\r\n        <div>\r\n        <Modal isOpen={props.showModal}>\r\n            <ModalHeader toggle={props.toggle}>{props.title}</ModalHeader>\r\n            <ModalBody>\r\n                {\r\n                    props.children\r\n                }\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"success\" onClick={props.onSave}>Guardar</Button>{' '}\r\n            <Button color=\"secondary\" onClick={props.onCancel}>Cancelar</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DModal;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductTable from \"./ProductTable\";\r\n\r\nimport \"./ProductView.css\";\r\n\r\nimport Toolbar from '../../common/Toolbar';\r\n\r\nimport ProductService from '../../../services/ProductService';\r\n\r\nimport Modal from '../../common/Modal';\r\n\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Input, Label\r\n  } from 'reactstrap';\r\n\r\n\r\nfunction ProductView({ showAlert }) {\r\n  showAlert = () => {};\r\n  const [cardView, setCardView] = useState(true);\r\n  const [selectedProductId, setSelectedProductId] = useState(-1);\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [filterableProducts, setFilterableProducts] = useState([]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [action, setAction] = useState('add');\r\n\r\n  const [selectedProduct, setSelectedProduct] = useState({description: '', price: 0, imageUrl: '', category: ''});\r\n\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const getProducts = async () => {\r\n\r\n    const responseData = await ProductService.getProducts();\r\n    if(responseData && responseData.success) {\r\n      const products = responseData.response;\r\n      setProducts(products);\r\n        setFilterableProducts(products);\r\n        \r\n    } else {\r\n      console.log('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error obteniendo productos.'});\r\n    }\r\n\r\n  };\r\n\r\n  const createProduct = async () => {\r\n\r\n    const responseData = await ProductService.addProduct(selectedProduct);\r\n\r\n    if(responseData && responseData.success) {\r\n\r\n      const newProduct = responseData.response;\r\n\r\n      const newProducts = [newProduct, ...products];\r\n\r\n      setProducts(newProducts);\r\n      filterProducts(newProducts, filter);\r\n      showAlert({ color: 'success', message: 'Producto agregado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.log('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error agregando producto.'});\r\n    }\r\n    \r\n  };\r\n  const updateProduct = async () => {\r\n\r\n    const responseData = await ProductService.updateProduct(selectedProduct);\r\n\r\n    if(responseData && responseData.success) {\r\n\r\n      const newProduct = responseData.response;\r\n\r\n      const newProducts = [...products];\r\n\r\n      newProducts.forEach(product => {\r\n        if(product.id === newProduct.id) {\r\n          product.description = newProduct.description;\r\n          product.price = newProduct.price;\r\n          product.category = newProduct.category;\r\n          product.imageUrl = newProduct.imageUrl;\r\n          return false;\r\n        }\r\n      });\r\n\r\n      setProducts(newProducts);\r\n      filterProducts(newProducts, filter);\r\n      showAlert({ color: 'success', message: 'Producto agregado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.log('Error adding products.');\r\n      showAlert({ color: 'warning', message: 'Error agregando producto.'});\r\n    }\r\n\r\n  };\r\n\r\n  const cloneProduct = async () => {\r\n    \r\n    const responseData = await ProductService.cloneProduct(selectedProduct);\r\n\r\n    if(responseData && responseData.success) {\r\n\r\n      const newProduct = responseData.response;\r\n\r\n      const newProducts = [newProduct, ...products];\r\n\r\n      setProducts(newProducts);\r\n      filterProducts(newProducts, filter);\r\n      showAlert({ color: 'success', message: 'Producto clonado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.log('Error cloning product');\r\n      showAlert({ color: 'warning', message: 'Error clonando producto.'});\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    getProducts();\r\n\r\n  }, []);\r\n\r\n  const onProductCardClick = product => {\r\n    setSelectedProduct(product);\r\n    setSelectedProductId(product.id);\r\n  };\r\n\r\n  const getProductCards = () => {\r\n    return filterableProducts.map(product => {\r\n        const selected = product.id === selectedProductId ? 'selected' : '';\r\n        return <ProductCard key={product.id} product={product} onClick={onProductCardClick} selected={selected} />;\r\n    });\r\n  };\r\n\r\n  const getProductTable = () => {\r\n    return <ProductTable products={filterableProducts} />;\r\n  };\r\n\r\n  const showEditProductForm = () => {\r\n\r\n    setAction('edit');\r\n\r\n    setShowModal(true);\r\n\r\n  }\r\n\r\n  const showAddProductForm = () => {\r\n\r\n    setAction('add');\r\n    setSelectedProduct({description: '', price: 0, imageUrl: '', category: ''});\r\n    setShowModal(true);\r\n\r\n  }\r\n\r\n  const showCloneProductForm = () => {\r\n\r\n    setAction('clone');\r\n    setShowModal(true);\r\n\r\n  }\r\n\r\n  const handleDeleteProduct = async () => {\r\n\r\n    const deleteProductConfirm = window.confirm('Seguro quiere borrar el producto seleccionado?');\r\n\r\n    if(deleteProductConfirm) {\r\n\r\n      const responseData = await ProductService.deleteProductById(selectedProductId);\r\n\r\n      if(responseData && responseData.success) {\r\n        showAlert({ color: 'success', message: 'Producto eliminado.'});\r\n        const filteredProducts = products.filter(product => product.id !== selectedProductId);\r\n        setProducts(filteredProducts);\r\n        filterProducts(filteredProducts, filter);\r\n      } else {\r\n        console.log('Error deleting product.')\r\n        showAlert({ color: 'warning', message: 'Error eliminando producto.'});\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const filterProducts = (products, value) => {\r\n    if(value) {\r\n\r\n      const filteredProducts = products.filter(product => {\r\n\r\n          const keys = Object.keys(product);\r\n\r\n          for(let key of keys) {\r\n\r\n              if(key === 'category' || key === 'price' || key === 'description') {\r\n                  let propValue = product[key];\r\n                  if(propValue) {\r\n                      propValue = '' + propValue;\r\n                      if(propValue.includes(value)) {\r\n                          return true;\r\n                      }\r\n                  }\r\n              }\r\n              \r\n          }\r\n\r\n          return false;\r\n\r\n      });\r\n      setFilterableProducts(filteredProducts);\r\n\r\n  } else {\r\n      setFilterableProducts(products);\r\n  }\r\n  }\r\n\r\n  const handleSearch = (event) => {\r\n\r\n    const value = event.target.value;\r\n\r\n    setFilter(value);\r\n    filterProducts(products, value);\r\n\r\n  }\r\n\r\n  const onSave = () => {\r\n\r\n    switch(action) {\r\n      case 'add':\r\n        createProduct();\r\n        break;\r\n      case 'edit':\r\n        updateProduct();\r\n        break;\r\n      case 'clone':\r\n          cloneProduct();\r\n          break;\r\n      default:\r\n        console.error('Wrong operation.');\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setShowModal(false);\r\n  }\r\n\r\n  const toggle = () => {\r\n    setShowModal(!showModal);\r\n  }\r\n\r\n  const getActionDescription = () => {\r\n      switch(action) {\r\n        case 'add':\r\n            return 'Agregar producto';\r\n        case 'edit':\r\n            return 'Editar producto';\r\n        case 'clone':\r\n          return 'Clonar producto';\r\n        default:\r\n          console.error('Wrong operation.');\r\n          break;\r\n      }\r\n  }\r\n\r\n  const onProductUpdate = product => {\r\n\r\n    setSelectedProduct(product);\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"ProductView\">\r\n    <Modal\r\n        onSave={onSave}\r\n        onCancel={onCancel}\r\n        showModal={showModal}\r\n        toggle={toggle}\r\n        title={getActionDescription()}\r\n    >\r\n        <ProductActionForm imageUrl={'product.png'} onProductUpdate={onProductUpdate} product={selectedProduct} />\r\n    </Modal>\r\n\r\n      {false && (\r\n        <div>\r\n          <button className=\"btn btn-primary\" onClick={() => setCardView(true)}>\r\n            Card View\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setCardView(false)}\r\n          >\r\n            Card Table\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n        <Toolbar\r\n            onSearch={handleSearch}\r\n            onEditClick={showEditProductForm}\r\n            onAddClick={showAddProductForm}\r\n            onCloneClick={showCloneProductForm}\r\n            onDeleteClick={handleDeleteProduct}\r\n            disabled={selectedProductId === -1}\r\n        />\r\n\r\n      <div>\r\n        {cardView ? (\r\n          <div className=\"ProductCardContainer\">{getProductCards()}</div>\r\n        ) : (\r\n          <div className=\"ProductTableContainer\">{getProductTable()}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductActionForm(props) {\r\n\r\n\r\n    const onImageUrlChange = (e) => {\r\n\r\n        let value = e.target.value;\r\n\r\n        if(!value) {\r\n            value = 'product.png';\r\n        }\r\n\r\n        const product = {...props.product};\r\n\r\n        product.imageUrl = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.category = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onDescriptionChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.description = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onPriceChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.price = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const imageUrl = props.product.imageUrl ? props.product.imageUrl : 'product.png';\r\n\r\n    return (\r\n        <div>\r\n        <Card>\r\n            <CardImg top width=\"100%\" src={imageUrl} />\r\n            <CardBody>\r\n                <CardTitle>\r\n                    <Input type=\"text\" name=\"category\" id=\"category\" placeholder=\"Categoría\" value={props.product.category} onChange={onCategoryChange} />\r\n                </CardTitle>\r\n                <CardText>\r\n                    <Label for=\"imageUrl\">URL de la imagen</Label>\r\n                    <Input type=\"url\" name=\"imageUrl\" id=\"imageUrl\"  value={imageUrl} onChange={onImageUrlChange}/>\r\n                </CardText>\r\n                <CardText>\r\n                    <Label for=\"description\">Descripción</Label>\r\n                    <Input type=\"textarea\" name=\"description\" id=\"description\" value={props.product.description} onChange={onDescriptionChange} />\r\n                </CardText>\r\n                <CardText>\r\n                    <Input type=\"number\" name=\"price\" id=\"price\" placeholder=\"Precio\"  value={props.product.price} onChange={onPriceChange}/>\r\n                </CardText>\r\n            </CardBody>\r\n        </Card>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProductView;\r\n","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst OrderService = {\r\n    generateErrorResponse(message) {\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    handleResponse(response) {\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getOrders() {\r\n\r\n        try {\r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n\r\n            const response = await axios.get(`${basePath}/api/orders`, { headers });\r\n\r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n    \r\n    async getOrderById(orderId) {\r\n\r\n        try {\r\n\r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/orders/${orderId}`, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n    \r\n    },\r\n    \r\n    async addOrder(order) {\r\n\r\n        try {\r\n            \r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.post(`${basePath}/api/orders`, order, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n\r\n    async updateStatus(orderId, status) {\r\n\r\n        try {\r\n            \r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.put(`${basePath}/api/orders/${orderId}/status/${status}`, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n    \r\n};\r\n\r\nexport default OrderService;","const StatusClassMapper = {\r\n    statusMap: {\r\n      ORDERED: 'danger',\r\n      PAID: 'info',\r\n      ACQUIRING: 'secondary',\r\n      ACQUIRED: 'primary',\r\n      TRANSIT: 'warning',\r\n      DELIVERED: 'success'\r\n    },\r\n    getClassStatusClass(status) {\r\n      return this.statusMap[status];\r\n    }\r\n  }\r\n\r\n  export default StatusClassMapper;\r\n  ","import React, { useState } from \"react\";\r\n\r\nimport { Table } from \"reactstrap\";\r\n\r\nimport './OrderView.css';\r\n\r\nimport StatusClassMapper from '../../../util/StatusClassMapper';\r\n\r\nconst StatusTranslateMapper = {\r\n  ORDERED: 'Ordenado',\r\n  PAID: 'Pagado',\r\n  ACQUIRING: 'Adquiriendo',\r\n  ACQUIRED: 'Adquirido',\r\n  TRANSIT: 'Tránsito',\r\n  DELIVERED: 'Entregado'\r\n};\r\n\r\nfunction OrderTable(props) {\r\n\r\n  const [activeRow, setActiveRow] = useState(null);\r\n\r\n  const handleOnRowClick = (order) => {\r\n    setActiveRow(order);\r\n    props.onRowClick(order.id)\r\n  }\r\n\r\n  const onColumnClick = (prop) => {\r\n    props.onColumnClick(prop);\r\n  }\r\n\r\n  return (\r\n    <div className=\"OrderTable\">\r\n      <Table bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => onColumnClick('id')}>Id</th>\r\n            <th onClick={() => onColumnClick('status')}>Estado</th>\r\n            <th onClick={() => onColumnClick('username')}>Usuario</th>\r\n            <th onClick={() => onColumnClick('email')}>Email</th>\r\n            <th onClick={() => onColumnClick('telephone')}>Teléfono</th>\r\n            <th onClick={() => onColumnClick('createdAt')}>Fecha</th>\r\n            <th onClick={() => onColumnClick('total')}>Total</th>\r\n            <th onClick={() => onColumnClick('comment')}>Comentario</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.orders.map((order) => {\r\n            return (\r\n              <tr className={`order-row ${activeRow && activeRow.id === order.id ? 'selected' : ''}`} key={order.id} onClick={() => handleOnRowClick(order)} >\r\n                <td>{order.id}</td>\r\n                <td className={`text-${StatusClassMapper.getClassStatusClass(order.status)}`}>{ StatusTranslateMapper[order.status] }</td>\r\n                <td>{order.username}</td>\r\n                <td>{order.email}</td>\r\n                <td>{order.telephone}</td>\r\n                <td>{order.createdAt}</td>\r\n                <td>{order.total}</td>\r\n                <td>{order.comment}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderTable;\r\n","\r\n\r\nimport React from 'react';\r\n\r\nimport { Label, Input } from 'reactstrap';\r\n\r\nimport StatusClassMapper from '../../../util/StatusClassMapper';\r\n\r\nfunction StatusSelect({ orderStatus, onOrderStatusChange }) {\r\n    return (\r\n      <div className=\"d-flex flex-row justify-content-center align-items-cente mr-2\">\r\n        <Label className=\"mr-2\" htmlFor=\"statusSelect\">Estado</Label>\r\n        <Input style={{borderWidth: 2}} className={`border-${StatusClassMapper.getClassStatusClass(orderStatus)}`} type=\"select\" id=\"statusSelect\" value={orderStatus} onChange={onOrderStatusChange}>\r\n          <option value={''}></option>\r\n          <option value={'ORDERED'}>Ordenado</option>\r\n          <option value={'PAID'}>Pagado</option>\r\n          <option value={'ACQUIRING'}>Adquiriendo</option>\r\n          <option value={'ACQUIRED'}>Adquirido</option>\r\n          <option value={'TRANSIT'}>En Tránsito</option>\r\n          <option value={'DELIVERED'}>Entregado</option>\r\n        </Input>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default StatusSelect;","import React, { useState } from 'react';\r\n\r\nimport { Card, CardImg, CardBody, CardTitle } from 'reactstrap';\r\n\r\nfunction OrderedProductDetailsView({orderLines}) {\r\n\r\n    const [mappedOrderLines, setMappedOrderLines] = useState(orderLines.map(orderLine => ({ ...orderLine, imageHidden: true })));\r\n  \r\n    const toggleImageHidden = (id) => {\r\n      console.log('id', id)\r\n      const newMappedOrderLines = mappedOrderLines.map(orderLine => {\r\n        if(orderLine.product.id === id) {\r\n          orderLine.imageHidden = !orderLine.imageHidden;\r\n        }\r\n        return orderLine;\r\n      });\r\n      setMappedOrderLines(newMappedOrderLines);\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        {mappedOrderLines.map(({ quantity, product, imageHidden }) => (\r\n          <Card key={product.id} style={{ marginBottom: 4, marginTop: 4 }} className=\"shadow p-2 mb-2 bg-white\">\r\n            \r\n            {\r\n              imageHidden && <div className=\"imageIconContainer text-center\" title=\"Mostrar image del producto\" onClick={() => toggleImageHidden(product.id)}><i className=\"fas fa-image\" style={{fontSize: 24, color: 'grey'}}></i></div>\r\n            }\r\n  \r\n            {\r\n              !imageHidden && (\r\n                <CardImg\r\n                  top\r\n                  width=\"100%\"\r\n                  src={product.imageUrl}\r\n                  alt={product.description}\r\n                  onClick={() => toggleImageHidden(product.id)}\r\n                  title=\"Ocultar imagel del producto\"\r\n                  className=\"cardImgElem\"\r\n                />\r\n              )\r\n            }\r\n            \r\n            <CardBody>\r\n              <CardTitle className=\"text-center font-weight-bold\">{product.description}</CardTitle>\r\n                <form>\r\n\r\n                    <div className=\"form-group row border-bottom\">\r\n                        <label htmlFor=\"idPrice\" className=\"col-6 col-form-label\">Precio</label>\r\n                        <label htmlFor=\"idPrice\" className=\"col-sm-6 col-form-label\">RD${product.price}</label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row border-bottom\">\r\n                        <label htmlFor=\"quantityProp\" className=\"col-sm-6 col-form-label\">Cantidad</label>\r\n                        <label htmlFor=\"quantityProp\" className=\"col-sm-6 col-form-label\">{quantity}</label>\r\n                    </div>\r\n \r\n                    <div className=\"form-group row border-bottom\">\r\n                        <label htmlFor=\"totalProp\" className=\"col-sm-6 col-form-label font-weight-bold\">Total</label>\r\n                        <label htmlFor=\"totalProp\" className=\"col-sm-6 col-form-label font-weight-bold text-success\">RD${product.price * quantity}</label>\r\n                    </div>\r\n                \r\n                </form>\r\n\r\n            </CardBody>\r\n          </Card>\r\n        ))}\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default OrderedProductDetailsView;","\r\nimport React from 'react';\r\n\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nfunction OrderMapView({ google, location }) {\r\n    return (\r\n      <div style={{height: 400, padding: 0, position: 'relative'}}>\r\n        <Map\r\n          google={google}\r\n          zoom={14}\r\n          initialCenter={{\r\n            lat: location.latitude,\r\n            lng: location.longitude\r\n          }}>\r\n          <Marker name={'Current location'} />\r\n        </Map>\r\n      </div>\r\n    );\r\n}\r\n  \r\nconst WrappedOrderMapView = GoogleApiWrapper({\r\napiKey: ('AIzaSyC1wC2ImcL1s4wITbDbM-g3nLK01fJHGkc')\r\n})(OrderMapView);\r\n\r\nexport default WrappedOrderMapView;","import React, { useState } from 'react';\r\n\r\nimport { CardText, Button, Modal, ModalHeader, ModalBody, ModalFooter, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport StatusSelect from './StatusSelect';\r\n\r\nimport OrderedProductDetailsView from './OrderedProductDetailsView';\r\n\r\nimport OrderMapView from './maps/OrderMapView';\r\n\r\nimport OrderService from '../../../services/OrderService';\r\n\r\nfunction ProductDetailsModal({ onClose, showModal, toggleShowModal, order, showAlert, onOrderStatusChange }) {\r\n\r\n    const { orderLines, id: orderId, location, status: orderStatus, total } = order;\r\n\r\n    const [activeTab, setActiveTab] = useState(() => 'orderProductsDetails');\r\n  \r\n    const toggle = tab => {\r\n        if(activeTab !== tab) setActiveTab(tab);\r\n    };\r\n  \r\n    const handleStatusChange = async event => {\r\n      const newStatus = event.target.value;\r\n      const responseData = await OrderService.updateStatus(orderId, newStatus);\r\n      if(responseData && responseData.success) {\r\n        onOrderStatusChange(orderId, newStatus);\r\n      } else {\r\n        console.log('Error updating status.')\r\n        showAlert({ color: 'warning', message: 'Error actualizando el estado.'});\r\n      }\r\n  \r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <Modal isOpen={showModal}>\r\n          <ModalHeader toggle={toggleShowModal}>\r\n            <CardText>Order #: {orderId}</CardText>\r\n            <CardText>Productos ordenados</CardText>\r\n            <StatusSelect orderStatus={orderStatus} onOrderStatusChange={handleStatusChange} />\r\n          </ModalHeader>\r\n          <ModalBody>\r\n              <Nav tabs>\r\n\r\n                <NavItem>\r\n                  <NavLink style={{ cursor: \"pointer\" }} className={activeTab === \"orderProductsDetails\" ? \"active\" : \"\"} onClick={() => toggle(\"orderProductsDetails\") }>Productos</NavLink>\r\n                </NavItem>\r\n  \r\n                <NavItem>\r\n                  <NavLink style={{ cursor: \"pointer\" }} className={activeTab === \"orderProductsLocation\" ? \"active\" : \"\"} onClick={() => toggle(\"orderProductsLocation\") }>Localización</NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <NavLink style={{ cursor: \"pointer\" }} className={activeTab === \"customer\" ? \"active\" : \"\"} onClick={() => toggle(\"customer\") }>Cliente</NavLink>\r\n                </NavItem>\r\n\r\n              </Nav>\r\n\r\n              <TabContent activeTab={activeTab}>\r\n\r\n                <TabPane tabId=\"orderProductsDetails\">\r\n                    <TotalDisplay total={total} />\r\n                    <div>\r\n                        <OrderedProductDetailsView orderLines={orderLines} />\r\n                    </div>\r\n                    <TotalDisplay total={total} />\r\n                \r\n                </TabPane>\r\n\r\n                <TabPane tabId=\"orderProductsLocation\">\r\n                    <div className=\"mt-2\">\r\n                        <OrderMapView location={location} />\r\n                    </div>\r\n                  \r\n                </TabPane>\r\n\r\n                <TabPane tabId=\"customer\">\r\n                  <CustomerView user={order.user} />\r\n                </TabPane>\r\n\r\n              </TabContent>\r\n\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"success\" onClick={onClose}>\r\n              Cerrar\r\n            </Button>{\" \"}\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst TotalDisplay = ({ total }) => {\r\n    return (\r\n\r\n        <div className=\"form-group row p-1\">\r\n            <label htmlFor=\"generalTotalProp\" className=\"col-sm-4 col-form-label font-weight-bold\">Total</label>\r\n            <label htmlFor=\"generalTotalProp\" className=\"col-sm-4 col-form-label font-weight-bold text-success\">RD${total}</label>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nfunction CustomerView({ user }) {\r\n\r\n    const { id, username, name, lastName, email, telephone } = user;\r\n\r\n    return (\r\n        <div className=\"shadow bg-white mt-2\">\r\n            <form className=\"p-4\">\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"idProp\" className=\"col-sm-6 col-form-label font-weight-bold\">#:</label>\r\n                    <label htmlFor=\"idProp\" className=\"col-sm-6 col-form-label font-weight-bold\">{id}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"usernameProp\" className=\"col-sm-6 col-form-label\">Usuario:</label>\r\n                    <label htmlFor=\"usernameProp\" className=\"col-sm-6 col-form-label\">{username}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"nameProp\" className=\"col-sm-6 col-form-label\">Nombre: </label>\r\n                    <label htmlFor=\"nameProp\" className=\"col-sm-6 col-form-label\">{name} {lastName}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"emailProp\" className=\"col-sm-6 col-form-label\">Email: </label>\r\n                    <label htmlFor=\"emailProp\" className=\"col-sm-6 col-form-label\">{email}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"telephoneProp\" className=\"col-sm-6 col-form-label\">Teléfono: </label>\r\n                    <label htmlFor=\"telephoneProp\" className=\"col-sm-6 col-form-label\">{telephone}</label>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default ProductDetailsModal;","\r\nimport React from 'react';\r\n\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nfunction AllOrdersMapsView({ google, locations, onMarkerClick = () => {} }) {\r\n    return (\r\n      <div style={{height: 400, padding: 0, position: 'relative'}}>\r\n        <Map\r\n          google={google}\r\n          zoom={11}\r\n          initialCenter={{\r\n            lat: 18.486057,\r\n            lng: -69.931213\r\n          }}\r\n        >\r\n          {\r\n            locations.map(location => (\r\n              <Marker\r\n                key={location.id}\r\n                title={'The marker`s title will appear as a tooltip.'}\r\n                name={'SOMA'}\r\n                position={{lat: location.latitude, lng: location.longitude}}\r\n                onClick={() => onMarkerClick(location.id)}\r\n              />\r\n            ))\r\n          }\r\n        </Map>\r\n      </div>\r\n    )  \r\n}\r\n  \r\nconst WrappedAllOrdersMapsView = GoogleApiWrapper({\r\napiKey: ('AIzaSyC1wC2ImcL1s4wITbDbM-g3nLK01fJHGkc')\r\n})(AllOrdersMapsView);\r\n\r\nexport default WrappedAllOrdersMapsView;","\r\n\r\nimport React from 'react';\r\n\r\nimport StatusSelect from './StatusSelect';\r\n\r\nfunction OrderToolbar({ onSearch, orderStatus, onOrderStatusChange }) {\r\n    return (\r\n      <div className=\"Toolbar p-2 border rounded\">\r\n        <div className=\"searchInputContainer p-1\">\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"inputGroupPrepend2\">\r\n                  <i className=\"fa fa-search\"></i>\r\n                </span>\r\n              </div>\r\n              <input\r\n                  onChange={onSearch}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Buscar\"\r\n                  aria-describedby=\"inputGroupPrepend2\"\r\n                  required\r\n              />\r\n              <div className=\"ml-2\">\r\n                <StatusSelect orderStatus={orderStatus} onOrderStatusChange={onOrderStatusChange} />\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default OrderToolbar;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport './OrderView.css';\r\n\r\nimport OrderService from '../../../services/OrderService';\r\n\r\nimport OrderTable from \"./OrderTable\";\r\nimport ProductDetailsModal from './ProductDetailsModal';\r\nimport AllOrdersMapsView from './maps/AllOrdersMapsView';\r\nimport OrderToolbar from './OrderToolbar';\r\n\r\nconst toggleTableSort = { id: false, username: false, email: false, telephone: false, createdAt: false, total: false, comment: false };\r\n\r\nfunction OrderView({ showAlert }) {\r\n  const [orders, setOrders] = useState(() => []);\r\n  const [tableData, setTableData] = useState(() => []);\r\n  const [selectedOrder, setSelectedOrder] = useState(() => ({orderLines: [], locations: []}));\r\n  const [showOrderedProductsModal, setShowOrderedProductsModal] = useState(() => false);\r\n  const [statusFilter, setStatusFilter] = useState(() => '');\r\n\r\n  const transformToTableData = orders => {\r\n    return orders.map((\r\n      { user: { username, email, telephone }, status, id, createdAt, total, comment }) => ({ id, status, total, comment, createdAt, username, email, telephone })\r\n    );\r\n  };\r\n\r\n  const getOrders = async () => {\r\n\r\n    const responseData = await OrderService.getOrders();\r\n\r\n    if(responseData && responseData.success) {\r\n      const orders = responseData.response;\r\n        setOrders(orders);\r\n        const tableData = transformToTableData(orders);\r\n        setTableData(tableData);\r\n    } else {\r\n      console.log('Error getting orders.', responseData);\r\n      showAlert({ color: 'warning', message: 'Error getting orders.'});\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n  const handleRowClick = orderId => {\r\n    const order = orders.find(order => order.id === orderId)\r\n    if(order) {\r\n      setSelectedOrder(order);\r\n      setShowOrderedProductsModal(true);\r\n    }\r\n  };\r\n\r\n  const filterTableData = event => {\r\n    const value = event.target.value;\r\n    const tableData = transformToTableData(orders);\r\n    if(value) {\r\n        const filteredOrders = tableData.filter(order => {\r\n            const keys = Object.keys(order);\r\n            for(let key of keys) {\r\n                let propValue = order[key];\r\n                if(propValue) {\r\n                    propValue = '' + propValue;\r\n                    if(propValue.includes(value)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        setTableData(filteredOrders);\r\n    } else {\r\n      setTableData(tableData);\r\n    }\r\n  };\r\n\r\n  const onOrderedProductsModalClose = () => {\r\n    setShowOrderedProductsModal(false);\r\n  };\r\n\r\n  const toggleShowModal = () => {\r\n    setShowOrderedProductsModal(!showOrderedProductsModal);\r\n  };\r\n\r\n  const onOrderStatusChange = (orderId, newStatus) => {\r\n\r\n    const newOrders = orders.map(order => {\r\n      if(order.id === orderId) {\r\n        order.status = newStatus;\r\n      }\r\n      return order;\r\n    });\r\n\r\n    setOrders(newOrders);\r\n\r\n    const mappedTableData = tableData.map(record => {\r\n      if(record.id === orderId) {\r\n        record.status = newStatus;\r\n        const order = orders.find(order => order.id === orderId);\r\n        setSelectedOrder(order);\r\n      }\r\n      return record;\r\n    });\r\n\r\n    \r\n    setTableData(mappedTableData);\r\n\r\n  };\r\n\r\n  const filterByStatus = event => {\r\n\r\n    const status = event.target.value;\r\n\r\n    const tableData = transformToTableData(orders);\r\n\r\n    if(!status) {\r\n      setStatusFilter('');\r\n      return setTableData(tableData);\r\n    }\r\n\r\n    const filteredOrders = tableData.filter(order => order.status === status);\r\n\r\n    setStatusFilter(status);\r\n    setTableData(filteredOrders);\r\n\r\n  };\r\n\r\n  const sortColumn = prop => {\r\n \r\n    const toggleSort = toggleTableSort[prop];\r\n\r\n    const compare = (value1, value2) => {\r\n      if(value1 < value2) {\r\n        return 1;\r\n      } else if (value1 > value2) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    const tableData = transformToTableData(orders);\r\n\r\n    tableData.sort((orderA, orderB) => {\r\n      \r\n      let value1 = orderA[prop];\r\n      let value2 = orderB[prop];\r\n\r\n      if(toggleSort) {\r\n        return compare(value1, value2);\r\n      } else {\r\n        return compare(value2, value1);\r\n      }\r\n\r\n    });\r\n\r\n    toggleTableSort[prop] = !toggleSort;\r\n\r\n    const newOrders = [...tableData];\r\n\r\n    setTableData(newOrders);\r\n\r\n  };\r\n\r\n  const onMarkerClick = (locationId) => {\r\n    const order = orders.find(order => order.location.id === locationId);\r\n    if(order) {\r\n      setSelectedOrder(order);\r\n      setShowOrderedProductsModal(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"OrderView\">\r\n      <AllOrdersMapsView locations={orders.map(order => order.location)} onMarkerClick={onMarkerClick} />\r\n      <ProductDetailsModal\r\n        showModal={showOrderedProductsModal}\r\n        toggleShowModal={toggleShowModal}\r\n        onClose={onOrderedProductsModalClose}\r\n        showAlert={showAlert}\r\n        onOrderStatusChange={onOrderStatusChange}\r\n        order={selectedOrder}\r\n       />\r\n      <div>\r\n        <OrderToolbar\r\n          onSearch={filterTableData}\r\n          orderStatus={statusFilter}\r\n          onOrderStatusChange={filterByStatus}\r\n        />\r\n      </div>\r\n      <div className=\"Container mt-1\">\r\n        <OrderTable\r\n            orders={tableData}\r\n            onRowClick={handleRowClick}\r\n            onColumnClick={sortColumn}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default OrderView;\r\n","import React, { useState } from 'react';\r\n\r\nimport ProductView from './product/ProductView';\r\nimport OrderView from './order/OrderView';\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport OrderProductsView from './product/OrderProductsView';\r\n\r\nfunction DeliveryppTab(props) {\r\n\r\n    const [activeTab, setActiveTab] = useState('product');\r\n\r\n    const toggle = tab => {\r\n        if(activeTab !== tab) setActiveTab(tab);\r\n    };\r\n\r\n    const getAdminTabNavItems = () => {\r\n        return (\r\n            <>\r\n                <NavItem>\r\n                    <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'product' ? 'active' : '' } onClick={() => { toggle('product'); }}>Productos</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'orders' ? 'active' : '' } onClick={() => { toggle('orders'); }} >Ordenes</NavLink>\r\n                </NavItem>\r\n            </>  \r\n        );\r\n    };\r\n\r\n    const getAdminTabPanes = () => {\r\n        return (\r\n            <>\r\n                <TabPane tabId=\"product\">\r\n                    <ProductView showAlert={props.showAlert} />\r\n                </TabPane>\r\n                <TabPane tabId=\"orders\">\r\n                    <OrderView showAlert={props.showAlert} />\r\n                </TabPane>\r\n            </>\r\n        )\r\n    }\r\n\r\n  return (\r\n    <div className=\"container-md p-1 border mb-8\">\r\n\r\n      <Nav tabs>\r\n        {\r\n          false && (\r\n            <NavItem>\r\n              <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'available_products' ? 'active' : '' } onClick={() => { toggle('available_products'); }}>Productos Disponibles</NavLink>\r\n            </NavItem>\r\n          )\r\n        }\r\n        \r\n        {\r\n            props.isUserLoggedIn && props.user.role === 'ADMIN' && getAdminTabNavItems()\r\n        }\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        {\r\n          false && (\r\n            <TabPane tabId=\"available_products\">\r\n              <OrderProductsView showAlert={props.showAlert} />\r\n            </TabPane>\r\n          )\r\n        }\r\n        {\r\n            props.isUserLoggedIn && props.user.role === 'ADMIN' && getAdminTabPanes()\r\n        }\r\n      </TabContent>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryppTab;","import React from \"react\";\r\n\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Button,\r\n  } from 'reactstrap';\r\n\r\n\r\nfunction NavBar({ onSignInClick, onLogOutClick, isUserLoggedIn, user}) {\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">\r\n            <span style={{color: '#940205'}}>Deliverypp</span>\r\n        </NavbarBrand>\r\n        <Nav className=\"mr-auto\" navbar></Nav>\r\n        {\r\n          /*\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                  <NavLink href=\"/products\">Productos</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          */\r\n        }\r\n        \r\n        {\r\n            isUserLoggedIn ?\r\n                  <div>\r\n                      <span className=\"mr-1\">{user.name}</span>\r\n                      <Button outline title=\"Salir\" onClick={onLogOutClick} className=\"mr-1\"><i className=\"fas fa-sign-out-alt\"></i></Button>  \r\n                  </div>\r\n                :\r\n                  <div>\r\n                      <Button outline title=\"Entrar\" onClick={onSignInClick} className=\"mr-1\"><i className=\"fas fa-sign-in-alt\"></i></Button>\r\n                  </div>\r\n        }\r\n\r\n      </Navbar>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        © 2020 Copyright:\r\n        <a href=\"/\"> Deliverypp.com</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst AuthService = {\r\n    generateErrorResponse(error) {\r\n\r\n        let message = error.message;\r\n\r\n        if(message.includes('401')) {\r\n            message = \"Credenciales incorrectas. Verifique que su usuario y contraseña son correctos.\"\r\n        }\r\n\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    handleResponse(response) {\r\n        if(response && response.data) {\r\n\r\n            const deliveryppResponse = response.data;\r\n\r\n            return deliveryppResponse;\r\n\r\n        }\r\n    },\r\n    async register(user) {\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/register`, user);\r\n\r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n\r\n        }\r\n\r\n    },\r\n    async login(user) {\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/login`, user);\r\n\r\n            const responseData = this.handleResponse(response);\r\n\r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n            \r\n            return this.generateErrorResponse(e);\r\n\r\n        }\r\n        \r\n    },\r\n    async getUserByToken(token) {\r\n\r\n        try {\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/auth/${token}`, headers);\r\n    \r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n            \r\n        }\r\n\r\n    },\r\n    async logout(token) {\r\n\r\n        try {\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/auth/${token}`, headers);\r\n    \r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n};\r\n\r\nexport default AuthService;","import React from 'react';\r\n\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport './Loader.css';\r\n\r\nfunction Loader(props) {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <Spinner color=\"light\"  style={{ width: '4rem', height: '4rem' }} />\r\n            <span style={{color: '#fff'}}> Espere...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { useState } from 'react';\r\n\r\nimport {\r\n    Col, Form,\r\n    FormGroup, Label, Input,\r\n    Button,\r\n    FormFeedback \r\n} from 'reactstrap';\r\n\r\nimport AuthService from '../../../services/AuthService';\r\n\r\nimport Loader from '../../common/Loader';\r\n\r\nfunction LoginForm({ onLogin = () => {} }) {\r\n\r\n    const [dirty, setDirty] = useState({\r\n        username: false,\r\n        password: false,\r\n    });\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const login = async e => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            username,\r\n            password\r\n        };\r\n\r\n        setLoading(true);\r\n\r\n        const responseData = await AuthService.login(user);\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            onLogin(responseData);\r\n        }, 1000);\r\n\r\n        // TODO: close form\r\n\r\n    }\r\n\r\n    const onUsernameInputChange = e => {\r\n\r\n        handleSetDirty('username');\r\n\r\n        const input = e.target;\r\n\r\n        const username = input.value;\r\n\r\n        setUsername(username);\r\n\r\n    }\r\n\r\n    const onPasswordInputChange = e => {\r\n\r\n        handleSetDirty('password');\r\n\r\n        const input = e.target;\r\n\r\n        const password = input.value;\r\n\r\n        setPassword(password);\r\n\r\n    }\r\n\r\n    const handleSetDirty = (prop) => {\r\n\r\n        if(!dirty[prop]) {\r\n            const newDirty = {...dirty};\r\n            newDirty[prop] = true;\r\n            setDirty(newDirty);\r\n        }\r\n\r\n    }\r\n\r\n    const isValidUsername = !!username;\r\n    const isValidPassword = !!password && password.length > 5;\r\n\r\n    const isFormValid = () => {\r\n        return isValidUsername && isValidPassword;\r\n    }\r\n\r\n    return (\r\n\r\n        <Form className=\"form position-relative p-2\">\r\n            {\r\n                loading && <Loader />\r\n            }\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"username\">Usuario</Label>\r\n                    <Input\r\n                        valid={dirty.username && isValidUsername}\r\n                        invalid={dirty.username && !isValidUsername}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        value={username}\r\n                        onChange={onUsernameInputChange}\r\n                    />\r\n                    {\r\n                        dirty.username && <FormFeedback>El nombre de usuario no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Contraseña</Label>\r\n                    <Input\r\n                        valid={dirty.password && isValidPassword}\r\n                        invalid={dirty.password && !isValidPassword}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"examplePassword\"\r\n                        placeholder=\"********\"\r\n                        value={password}\r\n                        onChange={onPasswordInputChange}\r\n                    />\r\n                    {\r\n                        dirty.password && <FormFeedback>Introduce una contraseña de más de 5 caracteres.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Button disabled={!isFormValid()} onClick={login}>Entrar</Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\n\r\nimport {\r\n    Col, Form,\r\n    FormGroup, Label, Input,\r\n    Button, FormFeedback \r\n} from 'reactstrap';\r\n\r\nimport validator from 'validator';\r\n\r\nimport AuthService from '../../../services/AuthService';\r\n\r\nimport Loader from '../../common/Loader';\r\n\r\nfunction RegisterForm({onRegister = () => {}}) {\r\n\r\n    const [dirty, setDirty] = useState({\r\n        username: false,\r\n        email: false,\r\n        password: false,\r\n        name: false,\r\n        telephone: false \r\n    });\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [telephone, setTelephone] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const register = async e => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            name,\r\n            username,\r\n            email,\r\n            password,\r\n            lastName,\r\n            telephone\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const response = await AuthService.register(user);\r\n\r\n        if(response && response.token) {\r\n            localStorage.setItem('deliverypp_user_login_token', response.token);\r\n        }\r\n\r\n        clearForm();\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            onRegister(response);\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    const clearForm = () => {\r\n\r\n        setUsername('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setName('');\r\n        setLastName('');\r\n        setTelephone('');\r\n\r\n        setDirty({\r\n            username: false,\r\n            email: false,\r\n            password: false,\r\n            name: false,\r\n            telephone: false \r\n        });\r\n\r\n    }\r\n\r\n    const onUsernameInputChange = e => {\r\n\r\n        handleSetDirty('username');\r\n\r\n        const input = e.target;\r\n\r\n        const username = input.value;\r\n\r\n        setUsername(username);\r\n\r\n    }\r\n\r\n    const onEmailInputChange = e => {\r\n\r\n        handleSetDirty('email');\r\n\r\n        const input = e.target;\r\n\r\n        const email = input.value;\r\n\r\n        setEmail(email);\r\n\r\n    }\r\n\r\n    const onPasswordInputChange = e => {\r\n\r\n        handleSetDirty('password');\r\n\r\n        const input = e.target;\r\n\r\n        const password = input.value;\r\n\r\n        setPassword(password);\r\n\r\n    }\r\n\r\n    const onNameInputChange = e => {\r\n\r\n        handleSetDirty('name');\r\n\r\n        const input = e.target;\r\n\r\n        const name = input.value;\r\n\r\n        setName(name);\r\n    }\r\n\r\n    const onLastNameInputChange = e => {\r\n        const input = e.target;\r\n\r\n        const lastName = input.value;\r\n\r\n        setLastName(lastName);\r\n    }\r\n\r\n    const onTelephoneInputChange = e => {\r\n\r\n        handleSetDirty('telephone');\r\n\r\n        const input = e.target;\r\n\r\n        const telephone = input.value;\r\n\r\n        setTelephone(telephone);\r\n    }\r\n\r\n    const handleSetDirty = (prop) => {\r\n\r\n        if(!dirty[prop]) {\r\n            const newDirty = {...dirty};\r\n            newDirty[prop] = true;\r\n            setDirty(newDirty);\r\n        }\r\n\r\n    }\r\n\r\n    const isValidEmail = !!email && validator.isEmail(email);\r\n    const isValidUsername = !!username;\r\n    const isValidName = !!name;\r\n    const isValidPassword = !!password && password.length > 5;\r\n    const isValidTelephone = !!telephone && telephone.length === 10;\r\n\r\n    const isFormValid = () => {\r\n        return isValidEmail && isValidUsername && isValidName && isValidPassword && isValidTelephone;\r\n    }\r\n\r\n    return (\r\n\r\n        <Form className=\"form position-relative p-2\">\r\n            {\r\n                loading && <Loader />\r\n            }\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"register_username\">Usuario</Label>\r\n                    <Input\r\n                        valid={dirty.username && isValidUsername}\r\n                        invalid={dirty.username && !isValidUsername}\r\n                        type=\"text\"\r\n                        name=\"register_username\"\r\n                        id=\"register_username\"\r\n                        required\r\n                        value={username}\r\n                        onChange={onUsernameInputChange}\r\n                    />\r\n                    {\r\n                        dirty.username && <FormFeedback>El nombre de usuario no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input\r\n                        valid={dirty.email && isValidEmail}\r\n                        invalid={dirty.email && !isValidEmail}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"exampleEmail\"\r\n                        placeholder=\"youremail@email.com\"\r\n                        required\r\n                        value={email}\r\n                        onChange={onEmailInputChange}\r\n                    />\r\n                    {\r\n                        dirty.email && <FormFeedback>Introduce un email válido.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Contraseña</Label>\r\n                    <Input\r\n                        valid={dirty.password && isValidPassword}\r\n                        invalid={dirty.password && !isValidPassword}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"********\"\r\n                        value={password}\r\n                        onChange={onPasswordInputChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.password && <FormFeedback>Introduce una contraseña de más de 5 caracteres.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"name\">Nombre</Label>\r\n                    <Input\r\n                        valid={dirty.name && isValidName}\r\n                        invalid={dirty.name && !isValidName}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        value={name}\r\n                        onChange={onNameInputChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.name && <FormFeedback>El nombre no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"lastname\">Apellido</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"lastname\"\r\n                        id=\"lastname\"\r\n                        value={lastName}\r\n                        onChange={onLastNameInputChange}\r\n                        required\r\n                    />\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"telephone\">Teléfono</Label>\r\n                    <Input\r\n                        valid={dirty.telephone && isValidTelephone}\r\n                        invalid={dirty.telephone && !isValidTelephone}\r\n                        type=\"number\"\r\n                        name=\"telephone\"\r\n                        id=\"telephone\"\r\n                        value={telephone}\r\n                        onChange={onTelephoneInputChange}\r\n                        placeholder=\"8095005000\"\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.name && <FormFeedback>Introduce un teléfono válido.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Button disabled={!isFormValid()} onClick={register}>Registrarse</Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default RegisterForm;","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nimport LoginForm from './LoginForm';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nimport './RegisterLoginTab.css';\r\n\r\nfunction RegisterLoginTab(props) {\r\n\r\n  const [activeTab, setActiveTab] = useState('login');\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  let loginIconColor = 'grey';\r\n  let registerIconColor = 'grey';\r\n\r\n  if(activeTab === 'login') {\r\n    loginIconColor = props.color;\r\n  } else if(activeTab === 'register') {\r\n    registerIconColor = props.color;\r\n  }\r\n\r\n  const onRegister = (responseData) => {\r\n\r\n    if(!responseData) {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el registro. Trate luego.'});\r\n    } else if(responseData && !responseData.success) {\r\n      props.showAlert({ color: 'warning', message: responseData.message});\r\n    } if(responseData && responseData.success) {\r\n      setActiveTab('login');\r\n    } else {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el registro. Trate luego.'});\r\n    }\r\n\r\n  }\r\n\r\n  const onLogin = (responseData) => {\r\n\r\n    if(!responseData) {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el ingreso. Trate luego.'});\r\n    } else if(responseData && !responseData.success) {\r\n      props.showAlert({ color: 'warning', message: responseData.message});\r\n    } if(responseData && responseData.success && responseData.response) {\r\n        const response = responseData.response;\r\n        if(response.token) {\r\n            localStorage.setItem('deliverypp_user_login_token',  response.token);\r\n            props.toggle();\r\n            props.onLogin(response.user);\r\n        }\r\n    } else {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el ingreso. Trate luego.'});\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"RegisterLoginTab\">\r\n      <Modal isOpen={props.showModal}>\r\n        <ModalHeader toggle={props.toggle}>Entrar</ModalHeader>\r\n        <ModalBody>\r\n          <Nav tabs>\r\n            <NavItem>\r\n              <NavLink\r\n                style={{ cursor: \"pointer\" }}\r\n                className={ activeTab === 'login' ? 'active' : '' }\r\n                onClick={() => { toggle(\"login\"); }}\r\n              >\r\n                Entrar <i className=\"fas fa-user\" style={{color: loginIconColor}}></i>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                style={{ cursor: \"pointer\" }}\r\n                className={ activeTab === 'register' ? 'active' : '' }\r\n                onClick={() => { toggle(\"register\"); }}\r\n              >\r\n                Registrarse <i className=\"fas fa-sign-in-alt\" style={{color: registerIconColor}}></i>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"login\">\r\n              <LoginForm onLogin={onLogin} color={props.color} />\r\n            </TabPane>\r\n            <TabPane tabId=\"register\">\r\n              <RegisterForm onRegister={onRegister} color={props.color} />\r\n            </TabPane>\r\n          </TabContent>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterLoginTab;\r\n","import React from 'react';\r\n\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport './Loader.css';\r\n\r\nfunction MainLoader(props) {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <Spinner type=\"grow\" color=\"dark\"  style={{ width: '4rem', height: '4rem' }} />\r\n            <span style={{color: '#fff'}}> Espere...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainLoader;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport DeliveryppTab from './components/deliverypp/DeliveryppTab';\nimport NavBar from './components/main/NavBar';\nimport Footer from './components/main/Footer';\n\nimport RegisterLoginTab from './components/main/auth/RegisterLoginTab';\n\nimport { Alert } from 'reactstrap';\n\nimport MainLoader from './components/common/MainLoader';\n\nimport AuthService from './services/AuthService';\n\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\n\nconst mainColor = '#940205';\n\nfunction App() {\n\n  const [showRegisterLoginTab, setShowRegisterLoginTab] = useState(false);\n  const [alertVisible, setAlertVisible] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('Registered');\n  const [alertColor, setAlertColor] = useState('info');\n  const [appLoading, setAppLoading] = useState(true);\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n\n    const token = localStorage.getItem('deliverypp_user_login_token');\n\n    const getUser = async () => {\n      if(token) {\n        const responseData = await AuthService.getUserByToken(token);\n\n        if(responseData && responseData.response) {\n          const user = responseData.response;\n          if(responseData.success) {\n            setUser(user);\n            setIsUserLoggedIn(true);\n          }\n        } else {\n          setIsUserLoggedIn(false);\n        }\n        setTimeout(() => { setAppLoading(false); }, 1000);\n      } else {\n  \n        setIsUserLoggedIn(false);\n        setTimeout(() => { setAppLoading(false); }, 1000);\n        setIsUserLoggedIn(false);\n\n      }\n    }\n\n    if(!isUserLoggedIn) {\n      getUser();\n    }\n    \n  }, [isUserLoggedIn]);\n\n  const toggleRegisterLoginTab = () => {\n    setShowRegisterLoginTab(!showRegisterLoginTab);\n  };\n\n  const showAlert = ({ color, message }) => {\n    setAlertColor(color);\n    setAlertMessage(message);\n    setAlertVisible(true);\n\n    setTimeout(() => {\n      setAlertColor('info');\n      setAlertVisible(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n\n  const onAlertDismiss = () => {\n    setAlertVisible(false);\n  };\n\n  const onLogOutClick = () => {\n\n    setAppLoading(true);\n\n    const token = localStorage.getItem('deliverypp_user_login_token');\n\n    AuthService.logout(token);\n\n    localStorage.removeItem('deliverypp_user_login_token');\n\n    setUser({});\n    setIsUserLoggedIn(false);\n\n    setTimeout(() => { setAppLoading(false); }, 1000);\n\n  };\n\n  const onLogin = (user) => {\n\n    setAppLoading(true);\n\n    setUser(user);\n    setIsUserLoggedIn(true);\n\n    setTimeout(() => { setAppLoading(false); }, 1000);\n\n  };\n\n  if(appLoading) {\n    return (\n      <MainLoader />\n    )\n  } else {\n    return (\n      <Router>\n        <div className=\"App\">\n\n          <div className=\"alertContainer\">\n            <Alert color={alertColor} isOpen={alertVisible} toggle={onAlertDismiss}>\n                {alertMessage}\n            </Alert>\n          </div>  \n\n          <NavBar\n            isUserLoggedIn={isUserLoggedIn}\n            user={user}\n            onSignInClick={() => setShowRegisterLoginTab(true)}\n            onLogOutClick={onLogOutClick}\n            color={mainColor}\n          />\n          \n          {\n            showRegisterLoginTab && <RegisterLoginTab showModal={showRegisterLoginTab} toggle={toggleRegisterLoginTab} color={mainColor} showAlert={showAlert} onLogin={onLogin} />\n          }\n\n          <Switch>\n            <Route exact path=\"/\" component={() => <DeliveryppTab showAlert={showAlert} color={mainColor} isUserLoggedIn={isUserLoggedIn} user={user} />} />\n            <Route component={Notfound} />\n          </Switch>\n\n          <Footer color={mainColor} />\n        </div>\n      </Router>\n    );\n  }\n\n}\n\nfunction Notfound() {\n  return (\n    <div>\n      La página no fue encontrada\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}