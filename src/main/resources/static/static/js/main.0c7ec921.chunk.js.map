{"version":3,"sources":["components/deliverypp/product/ProductCard.js","components/deliverypp/product/ProductTable.js","components/common/Toolbar.js","Deliverypp.js","services/ProductService.js","components/common/Modal.js","components/deliverypp/product/ProductView.js","services/OrderService.js","util/StatusClassMapper.js","components/deliverypp/order/OrderTable.js","components/deliverypp/order/StatusSelect.js","components/deliverypp/order/OrderedProductDetailsView.js","components/deliverypp/order/maps/OrderMapView.js","components/deliverypp/order/ProductDetailsModal.js","components/deliverypp/order/maps/AllOrdersMapsView.js","components/deliverypp/order/OrderToolbar.js","components/deliverypp/order/OrderView.js","components/deliverypp/product/OrderProductsView.js","components/deliverypp/DeliveryppTab.js","components/main/NavBar.js","components/main/Footer.js","services/AuthService.js","components/common/Loader.js","components/main/auth/LoginForm.js","components/main/auth/RegisterForm.js","components/main/auth/RegisterLoginTab.js","components/common/MainLoader.js","App.js","serviceWorker.js","index.js"],"names":["ProductCard","product","selected","onClick","imageUrl","description","category","price","className","Card","style","width","CardImg","top","src","alt","CardBody","CardTitle","CardText","ProductTable","props","Table","striped","bordered","hover","products","map","key","id","Toolbar","onChange","onSearch","type","placeholder","aria-describedby","required","onEditClick","disabled","title","onAddClick","onDeleteClick","ENVIRONMENTS","Deliverypp","env","getPath","this","console","error","STATUS","SUCCESS","ERROR","basePath","ProductService","handleResponse","response","data","deliveryppResponse","getProducts","axios","get","getProductById","productId","token","localStorage","getItem","headers","Authorization","addProduct","post","updateProduct","put","deleteProductById","delete","DModal","Modal","isOpen","showModal","ModalHeader","toggle","ModalBody","children","ModalFooter","Button","color","onSave","onCancel","ProductActionForm","Input","name","value","e","target","onProductUpdate","Label","for","ProductView","showAlert","useState","cardView","selectedProductId","setSelectedProductId","setProducts","filterableProducts","setFilterableProducts","setShowModal","action","setAction","selectedProduct","setSelectedProduct","filter","setFilter","a","responseData","success","log","message","createProduct","newProduct","newProducts","filterProducts","forEach","useEffect","onProductCardClick","handleDeleteProduct","window","confirm","filteredProducts","Object","keys","propValue","includes","getActionDescription","event","OrderService","generateErrorResponse","status","getOrders","getOrderById","orderId","addOrder","order","updateStatus","StatusClassMapper","statusMap","ORDERED","PAID","ACQUIRING","ACQUIRED","TRANSIT","DELIVERED","getClassStatusClass","StatusTranslateMapper","OrderTable","activeRow","setActiveRow","onColumnClick","prop","responsive","orders","onRowClick","handleOnRowClick","username","email","telephone","createdAt","total","comment","StatusSelect","orderStatus","onOrderStatusChange","htmlFor","borderWidth","OrderedProductDetailsView","orderLines","orderLine","imageHidden","mappedOrderLines","setMappedOrderLines","toggleImageHidden","newMappedOrderLines","quantity","marginBottom","marginTop","fontSize","WrappedOrderMapView","GoogleApiWrapper","apiKey","google","location","height","padding","position","zoom","initialCenter","lat","latitude","lng","longitude","TotalDisplay","CustomerView","user","lastName","ProductDetailsModal","onClose","toggleShowModal","activeTab","setActiveTab","tab","handleStatusChange","newStatus","Nav","tabs","NavItem","NavLink","cursor","TabContent","TabPane","tabId","WrappedAllOrdersMapsView","locations","onMarkerClick","OrderToolbar","toggleTableSort","OrderView","setOrders","tableData","setTableData","selectedOrder","setSelectedOrder","showOrderedProductsModal","setShowOrderedProductsModal","statusFilter","setStatusFilter","transformToTableData","locationId","find","newOrders","mappedTableData","record","filteredOrders","toggleSort","compare","value1","value2","sort","orderA","orderB","OrderProductsView","DeliveryppTab","isUserLoggedIn","role","NavBar","onSignInClick","onLogOutClick","Navbar","light","expand","NavbarBrand","href","navbar","outline","Footer","AuthService","register","login","getUserByToken","logout","Loader","Spinner","LoginForm","onLogin","password","dirty","setDirty","setUsername","setPassword","loading","setLoading","preventDefault","setTimeout","handleSetDirty","newDirty","isValidUsername","isValidPassword","length","Form","Col","FormGroup","valid","invalid","FormFeedback","RegisterForm","onRegister","setEmail","setName","setLastName","setTelephone","setItem","clearForm","isValidEmail","validator","isEmail","isValidName","isValidTelephone","RegisterLoginTab","loginIconColor","registerIconColor","MainLoader","Notfound","App","showRegisterLoginTab","setShowRegisterLoginTab","alertVisible","setAlertVisible","alertMessage","setAlertMessage","alertColor","setAlertColor","appLoading","setAppLoading","setIsUserLoggedIn","setUser","getUser","Alert","removeItem","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"qSAiCeA,MA1Bf,YAAsD,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAE9BC,EAA2CH,EAA3CG,SAAUC,EAAiCJ,EAAjCI,YAAaC,EAAoBL,EAApBK,SAAUC,EAAUN,EAAVM,MAEzC,OACI,yBAAKC,UAAS,8BAAyBN,GAAYC,QAAS,kBAAMA,EAAQF,KACtE,kBAACQ,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,UAClB,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACF,MAAM,OAAOG,IAAKV,EAAUW,IAAKV,IAC9C,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWT,UAAU,0BAA0BF,GAC/C,kBAACY,EAAA,EAAD,KAEQb,GAGR,kBAACa,EAAA,EAAD,CAAUV,UAAU,iCAApB,aAEcD,Q,SCQnBY,MA5Bf,SAAsBC,GAEpB,OACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,kCACA,4CACA,8CACA,uCAGJ,+BAEIJ,EAAMK,SAASC,KAAI,SAAAzB,GAAO,OACxB,wBAAI0B,IAAK1B,EAAQ2B,GAAIzB,QAAS,kBAAMiB,EAAMjB,QAAQF,KAChD,4BAAKA,EAAQ2B,IACb,4BAAK3B,EAAQK,UACb,4BAAKL,EAAQI,aACb,4BAAKJ,EAAQM,c,YCoBZsB,MAvCf,SAAiBT,GACf,OACE,yBAAKZ,UAAU,8BACb,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBoB,GAAG,sBACpC,uBAAGpB,UAAU,mBAGjB,2BACIsB,SAAUV,EAAMW,SAChBC,KAAK,OACLxB,UAAU,eACVyB,YAAY,SACZC,mBAAiB,qBACjBC,UAAQ,MAKlB,yBAAK3B,UAAU,8BACb,4BAAQL,QAASiB,EAAMgB,YAAaC,SAAUjB,EAAMiB,SAAU7B,UAAU,yBAAyB8B,MAAM,mBACrG,uBAAG9B,UAAU,kBAGf,4BAAQL,QAASiB,EAAMmB,WAAY/B,UAAU,oBAAoB8B,MAAM,mBACrE,uBAAG9B,UAAU,gBAGf,4BAAQL,QAASiB,EAAMoB,cAAeH,SAAUjB,EAAMiB,SAAU7B,UAAU,iBAAiB8B,MAAM,kBAC/F,uBAAG9B,UAAU,oB,iBClCjBiC,EACG,MADHA,EAEE,KAFFA,EAGI,OAyBMC,EAjBG,CACfC,IAAKF,EACLG,QAFe,WAGX,OAAOC,KAAKF,KACR,KAAKF,EACD,MAAO,wBACX,KAAKA,EACL,KAAKA,EACD,MAAO,wBACX,QACIK,QAAQC,MAAM,sBAI1BC,OAnBW,CACXC,QAAS,UACTC,MAAO,UCLLC,EAAWT,EAAWE,UA0EbQ,EAxEQ,CACbC,eADa,SACEC,GAAW,OAAD,8GACxBA,IAAYA,EAASC,KADG,uBAEjBC,EAAqBF,EAASC,KAFb,kBAIhBC,GAJgB,8CAOzBC,YARa,WAQE,IAAD,wIAEOC,IAAMC,IAAN,UAAaR,EAAb,kBAFP,cAEVG,EAFU,yBAIT,EAAKD,eAAeC,IAJX,8CAQdM,eAhBa,SAgBEC,GAAY,IAAD,mIAEtBC,EAAQC,aAAaC,QAAQ,+BAE7BC,EAAU,CACZC,cAAc,UAAD,OAAYJ,IALD,SAQLJ,IAAMC,IAAN,UAAaR,EAAb,yBAAsCU,GAAa,CAAEI,YARhD,cAQtBX,EARsB,yBAUrB,EAAKD,eAAeC,IAVC,8CAc1Ba,WA9Ba,SA8BFlE,GAAU,IAAD,mIAEhB6D,EAAQC,aAAaC,QAAQ,+BAE7BC,EAAU,CACZC,cAAc,UAAD,OAAYJ,IALP,SAQCJ,IAAMU,KAAN,UAAcjB,EAAd,iBAAuClD,EAAS,CAAEgE,YARnD,cAQhBX,EARgB,yBAUf,EAAKD,eAAeC,IAVL,8CAapBe,cA3Ca,SA2CCpE,GAAU,IAAD,mIAEnB6D,EAAQC,aAAaC,QAAQ,+BAE7BC,EAAU,CACZC,cAAc,UAAD,OAAYJ,IALJ,SAQFJ,IAAMY,IAAN,UAAanB,EAAb,iBAAsClD,EAAS,CAAEgE,YAR/C,cAQnBX,EARmB,yBAUlB,EAAKD,eAAeC,IAVF,8CAavBiB,kBAxDa,SAwDKV,GAAY,IAAD,mIAEzBC,EAAQC,aAAaC,QAAQ,+BAE7BC,EAAU,CACZC,cAAc,UAAD,OAAYJ,IALE,SAQRJ,IAAMc,OAAN,UAAgBrB,EAAhB,yBAAyCU,GAAa,CAAEI,YARhD,cAQzBX,EARyB,yBAUxB,EAAKD,eAAeC,IAVI,+C,6CCvCxBmB,MAnBf,SAAgBrD,GACZ,OACI,6BACA,kBAACsD,EAAA,EAAD,CAAOC,OAAQvD,EAAMwD,WACjB,kBAACC,EAAA,EAAD,CAAaC,OAAQ1D,EAAM0D,QAAS1D,EAAMkB,OAC1C,kBAACyC,EAAA,EAAD,KAEQ3D,EAAM4D,UAGd,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUhF,QAASiB,EAAMgE,QAAvC,WAAgE,IAChE,kBAACF,EAAA,EAAD,CAAQC,MAAM,YAAYhF,QAASiB,EAAMiE,UAAzC,gB,kBC8QZ,SAASC,EAAkBlE,GAGvB,IAoDMhB,EAAWgB,EAAMnB,QAAQG,SAAWgB,EAAMnB,QAAQG,SAAW,cAEnE,OACI,6BACA,kBAACK,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAASC,KAAG,EAACF,MAAM,OAAOG,IAAKV,IAC/B,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACsE,EAAA,EAAD,CAAOvD,KAAK,OAAOwD,KAAK,WAAW5D,GAAG,WAAWK,YAAY,eAAYwD,MAAOrE,EAAMnB,QAAQK,SAAUwB,SA5C/F,SAAC4D,GAEtB,IAAMD,EAAQC,EAAEC,OAAOF,MAEjBxF,EAAO,eAAOmB,EAAMnB,SAE1BA,EAAQK,SAAWmF,EAEnBrE,EAAMwE,gBAAgB3F,OAsCd,kBAACiB,EAAA,EAAD,KACI,kBAAC2E,EAAA,EAAD,CAAOC,IAAI,YAAX,oBACA,kBAACP,EAAA,EAAD,CAAOvD,KAAK,MAAMwD,KAAK,WAAW5D,GAAG,WAAY6D,MAAOrF,EAAU0B,SAhEzD,SAAC4D,GAEtB,IAAID,EAAQC,EAAEC,OAAOF,MAEjBA,IACAA,EAAQ,eAGZ,IAAMxF,EAAO,eAAOmB,EAAMnB,SAE1BA,EAAQG,SAAWqF,EAEnBrE,EAAMwE,gBAAgB3F,OAsDd,kBAACiB,EAAA,EAAD,KACI,kBAAC2E,EAAA,EAAD,CAAOC,IAAI,eAAX,kBACA,kBAACP,EAAA,EAAD,CAAOvD,KAAK,WAAWwD,KAAK,cAAc5D,GAAG,cAAc6D,MAAOrE,EAAMnB,QAAQI,YAAayB,SAxCjF,SAAC4D,GAEzB,IAAMD,EAAQC,EAAEC,OAAOF,MAEjBxF,EAAO,eAAOmB,EAAMnB,SAE1BA,EAAQI,YAAcoF,EAEtBrE,EAAMwE,gBAAgB3F,OAkCd,kBAACiB,EAAA,EAAD,KACI,kBAACqE,EAAA,EAAD,CAAOvD,KAAK,SAASwD,KAAK,QAAQ5D,GAAG,QAAQK,YAAY,SAAUwD,MAAOrE,EAAMnB,QAAQM,MAAOuB,SA/BzF,SAAC4D,GAEnB,IAAMD,EAAQC,EAAEC,OAAOF,MAEjBxF,EAAO,eAAOmB,EAAMnB,SAE1BA,EAAQM,MAAQkF,EAEhBrE,EAAMwE,gBAAgB3F,UA+Bf8F,MA7Vf,YAAqC,IAAdC,EAAa,EAAbA,UAAa,EACFC,oBAAS,GADP,mBAC3BC,EAD2B,aAEgBD,oBAAU,IAF1B,mBAE3BE,EAF2B,KAERC,EAFQ,OAIFH,mBAAS,IAJP,mBAI3BxE,EAJ2B,KAIjB4E,EAJiB,OAKkBJ,mBAAS,IAL3B,mBAK3BK,EAL2B,KAKPC,EALO,OAOAN,oBAAS,GAPT,mBAO3BrB,EAP2B,KAOhB4B,EAPgB,OASNP,mBAAS,OATH,mBAS3BQ,EAT2B,KASnBC,EATmB,OAWYT,mBAAS,CAAC5F,YAAa,GAAIE,MAAO,EAAGH,SAAU,GAAIE,SAAU,KAXzE,mBAW3BqG,EAX2B,KAWVC,EAXU,OAaNX,mBAAS,IAbH,mBAa3BY,EAb2B,KAanBC,EAbmB,KAe5BrD,EAAW,uCAAG,8BAAAsD,EAAA,sEAES3D,EAAeK,cAFxB,QAEZuD,EAFY,SAGCA,EAAaC,SACxBxF,EAAWuF,EAAa1D,SAC9B+C,EAAY5E,GACV8E,EAAsB9E,KAGxBqB,QAAQoE,IAAI,0BACZlB,EAAU,CAAEb,MAAO,UAAWgC,QAAS,iCAVvB,2CAAH,qDAeXC,EAAa,uCAAG,gCAAAL,EAAA,sEAEO3D,EAAee,WAAWwC,GAFjC,QAEdK,EAFc,SAIDA,EAAaC,SAExBI,EAAaL,EAAa1D,SAE1BgE,EAJiC,CAIlBD,GAJkB,mBAIH5F,IAEpC4E,EAAYiB,GACZC,EAAeD,EAAaT,GAC5Bb,EAAU,CAAEb,MAAO,UAAWgC,QAAS,uBACvCX,GAAa,KAEb1D,QAAQoE,IAAI,0BACZlB,EAAU,CAAEb,MAAO,UAAWgC,QAAS,+BAhBrB,2CAAH,qDAoBb9C,EAAa,uCAAG,gCAAA0C,EAAA,sEAEO3D,EAAeiB,cAAcsC,GAFpC,QAEdK,EAFc,SAIDA,EAAaC,SAExBI,EAAaL,EAAa1D,UAE1BgE,EAJiC,YAIf7F,IAEZ+F,SAAQ,SAAAvH,GAClB,GAAGA,EAAQ2B,KAAOyF,EAAWzF,GAK3B,OAJA3B,EAAQI,YAAcgH,EAAWhH,YACjCJ,EAAQM,MAAQ8G,EAAW9G,MAC3BN,EAAQK,SAAW+G,EAAW/G,SAC9BL,EAAQG,SAAWiH,EAAWjH,UACvB,KAIXiG,EAAYiB,GACZC,EAAeD,EAAaT,GAC5Bb,EAAU,CAAEb,MAAO,UAAWgC,QAAS,uBACvCX,GAAa,KAEb1D,QAAQoE,IAAI,0BACZlB,EAAU,CAAEb,MAAO,UAAWgC,QAAS,+BA1BrB,2CAAH,qDA+BnBM,qBAAU,WAERhE,MAEC,IAEH,IAAMiE,EAAqB,SAAAzH,GACzB2G,EAAmB3G,GACnBmG,EAAqBnG,EAAQ2B,KA8BzB+F,EAAmB,uCAAG,8BAAAZ,EAAA,0DAEGa,OAAOC,QAAQ,kDAFlB,gCAMGzE,EAAemB,kBAAkB4B,GANpC,QAMlBa,EANkB,SAQLA,EAAaC,SAC9BjB,EAAU,CAAEb,MAAO,UAAWgC,QAAS,wBACjCW,EAAmBrG,EAASoF,QAAO,SAAA5G,GAAO,OAAIA,EAAQ2B,KAAOuE,KACnEE,EAAYyB,GACZP,EAAeO,EAAkBjB,KAEjC/D,QAAQoE,IAAI,2BACZlB,EAAU,CAAEb,MAAO,UAAWgC,QAAS,gCAfjB,2CAAH,qDAqBnBI,EAAiB,SAAC9F,EAAUgE,GAChC,GAAGA,EAAO,CAER,IAAMqC,EAAmBrG,EAASoF,QAAO,SAAA5G,GAIrC,IAFA,IAEA,MAFa8H,OAAOC,KAAK/H,GAEzB,eAAqB,CAAjB,IAAI0B,EAAG,KAEP,GAAW,aAARA,GAA8B,UAARA,GAA2B,gBAARA,EAAuB,CAC/D,IAAIsG,EAAYhI,EAAQ0B,GACxB,GAAGsG,IACCA,EAAY,GAAKA,GACJC,SAASzC,GAClB,OAAO,GAOvB,OAAO,KAGXc,EAAsBuB,QAGtBvB,EAAsB9E,IAuD1B,OACE,yBAAKjB,UAAU,eACf,kBAAC,EAAD,CACI4E,OA7CS,WAEb,OAAOqB,GACL,IAAK,MACHW,IACA,MACF,IAAK,OACH/C,IACA,MACF,QACEvB,QAAQC,MAAM,sBAoCdsC,SA9BW,WACfmB,GAAa,IA8BT5B,UAAWA,EACXE,OA5BS,WACb0B,GAAc5B,IA4BVtC,MAzBuB,WACzB,OAAOmE,GACL,IAAK,MACD,MAAO,sBACX,IAAK,OACD,MAAO,qBACX,QACE3D,QAAQC,MAAM,qBAkBToF,IAEP,kBAAC7C,EAAD,CAAmBlF,SAAU,cAAewF,gBAf1B,SAAA3F,GAEtB2G,EAAmB3G,IAa+DA,QAAS0G,MAGxF,EAcC,kBAAC,EAAD,CACI5E,SA9EW,SAACqG,GAEpB,IAAM3C,EAAQ2C,EAAMzC,OAAOF,MAE3BqB,EAAUrB,GACV8B,EAAe9F,EAAUgE,IA0EjBrD,YAnJkB,WAE1BsE,EAAU,QAEVF,GAAa,IAgJLjE,WA5IiB,WAEzBmE,EAAU,OACVE,EAAmB,CAACvG,YAAa,GAAIE,MAAO,EAAGH,SAAU,GAAIE,SAAU,KACvEkG,GAAa,IAyILhE,cAAemF,EACftF,UAAiC,IAAvB8D,IAGhB,6BACGD,EACC,yBAAK1F,UAAU,wBArKd8F,EAAmB5E,KAAI,SAAAzB,GAC1B,IAAMC,EAAWD,EAAQ2B,KAAOuE,EAAoB,WAAa,GACjE,OAAO,kBAAC,EAAD,CAAaxE,IAAK1B,EAAQ2B,GAAI3B,QAASA,EAASE,QAASuH,EAAoBxH,SAAUA,QAqK5F,yBAAKM,UAAU,yBAhKd,kBAAC,EAAD,CAAciB,SAAU6E,QCnH7BnD,G,MAAWT,EAAWE,WA4GbyF,EA1GM,CACjBC,sBADiB,SACKnB,GAOlB,MANqB,CACjBF,SAAS,EACTsB,OAAQ,QACRpB,QAASA,IAKjB9D,eAViB,SAUFC,GACX,GAAGA,GAAYA,EAASC,KAGpB,OAF2BD,EAASC,MAKtCiF,UAjBW,WAiBE,IAAD,4IAGJ1E,EAAQC,aAAaC,QAAQ,+BAE7BC,EAAU,CACZC,cAAc,UAAD,OAAYJ,IANnB,SASaJ,IAAMC,IAAN,UAAaR,EAAb,eAAoC,CAAEc,YATnD,cASJX,EATI,yBAWH,EAAKD,eAAeC,IAXjB,yDAeH,EAAKgF,sBAAsB,KAAEnB,UAf1B,4DAqBZsB,aAtCW,SAsCEC,GAAU,IAAD,4IAId5E,EAAQC,aAAaC,QAAQ,+BAE7BC,EAAU,CACZC,cAAc,UAAD,OAAYJ,IAPT,SAUGJ,IAAMC,IAAN,UAAaR,EAAb,uBAAoCuF,GAAW,CAAEzE,YAVpD,cAUdX,EAVc,yBAYb,EAAKD,eAAeC,IAZP,yDAgBb,EAAKgF,sBAAsB,KAAEnB,UAhBhB,4DAsBtBwB,SA5DW,SA4DFC,GAAQ,IAAD,4IAIR9E,EAAQC,aAAaC,QAAQ,+BAE7BC,EAAU,CACZC,cAAc,UAAD,OAAYJ,IAPf,SAUSJ,IAAMU,KAAN,UAAcjB,EAAd,eAAqCyF,EAAO,CAAE3E,YAVvD,cAURX,EAVQ,yBAYP,EAAKD,eAAeC,IAZb,yDAgBP,EAAKgF,sBAAsB,KAAEnB,UAhBtB,4DAsBhB0B,aAlFW,SAkFEH,EAASH,GAAS,IAAD,4IAItBzE,EAAQC,aAAaC,QAAQ,+BAE7BC,EAAU,CACZC,cAAc,UAAD,OAAYJ,IAPD,SAULJ,IAAMY,IAAN,UAAanB,EAAb,uBAAoCuF,EAApC,mBAAsDH,GAAU,CAAEtE,YAV7D,cAUtBX,EAVsB,yBAYrB,EAAKD,eAAeC,IAZC,yDAgBrB,EAAKgF,sBAAsB,KAAEnB,UAhBR,6D,SC1EvB2B,EAdS,CACtBC,UAAW,CACTC,QAAS,SACTC,KAAM,OACNC,UAAW,YACXC,SAAU,UACVC,QAAS,UACTC,UAAW,WAEbC,oBATsB,SASFf,GAClB,OAAO1F,KAAKkG,UAAUR,KCFtBgB,EAAwB,CAC5BP,QAAS,WACTC,KAAM,SACNC,UAAW,cACXC,SAAU,YACVC,QAAS,cACTC,UAAW,aAoDEG,MAjDf,SAAoBpI,GAAQ,IAAD,EAES6E,mBAAS,MAFlB,mBAElBwD,EAFkB,KAEPC,EAFO,KASnBC,EAAgB,SAACC,GACrBxI,EAAMuI,cAAcC,IAGtB,OACE,yBAAKpJ,UAAU,cACb,kBAAC,IAAD,CAAOe,UAAQ,EAACC,OAAK,EAACqI,YAAU,GAC9B,+BACE,4BACE,wBAAI1J,QAAS,kBAAMwJ,EAAc,QAAjC,MACA,wBAAIxJ,QAAS,kBAAMwJ,EAAc,YAAjC,UACA,wBAAIxJ,QAAS,kBAAMwJ,EAAc,cAAjC,WACA,wBAAIxJ,QAAS,kBAAMwJ,EAAc,WAAjC,SACA,wBAAIxJ,QAAS,kBAAMwJ,EAAc,eAAjC,eACA,wBAAIxJ,QAAS,kBAAMwJ,EAAc,eAAjC,SACA,wBAAIxJ,QAAS,kBAAMwJ,EAAc,WAAjC,SACA,wBAAIxJ,QAAS,kBAAMwJ,EAAc,aAAjC,gBAGJ,+BACGvI,EAAM0I,OAAOpI,KAAI,SAACkH,GACjB,OACE,wBAAIpI,UAAS,oBAAeiJ,GAAaA,EAAU7H,KAAOgH,EAAMhH,GAAK,WAAa,IAAMD,IAAKiH,EAAMhH,GAAIzB,QAAS,kBA3BnG,SAACyI,GACxBc,EAAad,GACbxH,EAAM2I,WAAWnB,EAAMhH,IAyByGoI,CAAiBpB,KACrI,4BAAKA,EAAMhH,IACX,wBAAIpB,UAAS,eAAUsI,EAAkBQ,oBAAoBV,EAAML,UAAagB,EAAsBX,EAAML,SAC5G,4BAAKK,EAAMqB,UACX,4BAAKrB,EAAMsB,OACX,4BAAKtB,EAAMuB,WACX,4BAAKvB,EAAMwB,WACX,4BAAKxB,EAAMyB,OACX,4BAAKzB,EAAM0B,iB,6CC/BVC,MAjBjB,YAA6D,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,oBACjC,OACE,yBAAKjK,UAAU,iEACb,kBAACqF,EAAA,EAAD,CAAOrF,UAAU,OAAOkK,QAAQ,gBAAhC,UACA,kBAACnF,EAAA,EAAD,CAAO7E,MAAO,CAACiK,YAAa,GAAInK,UAAS,iBAAYsI,EAAkBQ,oBAAoBkB,IAAgBxI,KAAK,SAASJ,GAAG,eAAe6D,MAAO+E,EAAa1I,SAAU2I,GACvK,4BAAQhF,MAAO,KACf,4BAAQA,MAAO,WAAf,YACA,4BAAQA,MAAO,QAAf,UACA,4BAAQA,MAAO,aAAf,eACA,4BAAQA,MAAO,YAAf,aACA,4BAAQA,MAAO,WAAf,kBACA,4BAAQA,MAAO,aAAf,gBCmDOmF,MAlEjB,YAAkD,IAAdC,EAAa,EAAbA,WAAa,EAEG5E,mBAAS4E,EAAWnJ,KAAI,SAAAoJ,GAAS,sBAAUA,EAAV,CAAqBC,aAAa,QAFtE,mBAEtCC,EAFsC,KAEpBC,EAFoB,KAIvCC,EAAoB,SAACtJ,GACzBkB,QAAQoE,IAAI,KAAMtF,GAClB,IAAMuJ,EAAsBH,EAAiBtJ,KAAI,SAAAoJ,GAI/C,OAHGA,EAAU7K,QAAQ2B,KAAOA,IAC1BkJ,EAAUC,aAAeD,EAAUC,aAE9BD,KAETG,EAAoBE,IAGtB,OACE,oCACGH,EAAiBtJ,KAAI,gBAAG0J,EAAH,EAAGA,SAAUnL,EAAb,EAAaA,QAAS8K,EAAtB,EAAsBA,YAAtB,OACpB,kBAACtK,EAAA,EAAD,CAAMkB,IAAK1B,EAAQ2B,GAAIlB,MAAO,CAAE2K,aAAc,EAAGC,UAAW,GAAK9K,UAAU,4BAGvEuK,GAAe,yBAAKvK,UAAU,iCAAiC8B,MAAM,6BAA6BnC,QAAS,kBAAM+K,EAAkBjL,EAAQ2B,MAAK,uBAAGpB,UAAU,eAAeE,MAAO,CAAC6K,SAAU,GAAIpG,MAAO,YAIxM4F,GACC,kBAACnK,EAAA,EAAD,CACEC,KAAG,EACHF,MAAM,OACNG,IAAKb,EAAQG,SACbW,IAAKd,EAAQI,YACbF,QAAS,kBAAM+K,EAAkBjL,EAAQ2B,KACzCU,MAAM,8BACN9B,UAAU,gBAKhB,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWT,UAAU,gCAAgCP,EAAQI,aAC3D,8BAEI,yBAAKG,UAAU,gCACX,2BAAOkK,QAAQ,UAAUlK,UAAU,wBAAnC,UACA,2BAAOkK,QAAQ,UAAUlK,UAAU,2BAAnC,MAAiEP,EAAQM,QAG7E,yBAAKC,UAAU,gCACX,2BAAOkK,QAAQ,eAAelK,UAAU,2BAAxC,YACA,2BAAOkK,QAAQ,eAAelK,UAAU,2BAA2B4K,IAGvE,yBAAK5K,UAAU,gCACX,2BAAOkK,QAAQ,YAAYlK,UAAU,4CAArC,SACA,2BAAOkK,QAAQ,YAAYlK,UAAU,yDAArC,MAAiGP,EAAQM,MAAQ6K,Y,QCrCzI,IAIeI,GAJaC,2BAAiB,CAC7CC,OAAS,2CADmBD,EAhB5B,YAA6C,IAArBE,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAC5B,OACE,yBAAKlL,MAAO,CAACmL,OAAQ,IAAKC,QAAS,EAAGC,SAAU,aAC9C,kBAAC,MAAD,CACEJ,OAAQA,EACRK,KAAM,GACNC,cAAe,CACbC,IAAKN,EAASO,SACdC,IAAKR,EAASS,YAEhB,kBAAC,SAAD,CAAQ7G,KAAM,0BC+ExB,IAAM8G,GAAe,SAAC,GAAe,IAAbjC,EAAY,EAAZA,MACpB,OAEI,yBAAK7J,UAAU,sBACX,2BAAOkK,QAAQ,mBAAmBlK,UAAU,4CAA5C,SACA,2BAAOkK,QAAQ,mBAAmBlK,UAAU,yDAA5C,MAAwG6J,KAMpH,SAASkC,GAAT,GAAiC,IAATC,EAAQ,EAARA,KAEZ5K,EAAmD4K,EAAnD5K,GAAIqI,EAA+CuC,EAA/CvC,SAAUzE,EAAqCgH,EAArChH,KAAMiH,EAA+BD,EAA/BC,SAAUvC,EAAqBsC,EAArBtC,MAAOC,EAAcqC,EAAdrC,UAE7C,OACI,yBAAK3J,UAAU,wBACX,0BAAMA,UAAU,OAEZ,yBAAKA,UAAU,gCACX,2BAAOkK,QAAQ,SAASlK,UAAU,4CAAlC,MACA,2BAAOkK,QAAQ,SAASlK,UAAU,4CAA4CoB,IAGlF,yBAAKpB,UAAU,gCACX,2BAAOkK,QAAQ,eAAelK,UAAU,2BAAxC,YACA,2BAAOkK,QAAQ,eAAelK,UAAU,2BAA2ByJ,IAGvE,yBAAKzJ,UAAU,gCACX,2BAAOkK,QAAQ,WAAWlK,UAAU,2BAApC,YACA,2BAAOkK,QAAQ,WAAWlK,UAAU,2BAA2BgF,EAA/D,IAAsEiH,IAG1E,yBAAKjM,UAAU,gCACX,2BAAOkK,QAAQ,YAAYlK,UAAU,2BAArC,WACA,2BAAOkK,QAAQ,YAAYlK,UAAU,2BAA2B0J,IAGpE,yBAAK1J,UAAU,gCACX,2BAAOkK,QAAQ,gBAAgBlK,UAAU,2BAAzC,iBACA,2BAAOkK,QAAQ,gBAAgBlK,UAAU,2BAA2B2J,MAUzEuC,OArIf,YAA8G,IAA/EC,EAA8E,EAA9EA,QAAS/H,EAAqE,EAArEA,UAAWgI,EAA0D,EAA1DA,gBAAiBhE,EAAyC,EAAzCA,MAAO5C,EAAkC,EAAlCA,UAAWyE,EAAuB,EAAvBA,oBAE1EI,EAAkEjC,EAAlEiC,WAAgBnC,EAAkDE,EAAtDhH,GAAagK,EAAyChD,EAAzCgD,SAAkBpB,EAAuB5B,EAA/BL,OAAqB8B,EAAUzB,EAAVyB,MAFyC,EAIvEpE,oBAAS,iBAAM,0BAJwD,mBAIlG4G,EAJkG,KAIvFC,EAJuF,KAMnGhI,EAAS,SAAAiI,GACRF,IAAcE,GAAKD,EAAaC,IAGjCC,EAAkB,uCAAG,WAAM5E,GAAN,iBAAArB,EAAA,6DACnBkG,EAAY7E,EAAMzC,OAAOF,MADN,SAEE4C,EAAaQ,aAAaH,EAASuE,GAFrC,QAEnBjG,EAFmB,SAGNA,EAAaC,QAC9BwD,EAAoB/B,EAASuE,IAE7BnK,QAAQoE,IAAI,0BACZlB,EAAU,CAAEb,MAAO,UAAWgC,QAAS,mCAPhB,2CAAH,sDAYxB,OACE,6BACE,kBAACzC,EAAA,EAAD,CAAOC,OAAQC,GACb,kBAACC,EAAA,EAAD,CAAaC,OAAQ8H,GACnB,kBAAC1L,EAAA,EAAD,iBAAoBwH,GACpB,kBAACxH,EAAA,EAAD,4BACA,kBAAC,EAAD,CAAcsJ,YAAaA,EAAaC,oBAAqBuC,KAE/D,kBAACjI,EAAA,EAAD,KACI,kBAACmI,EAAA,EAAD,CAAKC,MAAI,GAEP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAS3M,MAAO,CAAE4M,OAAQ,WAAa9M,UAAyB,yBAAdqM,EAAuC,SAAW,GAAI1M,QAAS,kBAAM2E,EAAO,0BAA9H,cAGF,kBAACsI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAS3M,MAAO,CAAE4M,OAAQ,WAAa9M,UAAyB,0BAAdqM,EAAwC,SAAW,GAAI1M,QAAS,kBAAM2E,EAAO,2BAA/H,oBAGF,kBAACsI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAS3M,MAAO,CAAE4M,OAAQ,WAAa9M,UAAyB,aAAdqM,EAA2B,SAAW,GAAI1M,QAAS,kBAAM2E,EAAO,cAAlH,aAKJ,kBAACyI,EAAA,EAAD,CAAYV,UAAWA,GAErB,kBAACW,EAAA,EAAD,CAASC,MAAM,wBACX,kBAAC,GAAD,CAAcpD,MAAOA,IACrB,6BACI,kBAAC,EAAD,CAA2BQ,WAAYA,KAE3C,kBAAC,GAAD,CAAcR,MAAOA,KAIzB,kBAACmD,EAAA,EAAD,CAASC,MAAM,yBACX,yBAAKjN,UAAU,QACX,kBAAC,GAAD,CAAcoL,SAAUA,MAKhC,kBAAC4B,EAAA,EAAD,CAASC,MAAM,YACb,kBAAClB,GAAD,CAAcC,KAAM5D,EAAM4D,UAMlC,kBAACvH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUhF,QAASwM,GAAjC,UAEU,QCvDtB,IAIee,GAJkBjC,2BAAiB,CAClDC,OAAS,2CADwBD,EA3BjC,YAA6E,IAAhDE,EAA+C,EAA/CA,OAAQgC,EAAuC,EAAvCA,UAAuC,IAA5BC,qBAA4B,MAAZ,aAAY,EACxE,OACE,yBAAKlN,MAAO,CAACmL,OAAQ,IAAKC,QAAS,EAAGC,SAAU,aAC9C,kBAAC,MAAD,CACEJ,OAAQA,EACRK,KAAM,GACNC,cAAe,CACbC,IAAK,UACLE,KAAM,YAINuB,EAAUjM,KAAI,SAAAkK,GAAQ,OACpB,kBAAC,SAAD,CACEjK,IAAKiK,EAAShK,GACdU,MAAO,+CACPkD,KAAM,OACNuG,SAAU,CAACG,IAAKN,EAASO,SAAUC,IAAKR,EAASS,WACjDlM,QAAS,kBAAMyN,EAAchC,EAAShK,eCUvCiM,OA3Bf,YAAuE,IAA/C9L,EAA8C,EAA9CA,SAAUyI,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,oBAC3C,OACE,yBAAKjK,UAAU,8BACb,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBoB,GAAG,sBACpC,uBAAGpB,UAAU,mBAGjB,2BACIsB,SAAUC,EACVC,KAAK,OACLxB,UAAU,eACVyB,YAAY,SACZC,mBAAiB,qBACjBC,UAAQ,IAEZ,yBAAK3B,UAAU,QACb,kBAAC,EAAD,CAAcgK,YAAaA,EAAaC,oBAAqBA,SCdvEqD,GAAkB,CAAElM,IAAI,EAAOqI,UAAU,EAAOC,OAAO,EAAOC,WAAW,EAAOC,WAAW,EAAOC,OAAO,EAAOC,SAAS,GA8LhHyD,OA5Lf,YAAmC,IAAd/H,EAAa,EAAbA,UAAa,EACJC,oBAAS,iBAAM,MADX,mBACzB6D,EADyB,KACjBkE,EADiB,OAEE/H,oBAAS,iBAAM,MAFjB,mBAEzBgI,EAFyB,KAEdC,EAFc,OAGUjI,oBAAS,iBAAO,CAAC4E,WAAY,GAAI8C,UAAW,OAHtD,mBAGzBQ,EAHyB,KAGVC,EAHU,OAIgCnI,oBAAS,kBAAM,KAJ/C,mBAIzBoI,EAJyB,KAICC,EAJD,OAKQrI,oBAAS,iBAAM,MALvB,mBAKzBsI,EALyB,KAKXC,EALW,KAO1BC,EAAuB,SAAA3E,GAC3B,OAAOA,EAAOpI,KAAI,oBACd8K,KAAQvC,EADM,EACNA,SAAUC,EADJ,EACIA,MAAOC,EADX,EACWA,UAAa5B,EADxB,EACwBA,OAAQ3G,EADhC,EACgCA,GAAIwI,EADpC,EACoCA,UADpC,MACqE,CAAExI,KAAI2G,SAAQ8B,MADnF,EAC+CA,MAA2CC,QAD1F,EACsDA,QAA6CF,YAAWH,WAAUC,QAAOC,iBAI7I3B,EAAS,uCAAG,gCAAAzB,EAAA,sEAEWsB,EAAaG,YAFxB,QAEVxB,EAFU,SAIGA,EAAaC,SACxB6C,EAAS9C,EAAa1D,SAC1B0K,EAAUlE,GACJmE,EAAYQ,EAAqB3E,GACvCoE,EAAaD,KAEfnL,QAAQoE,IAAI,wBAAyBF,GACrChB,EAAU,CAAEb,MAAO,UAAWgC,QAAS,2BAXzB,2CAAH,qDAkJf,OAlIAM,qBAAU,WACRe,MACC,IAiID,yBAAKhI,UAAU,aACb,kBAAC,GAAD,CAAmBmN,UAAW7D,EAAOpI,KAAI,SAAAkH,GAAK,OAAIA,EAAMgD,YAAWgC,cAVjD,SAACc,GACrB,IAAM9F,EAAQkB,EAAO6E,MAAK,SAAA/F,GAAK,OAAIA,EAAMgD,SAAShK,KAAO8M,KACtD9F,IACDwF,EAAiBxF,GACjB0F,GAA4B,OAO5B,kBAAC,GAAD,CACE1J,UAAWyJ,EACXzB,gBAjGkB,WACtB0B,GAA6BD,IAiGzB1B,QAtG8B,WAClC2B,GAA4B,IAsGxBtI,UAAWA,EACXyE,oBAhGsB,SAAC/B,EAASuE,GAEpC,IAAM2B,EAAY9E,EAAOpI,KAAI,SAAAkH,GAI3B,OAHGA,EAAMhH,KAAO8G,IACdE,EAAML,OAAS0E,GAEVrE,KAGToF,EAAUY,GAEV,IAAMC,EAAkBZ,EAAUvM,KAAI,SAAAoN,GACpC,GAAGA,EAAOlN,KAAO8G,EAAS,CACxBoG,EAAOvG,OAAS0E,EAChB,IAAMrE,EAAQkB,EAAO6E,MAAK,SAAA/F,GAAK,OAAIA,EAAMhH,KAAO8G,KAChD0F,EAAiBxF,GAEnB,OAAOkG,KAITZ,EAAaW,IA4ETjG,MAAOuF,IAET,6BACE,kBAAC,GAAD,CACEpM,SAnIgB,SAAAqG,GACtB,IAAM3C,EAAQ2C,EAAMzC,OAAOF,MACrBwI,EAAYQ,EAAqB3E,GACvC,GAAGrE,EAAO,CACN,IAAMsJ,EAAiBd,EAAUpH,QAAO,SAAA+B,GAEpC,IADA,IACA,MADab,OAAOC,KAAKY,GACzB,eAAqB,CAAjB,IACIX,EAAYW,EADT,MAEP,GAAGX,IACCA,EAAY,GAAKA,GACJC,SAASzC,GAClB,OAAO,MAKvByI,EAAaa,QAEfb,EAAaD,IAkHTzD,YAAa+D,EACb9D,oBA9Ee,SAAArC,GAErB,IAAMG,EAASH,EAAMzC,OAAOF,MAEtBwI,EAAYQ,EAAqB3E,GAEvC,IAAIvB,EAEF,OADAiG,EAAgB,IACTN,EAAaD,GAGtB,IAAMc,EAAiBd,EAAUpH,QAAO,SAAA+B,GAAK,OAAIA,EAAML,SAAWA,KAElEiG,EAAgBjG,GAChB2F,EAAaa,OAmEX,yBAAKvO,UAAU,kBACb,kBAAC,EAAD,CACIsJ,OAAQmE,EACRlE,WAnJa,SAAArB,GACrB,IAAME,EAAQkB,EAAO6E,MAAK,SAAA/F,GAAK,OAAIA,EAAMhH,KAAO8G,KAC7CE,IACDwF,EAAiBxF,GACjB0F,GAA4B,KAgJtB3E,cAnES,SAAAC,GAEjB,IAAMoF,EAAalB,GAAgBlE,GAE7BqF,EAAU,SAACC,EAAQC,GACvB,OAAGD,EAASC,EACH,EACED,EAASC,GACV,EAED,GAILlB,EAAYQ,EAAqB3E,GAEvCmE,EAAUmB,MAAK,SAACC,EAAQC,GAEtB,IAAIJ,EAASG,EAAOzF,GAChBuF,EAASG,EAAO1F,GAEpB,OAAGoF,EACMC,EAAQC,EAAQC,GAEhBF,EAAQE,EAAQD,MAK3BpB,GAAgBlE,IAASoF,EAEzB,IAAMJ,EAAS,YAAOX,GAEtBC,EAAaU,SCrGFW,OAnDf,YAA2C,IAAdvJ,EAAa,EAAbA,UAAa,EAELC,mBAAS,IAFJ,mBAErBI,GAFqB,aAGeJ,mBAAS,IAHxB,mBAG/BK,EAH+B,KAGXC,EAHW,OAIYN,oBAAU,GAJtB,mBAI/BE,EAJ+B,KAIZC,EAJY,OAKQH,mBAAS,IALjB,mBAKdW,GALc,WAOhCnD,EAAW,uCAAG,8BAAAsD,EAAA,sEAEW3D,EAAeK,cAF1B,QAEVuD,EAFU,QAIAC,SACNxF,EAAWuF,EAAa1D,SAC9B+C,EAAY5E,GACV8E,EAAsB9E,KAGxBqB,QAAQoE,IAAI,0BACZlB,EAAU,CAAEb,MAAO,UAAWgC,QAAS,iCAX3B,2CAAH,qDAgBjBM,qBAAU,WACNhE,MACD,IAEH,IAAMiE,EAAqB,SAAAzH,GACvB2G,EAAmB3G,GACnBmG,EAAqBnG,EAAQ2B,KAUjC,OACI,yBAAKpB,UAAU,wBAPR8F,EAAmB5E,KAAI,SAAAzB,GAC1B,IAAMC,EAAWD,EAAQ2B,KAAOuE,EAAoB,WAAa,GACjE,OAAO,kBAAC,EAAD,CAAaxE,IAAK1B,EAAQ2B,GAAI3B,QAASA,EAASE,QAASuH,EAAoBxH,SAAUA,SCwB3FsP,OA1Df,SAAuBpO,GAAQ,IAAD,EAEQ6E,mBAAS,sBAFjB,mBAEnB4G,EAFmB,KAERC,EAFQ,KAIpBhI,EAAS,SAAAiI,GACRF,IAAcE,GAAKD,EAAaC,IA6BzC,OACE,yBAAKvM,UAAU,gCAEb,kBAAC0M,EAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAS3M,MAAO,CAAC4M,OAAQ,WAAY9M,UAA0B,uBAAdqM,EAAqC,SAAW,GAAK1M,QAAS,WAAQ2E,EAAO,wBAA9H,0BAGE1D,EAAMqO,gBAAsC,UAApBrO,EAAMoL,KAAKkD,MAhCnC,oCACI,kBAACtC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAS3M,MAAO,CAAC4M,OAAQ,WAAY9M,UAA0B,YAAdqM,EAA0B,SAAW,GAAK1M,QAAS,WAAQ2E,EAAO,aAAnH,cAEJ,kBAACsI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAS3M,MAAO,CAAC4M,OAAQ,WAAY9M,UAA0B,WAAdqM,EAAyB,SAAW,GAAK1M,QAAS,WAAQ2E,EAAO,YAAlH,cA8Bd,kBAACyI,EAAA,EAAD,CAAYV,UAAWA,GACrB,kBAACW,EAAA,EAAD,CAASC,MAAM,sBACb,kBAAC,GAAD,CAAmBzH,UAAW5E,EAAM4E,aAGlC5E,EAAMqO,gBAAsC,UAApBrO,EAAMoL,KAAKkD,MA3BnC,oCACI,kBAAClC,EAAA,EAAD,CAASC,MAAM,WACX,kBAAC,EAAD,CAAazH,UAAW5E,EAAM4E,aAElC,kBAACwH,EAAA,EAAD,CAASC,MAAM,UACX,kBAAC,GAAD,CAAWzH,UAAW5E,EAAM4E,iB,oBCWjC2J,OApCf,YAAwE,IAAtDC,EAAqD,EAArDA,cAAeC,EAAsC,EAAtCA,cAAeJ,EAAuB,EAAvBA,eAAgBjD,EAAO,EAAPA,KAC9D,OACE,yBAAKhM,UAAU,UACb,kBAACsP,GAAA,EAAD,CAAQ3K,MAAM,QAAQ4K,OAAK,EAACC,OAAO,MACjC,kBAACC,GAAA,EAAD,CAAaC,KAAK,KACd,0BAAMxP,MAAO,CAACyE,MAAO,YAArB,eAEJ,kBAAC+H,EAAA,EAAD,CAAK1M,UAAU,UAAU2P,QAAM,IAY3BV,EACM,6BACI,0BAAMjP,UAAU,QAAQgM,EAAKhH,MAC7B,kBAACN,EAAA,EAAD,CAAQkL,SAAO,EAAC9N,MAAM,QAAQnC,QAAS0P,EAAerP,UAAU,QAAO,uBAAGA,UAAU,0BAGxF,6BACI,kBAAC0E,EAAA,EAAD,CAAQkL,SAAO,EAAC9N,MAAM,SAASnC,QAASyP,EAAepP,UAAU,QAAO,uBAAGA,UAAU,4B,OCvB5F6P,OAXf,WACE,OACE,4BAAQ7P,UAAU,UAChB,yBAAKA,UAAU,qCAAf,uBAEE,uBAAG0P,KAAK,KAAR,sB,wCCLF/M,GAAWT,EAAWE,UAyGb0N,GAvGK,CAChBhI,sBADgB,SACMvF,GAElB,IAAIoE,EAAUpE,EAAMoE,QAYpB,OAVGA,EAAQe,SAAS,SAChBf,EAAU,qFAGO,CACjBF,SAAS,EACTsB,OAAQ,QACRpB,QAASA,IAKjB9D,eAjBgB,SAiBDC,GACX,GAAGA,GAAYA,EAASC,KAIpB,OAF2BD,EAASC,MAMtCgN,SA1BU,SA0BD/D,GAAO,IAAD,mJAGU9I,IAAMU,KAAN,UAAcjB,GAAd,iBAAuCqJ,GAHjD,cAGPlJ,EAHO,OAKP0D,EAAe,EAAK3D,eAAeC,GAL5B,kBAON0D,GAPM,yDAWN,EAAKsB,sBAAL,OAXM,4DAgBfkI,MA1CU,SA0CJhE,GAAO,IAAD,mJAGa9I,IAAMU,KAAN,UAAcjB,GAAd,cAAoCqJ,GAHjD,cAGJlJ,EAHI,OAKJ0D,EAAe,EAAK3D,eAAeC,GAL/B,kBAOH0D,GAPG,yDAWH,EAAKsB,sBAAL,OAXG,4DAgBZmI,eA1DU,SA0DK3M,GAAQ,IAAD,4IAIdG,EAAU,CACZC,cAAc,UAAD,OAAYJ,IALT,SAQGJ,IAAMC,IAAN,UAAaR,GAAb,qBAAkCW,GAASG,GAR9C,cAQdX,EARc,OAUd0D,EAAe,EAAK3D,eAAeC,GAVrB,kBAYb0D,GAZa,yDAgBb,EAAKsB,sBAAL,OAhBa,4DAqBtBoI,OA/EU,SA+EH5M,GAAQ,IAAD,4IAING,EAAU,CACZC,cAAc,UAAD,OAAYJ,IALjB,SAQWJ,IAAMC,IAAN,UAAaR,GAAb,qBAAkCW,GAASG,GARtD,cAQNX,EARM,OAUN0D,EAAe,EAAK3D,eAAeC,GAV7B,kBAYL0D,GAZK,yDAgBL,EAAKsB,sBAAL,OAhBK,6D,gBCtETqI,OATf,SAAgBvP,GACZ,OACI,yBAAKZ,UAAU,UACX,kBAACoQ,GAAA,EAAD,CAASzL,MAAM,QAASzE,MAAO,CAAEC,MAAO,OAAQkL,OAAQ,UACxD,0BAAMnL,MAAO,CAACyE,MAAO,SAArB,gBC6HG0L,OA1Hf,YAA4C,IAAD,IAAtBC,eAAsB,MAAZ,aAAY,IAEb7K,mBAAS,CAC/BgE,UAAU,EACV8G,UAAU,IAJyB,mBAEhCC,EAFgC,KAEzBC,EAFyB,OAOPhL,mBAAS,IAPF,mBAOhCgE,EAPgC,KAOtBiH,EAPsB,OAQPjL,mBAAS,IARF,mBAQhC8K,EARgC,KAQtBI,EARsB,OAUTlL,oBAAS,GAVA,mBAUhCmL,EAVgC,KAUvBC,EAVuB,KAYjCb,EAAK,uCAAG,WAAM9K,GAAN,iBAAAqB,EAAA,6DACVrB,EAAE4L,iBAEI9E,EAAO,CACTvC,WACA8G,YAGJM,GAAW,GARD,SAUiBf,GAAYE,MAAMhE,GAVnC,OAUJxF,EAVI,OAYVuK,YAAW,WACPF,GAAW,GACXP,EAAQ9J,KACT,KAfO,2CAAH,sDA6CLwK,EAAiB,SAAC5H,GAEpB,IAAIoH,EAAMpH,GAAO,CACb,IAAM6H,EAAQ,eAAOT,GACrBS,EAAS7H,IAAQ,EACjBqH,EAASQ,KAKXC,IAAoBzH,EACpB0H,IAAoBZ,GAAYA,EAASa,OAAS,EAMxD,OAEI,kBAACC,GAAA,EAAD,CAAMrR,UAAU,8BAER4Q,GAAW,kBAAC,GAAD,MAEf,kBAACU,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAClM,EAAA,EAAD,CAAOC,IAAI,YAAX,WACA,kBAACP,EAAA,EAAD,CACIyM,MAAOhB,EAAM/G,UAAYyH,EACzBO,QAASjB,EAAM/G,WAAayH,EAC5B1P,KAAK,OACLwD,KAAK,WACL5D,GAAG,WACH6D,MAAOwE,EACPnI,SAzDU,SAAA4D,GAE1B8L,EAAe,YAEf,IAEMvH,EAFQvE,EAAEC,OAEOF,MAEvByL,EAAYjH,MAoDI+G,EAAM/G,UAAY,kBAACiI,GAAA,EAAD,wDAI9B,kBAACJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAClM,EAAA,EAAD,CAAOC,IAAI,YAAX,iBACA,kBAACP,EAAA,EAAD,CACIyM,MAAOhB,EAAMD,UAAYY,EACzBM,QAASjB,EAAMD,WAAaY,EAC5B3P,KAAK,WACLwD,KAAK,WACL5D,GAAG,kBACHK,YAAY,WACZwD,MAAOsL,EACPjP,SA/DU,SAAA4D,GAE1B8L,EAAe,YAEf,IAEMT,EAFQrL,EAAEC,OAEOF,MAEvB0L,EAAYJ,MA0DIC,EAAMD,UAAY,kBAACmB,GAAA,EAAD,iEAK9B,kBAAChN,EAAA,EAAD,CAAQ7C,WA7CLqP,GAAmBC,GA6CYxR,QAASqQ,GAA3C,Y,oBCgKG2B,OAnRf,YAAgD,IAAD,IAAxBC,kBAAwB,MAAX,aAAW,IAEjBnM,mBAAS,CAC/BgE,UAAU,EACVC,OAAO,EACP6G,UAAU,EACVvL,MAAM,EACN2E,WAAW,IAP4B,mBAEpC6G,EAFoC,KAE7BC,EAF6B,OAUXhL,mBAAS,IAVE,mBAUpCgE,EAVoC,KAU1BiH,EAV0B,OAWjBjL,mBAAS,IAXQ,mBAWpCiE,EAXoC,KAW7BmI,EAX6B,OAYXpM,mBAAS,IAZE,mBAYpC8K,EAZoC,KAY1BI,EAZ0B,OAanBlL,mBAAS,IAbU,mBAapCT,EAboC,KAa9B8M,EAb8B,OAcXrM,mBAAS,IAdE,mBAcpCwG,EAdoC,KAc1B8F,EAd0B,OAeTtM,mBAAS,IAfA,mBAepCkE,EAfoC,KAezBqI,EAfyB,OAiBbvM,oBAAS,GAjBI,mBAiBpCmL,EAjBoC,KAiB3BC,EAjB2B,KAmBrCd,EAAQ,uCAAG,WAAM7K,GAAN,iBAAAqB,EAAA,6DACbrB,EAAE4L,iBAEI9E,EAAO,CACThH,OACAyE,WACAC,QACA6G,WACAtE,WACAtC,aAGJkH,GAAW,GAZE,SAcUf,GAAYC,SAAS/D,GAd/B,QAcPlJ,EAdO,SAgBEA,EAASQ,OACpBC,aAAa0O,QAAQ,8BAA+BnP,EAASQ,OAGjE4O,IAEAnB,YAAW,WACPF,GAAW,GACXe,EAAW9O,KACZ,KAzBU,2CAAH,sDA6BRoP,EAAY,WAEdxB,EAAY,IACZmB,EAAS,IACTlB,EAAY,IACZmB,EAAQ,IACRC,EAAY,IACZC,EAAa,IAEbvB,EAAS,CACLhH,UAAU,EACVC,OAAO,EACP6G,UAAU,EACVvL,MAAM,EACN2E,WAAW,KAuEbqH,EAAiB,SAAC5H,GAEpB,IAAIoH,EAAMpH,GAAO,CACb,IAAM6H,EAAQ,eAAOT,GACrBS,EAAS7H,IAAQ,EACjBqH,EAASQ,KAKXkB,IAAiBzI,GAAS0I,KAAUC,QAAQ3I,GAC5CwH,IAAoBzH,EACpB6I,IAAgBtN,EAChBmM,IAAoBZ,GAAYA,EAASa,OAAS,EAClDmB,IAAqB5I,GAAkC,KAArBA,EAAUyH,OAMlD,OAEI,kBAACC,GAAA,EAAD,CAAMrR,UAAU,8BAER4Q,GAAW,kBAAC,GAAD,MAEf,kBAACU,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAClM,EAAA,EAAD,CAAOC,IAAI,qBAAX,WACA,kBAACP,EAAA,EAAD,CACIyM,MAAOhB,EAAM/G,UAAYyH,EACzBO,QAASjB,EAAM/G,WAAayH,EAC5B1P,KAAK,OACLwD,KAAK,oBACL5D,GAAG,oBACHO,UAAQ,EACRsD,MAAOwE,EACPnI,SAvGU,SAAA4D,GAE1B8L,EAAe,YAEf,IAEMvH,EAFQvE,EAAEC,OAEOF,MAEvByL,EAAYjH,MAkGI+G,EAAM/G,UAAY,kBAACiI,GAAA,EAAD,wDAI9B,kBAACJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAClM,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACP,EAAA,EAAD,CACIyM,MAAOhB,EAAM9G,OAASyI,EACtBV,QAASjB,EAAM9G,QAAUyI,EACzB3Q,KAAK,QACLwD,KAAK,QACL5D,GAAG,eACHK,YAAY,sBACZE,UAAQ,EACRsD,MAAOyE,EACPpI,SA9GO,SAAA4D,GAEvB8L,EAAe,SAEf,IAEMtH,EAFQxE,EAAEC,OAEIF,MAEpB4M,EAASnI,MAyGO8G,EAAM9G,OAAS,kBAACgI,GAAA,EAAD,wCAI3B,kBAACJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAClM,EAAA,EAAD,CAAOC,IAAI,YAAX,iBACA,kBAACP,EAAA,EAAD,CACIyM,MAAOhB,EAAMD,UAAYY,EACzBM,QAASjB,EAAMD,WAAaY,EAC5B3P,KAAK,WACLwD,KAAK,WACL5D,GAAG,WACHK,YAAY,WACZwD,MAAOsL,EACPjP,SApHU,SAAA4D,GAE1B8L,EAAe,YAEf,IAEMT,EAFQrL,EAAEC,OAEOF,MAEvB0L,EAAYJ,IA6GI5O,UAAQ,IAGR6O,EAAMD,UAAY,kBAACmB,GAAA,EAAD,iEAK9B,kBAACJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAClM,EAAA,EAAD,CAAOC,IAAI,QAAX,UACA,kBAACP,EAAA,EAAD,CACIyM,MAAOhB,EAAMxL,MAAQsN,EACrBb,QAASjB,EAAMxL,OAASsN,EACxB9Q,KAAK,OACLwD,KAAK,OACL5D,GAAG,OACH6D,MAAOD,EACP1D,SA3HM,SAAA4D,GAEtB8L,EAAe,QAEf,IAEMhM,EAFQE,EAAEC,OAEGF,MAEnB6M,EAAQ9M,IAoHQrD,UAAQ,IAGR6O,EAAMxL,MAAQ,kBAAC0M,GAAA,EAAD,6CAK1B,kBAACJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAClM,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACP,EAAA,EAAD,CACIvD,KAAK,OACLwD,KAAK,WACL5D,GAAG,WACH6D,MAAOgH,EACP3K,SAjIU,SAAA4D,GAC1B,IAEM+G,EAFQ/G,EAAEC,OAEOF,MAEvB8M,EAAY9F,IA6HItK,UAAQ,MAKpB,kBAAC2P,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAClM,EAAA,EAAD,CAAOC,IAAI,aAAX,eACA,kBAACP,EAAA,EAAD,CACIyM,MAAOhB,EAAM7G,WAAa4I,EAC1Bd,QAASjB,EAAM7G,YAAc4I,EAC7B/Q,KAAK,SACLwD,KAAK,YACL5D,GAAG,YACH6D,MAAO0E,EACPrI,SAzIW,SAAA4D,GAE3B8L,EAAe,aAEf,IAEMrH,EAFQzE,EAAEC,OAEQF,MAExB+M,EAAarI,IAkIGlI,YAAY,aACZE,UAAQ,IAGR6O,EAAMxL,MAAQ,kBAAC0M,GAAA,EAAD,8CAK1B,kBAAChN,EAAA,EAAD,CAAQ7C,WAvHLsQ,GAAgBjB,GAAmBoB,GAAenB,GAAmBoB,GAuHtC5S,QAASoQ,GAA3C,iB,OCnLGyC,OAzFf,SAA0B5R,GAAQ,IAAD,EAEG6E,mBAAS,SAFZ,mBAExB4G,EAFwB,KAEbC,EAFa,KAIzBhI,EAAS,SAACiI,GACVF,IAAcE,GAAKD,EAAaC,IAGlCkG,EAAiB,OACjBC,EAAoB,OAyCxB,MAvCiB,UAAdrG,EACDoG,EAAiB7R,EAAM+D,MACD,aAAd0H,IACRqG,EAAoB9R,EAAM+D,OAqC1B,yBAAK3E,UAAU,oBACb,kBAACkE,EAAA,EAAD,CAAOC,OAAQvD,EAAMwD,WACnB,kBAACC,EAAA,EAAD,CAAaC,OAAQ1D,EAAM0D,QAA3B,UACA,kBAACC,EAAA,EAAD,KACE,kBAACmI,EAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE3M,MAAO,CAAE4M,OAAQ,WACjB9M,UAA0B,UAAdqM,EAAwB,SAAW,GAC/C1M,QAAS,WAAQ2E,EAAO,WAH1B,UAKS,uBAAGtE,UAAU,cAAcE,MAAO,CAACyE,MAAO8N,OAGrD,kBAAC7F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE3M,MAAO,CAAE4M,OAAQ,WACjB9M,UAA0B,aAAdqM,EAA2B,SAAW,GAClD1M,QAAS,WAAQ2E,EAAO,cAH1B,eAKc,uBAAGtE,UAAU,qBAAqBE,MAAO,CAACyE,MAAO+N,QAInE,kBAAC3F,EAAA,EAAD,CAAYV,UAAWA,GACrB,kBAACW,EAAA,EAAD,CAASC,MAAM,SACb,kBAAC,GAAD,CAAWqD,QA9CP,SAAC9J,GAMb,GAJEA,EAEMA,IAAiBA,EAAaC,SACtC7F,EAAM4E,UAAU,CAAEb,MAAO,UAAWgC,QAASH,EAAaG,UAF1D/F,EAAM4E,UAAU,CAAEb,MAAO,UAAWgC,QAAS,mDAG1CH,GAAgBA,EAAaC,SAAWD,EAAa1D,SAAU,CAChE,IAAMA,EAAW0D,EAAa1D,SAC3BA,EAASQ,QACRC,aAAa0O,QAAQ,8BAAgCnP,EAASQ,OAC9D1C,EAAM0D,SACN1D,EAAM0P,QAAQxN,EAASkJ,YAG7BpL,EAAM4E,UAAU,CAAEb,MAAO,UAAWgC,QAAS,oDAgCRhC,MAAO/D,EAAM+D,SAE5C,kBAACqI,EAAA,EAAD,CAASC,MAAM,YACb,kBAAC,GAAD,CAAc2E,WA/DP,SAACpL,GAEdA,EAEMA,IAAiBA,EAAaC,SACtC7F,EAAM4E,UAAU,CAAEb,MAAO,UAAWgC,QAASH,EAAaG,UAF1D/F,EAAM4E,UAAU,CAAEb,MAAO,UAAWgC,QAAS,oDAG1CH,GAAgBA,EAAaC,QAChC6F,EAAa,SAEb1L,EAAM4E,UAAU,CAAEb,MAAO,UAAWgC,QAAS,qDAsDChC,MAAO/D,EAAM+D,c,UChFlDgO,OATf,SAAoB/R,GAChB,OACI,yBAAKZ,UAAU,UACX,kBAACoQ,GAAA,EAAD,CAAS5O,KAAK,OAAOmD,MAAM,OAAQzE,MAAO,CAAEC,MAAO,OAAQkL,OAAQ,UACnE,0BAAMnL,MAAO,CAACyE,MAAO,SAArB,gB,kBC4IZ,SAASiO,KACP,OACE,+DAMWC,OA3If,WAAgB,IAAD,EAE2CpN,oBAAS,GAFpD,mBAENqN,EAFM,KAEgBC,EAFhB,OAG2BtN,oBAAS,GAHpC,mBAGNuN,EAHM,KAGQC,EAHR,OAI2BxN,mBAAS,cAJpC,mBAINyN,EAJM,KAIQC,EAJR,OAKuB1N,mBAAS,QALhC,mBAKN2N,EALM,KAKMC,EALN,OAMuB5N,oBAAS,GANhC,mBAMN6N,EANM,KAMMC,EANN,OAO+B9N,oBAAS,GAPxC,mBAONwJ,EAPM,KAOUuE,EAPV,OAQW/N,mBAAS,IARpB,mBAQNuG,EARM,KAQAyH,EARA,KAUbxM,qBAAU,WAER,IAAM3D,EAAQC,aAAaC,QAAQ,+BAyB/ByL,GAvBS,uCAAG,8BAAA1I,EAAA,0DACXjD,EADW,gCAEewM,GAAYG,eAAe3M,GAF1C,QAENkD,EAFM,SAIOA,EAAa1D,UACxBkJ,EAAOxF,EAAa1D,SACvB0D,EAAaC,UACdgN,EAAQzH,GACRwH,GAAkB,KAGpBA,GAAkB,GAEpBzC,YAAW,WAAQwC,GAAc,KAAW,KAbhC,uBAgBZC,GAAkB,GAClBzC,YAAW,WAAQwC,GAAc,KAAW,KAC5CC,GAAkB,GAlBN,4CAAH,oDAwBXE,KAGD,CAACzE,IAEJ,IAIMzJ,EAAY,SAAC,GAAwB,IAAtBb,EAAqB,EAArBA,MAAOgC,EAAc,EAAdA,QAC1B0M,EAAc1O,GACdwO,EAAgBxM,GAChBsM,GAAgB,GAEhBlC,YAAW,WACTsC,EAAc,QACdJ,GAAgB,GAChBE,EAAgB,MACf,MAmCL,OAAGG,EAEC,kBAAC,GAAD,MAIA,kBAAC,KAAD,KACE,yBAAKtT,UAAU,OAEb,yBAAKA,UAAU,kBACb,kBAAC2T,GAAA,EAAD,CAAOhP,MAAOyO,EAAYjP,OAAQ6O,EAAc1O,OA1CnC,WACrB2O,GAAgB,KA0CHC,IAIP,kBAAC,GAAD,CACEjE,eAAgBA,EAChBjD,KAAMA,EACNoD,cAAe,kBAAM2D,GAAwB,IAC7C1D,cA/CY,WAEpBkE,GAAc,GAEd,IAAMjQ,EAAQC,aAAaC,QAAQ,+BAEnCsM,GAAYI,OAAO5M,GAEnBC,aAAaqQ,WAAW,+BAExBH,EAAQ,IACRD,GAAkB,GAElBzC,YAAW,WAAQwC,GAAc,KAAW,MAmCpC5O,MAjHM,YAqHNmO,GAAwB,kBAAC,GAAD,CAAkB1O,UAAW0O,EAAsBxO,OAxEtD,WAC7ByO,GAAyBD,IAuE0FnO,MArHrG,UAqHuHa,UAAWA,EAAW8K,QAnC7I,SAACtE,GAEfuH,GAAc,GAEdE,EAAQzH,GACRwH,GAAkB,GAElBzC,YAAW,WAAQwC,GAAc,KAAW,QA+BtC,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAM,kBAAC,GAAD,CAAevO,UAAWA,EAAWb,MAzHtE,UAyHwFsK,eAAgBA,EAAgBjD,KAAMA,OACpI,kBAAC,KAAD,CAAO+H,UAAWnB,MAGpB,kBAAC,GAAD,CAAQjO,MA7HA,eCLEqP,QACW,cAA7B5M,OAAOgE,SAAS6I,UAEe,UAA7B7M,OAAOgE,SAAS6I,UAEhB7M,OAAOgE,SAAS6I,SAASC,MACvB,2D,OCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvS,GACLD,QAAQC,MAAMA,EAAMoE,a","file":"static/js/main.0c7ec921.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\r\n  \r\nimport './ProductCard.css';\r\n\r\nfunction ProductCard({ product, selected, onClick }) {\r\n\r\n    const { imageUrl, description, category, price } = product;\r\n\r\n    return (\r\n        <div className={`ProductCard m-1 p-2 ${selected}`} onClick={() => onClick(product)}>\r\n            <Card style={{ width: '18rem' }}>\r\n                <CardImg top width=\"100%\" src={imageUrl} alt={description} />\r\n                <CardBody>\r\n                    <CardTitle className=\"text-muted font-italic\">{category}</CardTitle>\r\n                    <CardText>\r\n                        {\r\n                            description\r\n                        }\r\n                    </CardText>\r\n                    <CardText className=\"font-weight-bold text-success\">\r\n                        {\r\n                            `RD$${price}`\r\n                        }\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard;","import React from \"react\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nfunction ProductTable(props) {\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Categoría</th>\r\n          <th>Descripción</th>\r\n          <th>Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.products.map(product => ( \r\n            <tr key={product.id} onClick={() => props.onClick(product)}>\r\n              <td>{product.id}</td>\r\n              <td>{product.category}</td>\r\n              <td>{product.description}</td>\r\n              <td>{product.price}</td>\r\n            </tr>\r\n          ))\r\n        }\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default ProductTable;\r\n","import React from \"react\";\r\n\r\nimport './Toolbar.css';\r\n\r\nfunction Toolbar(props) {\r\n  return (\r\n    <div className=\"Toolbar p-2 border rounded\">\r\n      <div className=\"searchInputContainer p-1\">\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\" id=\"inputGroupPrepend2\">\r\n                <i className=\"fa fa-search\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n                onChange={props.onSearch}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Buscar\"\r\n                aria-describedby=\"inputGroupPrepend2\"\r\n                required\r\n            />\r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"actionButtonsContainer p-1\">\r\n        <button onClick={props.onEditClick} disabled={props.disabled} className=\"btn btn-secondary mr-1\" title=\"Editar Producto\">\r\n          <i className=\"fa fa-pencil\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onAddClick} className=\"btn btn-info mr-1\" title=\"Agregar Product\">\r\n          <i className=\"fa fa-plus\"></i>\r\n        </button>\r\n\r\n        <button onClick={props.onDeleteClick} disabled={props.disabled} className=\"btn btn-danger\" title=\"Borrar Product\">\r\n          <i className=\"fa fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toolbar;","\r\nconst ENVIRONMENTS = {\r\n    DEV: 'dev',\r\n    QA: 'qa',\r\n    PROD: 'prod'\r\n};\r\n\r\nconst STATUS = {\r\n    SUCCESS: 'SUCCESS',\r\n    ERROR: 'ERROR'\r\n};\r\n\r\nconst Deliverypp = {\r\n    env: ENVIRONMENTS.DEV,\r\n    getPath() {\r\n        switch(this.env) {\r\n            case ENVIRONMENTS.DEV:\r\n                return 'http://localhost:8080';\r\n            case ENVIRONMENTS.QA:\r\n            case ENVIRONMENTS.PROD:\r\n                return 'http://localhost:8080'\r\n            default:\r\n                console.error('Wrong operation.');\r\n                break;\r\n        }\r\n    },\r\n    STATUS\r\n};\r\n\r\nexport default  Deliverypp;","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst ProductService = {\r\n    async handleResponse(response) {\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getProducts() {\r\n\r\n        const response = await axios.get(`${basePath}/api/products`);\r\n\r\n        return this.handleResponse(response);\r\n\r\n    },\r\n    \r\n    async getProductById(productId) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.get(`${basePath}/api/products/${productId}`, { headers });\r\n\r\n        return this.handleResponse(response);\r\n    \r\n    },\r\n    \r\n    async addProduct(product) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.post(`${basePath}/api/products`, product, { headers });\r\n\r\n        return this.handleResponse(response);\r\n\r\n    },\r\n    async updateProduct(product) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.put(`${basePath}/api/products`, product, { headers });\r\n\r\n        return this.handleResponse(response);\r\n\r\n    },\r\n    async deleteProductById(productId) {\r\n\r\n        const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        const response = await axios.delete(`${basePath}/api/products/${productId}`, { headers });\r\n\r\n        return this.handleResponse(response);\r\n\r\n\r\n    }\r\n};\r\n\r\nexport default ProductService;","import React from 'react';\r\n\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nfunction DModal(props) {\r\n    return (\r\n        <div>\r\n        <Modal isOpen={props.showModal}>\r\n            <ModalHeader toggle={props.toggle}>{props.title}</ModalHeader>\r\n            <ModalBody>\r\n                {\r\n                    props.children\r\n                }\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"success\" onClick={props.onSave}>Guardar</Button>{' '}\r\n            <Button color=\"secondary\" onClick={props.onCancel}>Cancelar</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DModal;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductTable from \"./ProductTable\";\r\n\r\nimport \"./ProductView.css\";\r\n\r\nimport Toolbar from '../../common/Toolbar';\r\n\r\nimport ProductService from '../../../services/ProductService';\r\n\r\nimport Modal from '../../common/Modal';\r\n\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Input, Label\r\n  } from 'reactstrap';\r\n\r\n\r\nfunction ProductView({ showAlert }) {\r\n  const [cardView, setCardView] = useState(true);\r\n  const [selectedProductId, setSelectedProductId] = useState(-1);\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [filterableProducts, setFilterableProducts] = useState([]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [action, setAction] = useState('add');\r\n\r\n  const [selectedProduct, setSelectedProduct] = useState({description: '', price: 0, imageUrl: '', category: ''});\r\n\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const getProducts = async () => {\r\n\r\n    const responseData = await ProductService.getProducts();\r\n    if(responseData && responseData.success) {\r\n      const products = responseData.response;\r\n      setProducts(products);\r\n        setFilterableProducts(products);\r\n        \r\n    } else {\r\n      console.log('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error obteniendo productos.'});\r\n    }\r\n\r\n  };\r\n\r\n  const createProduct = async () => {\r\n\r\n    const responseData = await ProductService.addProduct(selectedProduct);\r\n\r\n    if(responseData && responseData.success) {\r\n\r\n      const newProduct = responseData.response;\r\n\r\n      const newProducts = [newProduct, ...products];\r\n\r\n      setProducts(newProducts);\r\n      filterProducts(newProducts, filter);\r\n      showAlert({ color: 'success', message: 'Producto agregado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.log('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error agregando producto.'});\r\n    }\r\n    \r\n  };\r\n  const updateProduct = async () => {\r\n\r\n    const responseData = await ProductService.updateProduct(selectedProduct);\r\n\r\n    if(responseData && responseData.success) {\r\n\r\n      const newProduct = responseData.response;\r\n\r\n      const newProducts = [...products];\r\n\r\n      newProducts.forEach(product => {\r\n        if(product.id === newProduct.id) {\r\n          product.description = newProduct.description;\r\n          product.price = newProduct.price;\r\n          product.category = newProduct.category;\r\n          product.imageUrl = newProduct.imageUrl;\r\n          return false;\r\n        }\r\n      });\r\n\r\n      setProducts(newProducts);\r\n      filterProducts(newProducts, filter);\r\n      showAlert({ color: 'success', message: 'Producto agregado.'});\r\n      setShowModal(false);\r\n    } else {\r\n      console.log('Error getting products')\r\n      showAlert({ color: 'warning', message: 'Error agregando producto.'});\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    getProducts();\r\n\r\n  }, []);\r\n\r\n  const onProductCardClick = product => {\r\n    setSelectedProduct(product);\r\n    setSelectedProductId(product.id);\r\n  };\r\n\r\n  const getProductCards = () => {\r\n    return filterableProducts.map(product => {\r\n        const selected = product.id === selectedProductId ? 'selected' : '';\r\n        return <ProductCard key={product.id} product={product} onClick={onProductCardClick} selected={selected} />;\r\n    });\r\n  };\r\n\r\n  const getProductTable = () => {\r\n    return <ProductTable products={filterableProducts} />;\r\n  };\r\n\r\n  const showEditProductForm = () => {\r\n\r\n    setAction('edit');\r\n\r\n    setShowModal(true);\r\n\r\n  }\r\n\r\n  const showAddProductForm = () => {\r\n\r\n    setAction('add');\r\n    setSelectedProduct({description: '', price: 0, imageUrl: '', category: ''});\r\n    setShowModal(true);\r\n\r\n  }\r\n\r\n  const handleDeleteProduct = async () => {\r\n\r\n    const deleteProductConfirm = window.confirm('Seguro quiere borrar el producto seleccionado?');\r\n\r\n    if(deleteProductConfirm) {\r\n\r\n      const responseData = await ProductService.deleteProductById(selectedProductId);\r\n\r\n      if(responseData && responseData.success) {\r\n        showAlert({ color: 'success', message: 'Producto eliminado.'});\r\n        const filteredProducts = products.filter(product => product.id !== selectedProductId);\r\n        setProducts(filteredProducts);\r\n        filterProducts(filteredProducts, filter);\r\n      } else {\r\n        console.log('Error deleting product.')\r\n        showAlert({ color: 'warning', message: 'Error eliminando producto.'});\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const filterProducts = (products, value) => {\r\n    if(value) {\r\n\r\n      const filteredProducts = products.filter(product => {\r\n\r\n          const keys = Object.keys(product);\r\n\r\n          for(let key of keys) {\r\n\r\n              if(key === 'category' || key === 'price' || key === 'description') {\r\n                  let propValue = product[key];\r\n                  if(propValue) {\r\n                      propValue = '' + propValue;\r\n                      if(propValue.includes(value)) {\r\n                          return true;\r\n                      }\r\n                  }\r\n              }\r\n              \r\n          }\r\n\r\n          return false;\r\n\r\n      });\r\n      setFilterableProducts(filteredProducts);\r\n\r\n  } else {\r\n      setFilterableProducts(products);\r\n  }\r\n  }\r\n\r\n  const handleSearch = (event) => {\r\n\r\n    const value = event.target.value;\r\n\r\n    setFilter(value);\r\n    filterProducts(products, value);\r\n\r\n  }\r\n\r\n  const onSave = () => {\r\n\r\n    switch(action) {\r\n      case 'add':\r\n        createProduct();\r\n        break;\r\n      case 'edit':\r\n        updateProduct();\r\n        break;\r\n      default:\r\n        console.error('Wrong operation.');\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setShowModal(false);\r\n  }\r\n\r\n  const toggle = () => {\r\n    setShowModal(!showModal);\r\n  }\r\n\r\n  const getActionDescription = () => {\r\n      switch(action) {\r\n        case 'add':\r\n            return 'Agregar un producto';\r\n        case 'edit':\r\n            return 'Editar un producto';\r\n        default:\r\n          console.error('Wrong operation.');\r\n          break;\r\n      }\r\n  }\r\n\r\n  const onProductUpdate = product => {\r\n\r\n    setSelectedProduct(product);\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"ProductView\">\r\n    <Modal\r\n        onSave={onSave}\r\n        onCancel={onCancel}\r\n        showModal={showModal}\r\n        toggle={toggle}\r\n        title={getActionDescription()}\r\n    >\r\n        <ProductActionForm imageUrl={'product.png'} onProductUpdate={onProductUpdate} product={selectedProduct} />\r\n    </Modal>\r\n\r\n      {false && (\r\n        <div>\r\n          <button className=\"btn btn-primary\" onClick={() => setCardView(true)}>\r\n            Card View\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setCardView(false)}\r\n          >\r\n            Card Table\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n        <Toolbar\r\n            onSearch={handleSearch}\r\n            onEditClick={showEditProductForm}\r\n            onAddClick={showAddProductForm}\r\n            onDeleteClick={handleDeleteProduct}\r\n            disabled={selectedProductId === -1}\r\n        />\r\n\r\n      <div>\r\n        {cardView ? (\r\n          <div className=\"ProductCardContainer\">{getProductCards()}</div>\r\n        ) : (\r\n          <div className=\"ProductTableContainer\">{getProductTable()}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductActionForm(props) {\r\n\r\n\r\n    const onImageUrlChange = (e) => {\r\n\r\n        let value = e.target.value;\r\n\r\n        if(!value) {\r\n            value = 'product.png';\r\n        }\r\n\r\n        const product = {...props.product};\r\n\r\n        product.imageUrl = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.category = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onDescriptionChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.description = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const onPriceChange = (e) => {\r\n\r\n        const value = e.target.value;\r\n\r\n        const product = {...props.product};\r\n\r\n        product.price = value;\r\n\r\n        props.onProductUpdate(product);\r\n\r\n    }\r\n\r\n    const imageUrl = props.product.imageUrl ? props.product.imageUrl : 'product.png';\r\n\r\n    return (\r\n        <div>\r\n        <Card>\r\n            <CardImg top width=\"100%\" src={imageUrl} />\r\n            <CardBody>\r\n                <CardTitle>\r\n                    <Input type=\"text\" name=\"category\" id=\"category\" placeholder=\"Categoría\" value={props.product.category} onChange={onCategoryChange} />\r\n                </CardTitle>\r\n                <CardText>\r\n                    <Label for=\"imageUrl\">URL de la imagen</Label>\r\n                    <Input type=\"url\" name=\"imageUrl\" id=\"imageUrl\"  value={imageUrl} onChange={onImageUrlChange}/>\r\n                </CardText>\r\n                <CardText>\r\n                    <Label for=\"description\">Descripción</Label>\r\n                    <Input type=\"textarea\" name=\"description\" id=\"description\" value={props.product.description} onChange={onDescriptionChange} />\r\n                </CardText>\r\n                <CardText>\r\n                    <Input type=\"number\" name=\"price\" id=\"price\" placeholder=\"Precio\"  value={props.product.price} onChange={onPriceChange}/>\r\n                </CardText>\r\n            </CardBody>\r\n        </Card>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProductView;\r\n","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst OrderService = {\r\n    generateErrorResponse(message) {\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    handleResponse(response) {\r\n        if(response && response.data) {\r\n            const deliveryppResponse = response.data;\r\n    \r\n            return deliveryppResponse;\r\n        }\r\n    },\r\n    async getOrders() {\r\n\r\n        try {\r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n\r\n            const response = await axios.get(`${basePath}/api/orders`, { headers });\r\n\r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n    \r\n    async getOrderById(orderId) {\r\n\r\n        try {\r\n\r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/orders/${orderId}`, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n    \r\n    },\r\n    \r\n    async addOrder(order) {\r\n\r\n        try {\r\n            \r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.post(`${basePath}/api/orders`, order, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n\r\n    async updateStatus(orderId, status) {\r\n\r\n        try {\r\n            \r\n            const token = localStorage.getItem('deliverypp_user_login_token');\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.put(`${basePath}/api/orders/${orderId}/status/${status}`, { headers });\r\n    \r\n            return this.handleResponse(response);\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e.message);\r\n\r\n        }\r\n\r\n    },\r\n    \r\n};\r\n\r\nexport default OrderService;","const StatusClassMapper = {\r\n    statusMap: {\r\n      ORDERED: 'danger',\r\n      PAID: 'info',\r\n      ACQUIRING: 'secondary',\r\n      ACQUIRED: 'primary',\r\n      TRANSIT: 'warning',\r\n      DELIVERED: 'success'\r\n    },\r\n    getClassStatusClass(status) {\r\n      return this.statusMap[status];\r\n    }\r\n  }\r\n\r\n  export default StatusClassMapper;\r\n  ","import React, { useState } from \"react\";\r\n\r\nimport { Table } from \"reactstrap\";\r\n\r\nimport './OrderView.css';\r\n\r\nimport StatusClassMapper from '../../../util/StatusClassMapper';\r\n\r\nconst StatusTranslateMapper = {\r\n  ORDERED: 'Ordenado',\r\n  PAID: 'Pagado',\r\n  ACQUIRING: 'Adquiriendo',\r\n  ACQUIRED: 'Adquirido',\r\n  TRANSIT: 'Tránsito',\r\n  DELIVERED: 'Entregado'\r\n};\r\n\r\nfunction OrderTable(props) {\r\n\r\n  const [activeRow, setActiveRow] = useState(null);\r\n\r\n  const handleOnRowClick = (order) => {\r\n    setActiveRow(order);\r\n    props.onRowClick(order.id)\r\n  }\r\n\r\n  const onColumnClick = (prop) => {\r\n    props.onColumnClick(prop);\r\n  }\r\n\r\n  return (\r\n    <div className=\"OrderTable\">\r\n      <Table bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => onColumnClick('id')}>Id</th>\r\n            <th onClick={() => onColumnClick('status')}>Estado</th>\r\n            <th onClick={() => onColumnClick('username')}>Usuario</th>\r\n            <th onClick={() => onColumnClick('email')}>Email</th>\r\n            <th onClick={() => onColumnClick('telephone')}>Teléfono</th>\r\n            <th onClick={() => onColumnClick('createdAt')}>Fecha</th>\r\n            <th onClick={() => onColumnClick('total')}>Total</th>\r\n            <th onClick={() => onColumnClick('comment')}>Comentario</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.orders.map((order) => {\r\n            return (\r\n              <tr className={`order-row ${activeRow && activeRow.id === order.id ? 'selected' : ''}`} key={order.id} onClick={() => handleOnRowClick(order)} >\r\n                <td>{order.id}</td>\r\n                <td className={`text-${StatusClassMapper.getClassStatusClass(order.status)}`}>{ StatusTranslateMapper[order.status] }</td>\r\n                <td>{order.username}</td>\r\n                <td>{order.email}</td>\r\n                <td>{order.telephone}</td>\r\n                <td>{order.createdAt}</td>\r\n                <td>{order.total}</td>\r\n                <td>{order.comment}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderTable;\r\n","\r\n\r\nimport React from 'react';\r\n\r\nimport { Label, Input } from 'reactstrap';\r\n\r\nimport StatusClassMapper from '../../../util/StatusClassMapper';\r\n\r\nfunction StatusSelect({ orderStatus, onOrderStatusChange }) {\r\n    return (\r\n      <div className=\"d-flex flex-row justify-content-center align-items-cente mr-2\">\r\n        <Label className=\"mr-2\" htmlFor=\"statusSelect\">Estado</Label>\r\n        <Input style={{borderWidth: 2}} className={`border-${StatusClassMapper.getClassStatusClass(orderStatus)}`} type=\"select\" id=\"statusSelect\" value={orderStatus} onChange={onOrderStatusChange}>\r\n          <option value={''}></option>\r\n          <option value={'ORDERED'}>Ordenado</option>\r\n          <option value={'PAID'}>Pagado</option>\r\n          <option value={'ACQUIRING'}>Adquiriendo</option>\r\n          <option value={'ACQUIRED'}>Adquirido</option>\r\n          <option value={'TRANSIT'}>En Tránsito</option>\r\n          <option value={'DELIVERED'}>Entregado</option>\r\n        </Input>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default StatusSelect;","import React, { useState } from 'react';\r\n\r\nimport { Card, CardImg, CardBody, CardTitle } from 'reactstrap';\r\n\r\nfunction OrderedProductDetailsView({orderLines}) {\r\n\r\n    const [mappedOrderLines, setMappedOrderLines] = useState(orderLines.map(orderLine => ({ ...orderLine, imageHidden: true })));\r\n  \r\n    const toggleImageHidden = (id) => {\r\n      console.log('id', id)\r\n      const newMappedOrderLines = mappedOrderLines.map(orderLine => {\r\n        if(orderLine.product.id === id) {\r\n          orderLine.imageHidden = !orderLine.imageHidden;\r\n        }\r\n        return orderLine;\r\n      });\r\n      setMappedOrderLines(newMappedOrderLines);\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        {mappedOrderLines.map(({ quantity, product, imageHidden }) => (\r\n          <Card key={product.id} style={{ marginBottom: 4, marginTop: 4 }} className=\"shadow p-2 mb-2 bg-white\">\r\n            \r\n            {\r\n              imageHidden && <div className=\"imageIconContainer text-center\" title=\"Mostrar image del producto\" onClick={() => toggleImageHidden(product.id)}><i className=\"fas fa-image\" style={{fontSize: 24, color: 'grey'}}></i></div>\r\n            }\r\n  \r\n            {\r\n              !imageHidden && (\r\n                <CardImg\r\n                  top\r\n                  width=\"100%\"\r\n                  src={product.imageUrl}\r\n                  alt={product.description}\r\n                  onClick={() => toggleImageHidden(product.id)}\r\n                  title=\"Ocultar imagel del producto\"\r\n                  className=\"cardImgElem\"\r\n                />\r\n              )\r\n            }\r\n            \r\n            <CardBody>\r\n              <CardTitle className=\"text-center font-weight-bold\">{product.description}</CardTitle>\r\n                <form>\r\n\r\n                    <div className=\"form-group row border-bottom\">\r\n                        <label htmlFor=\"idPrice\" className=\"col-6 col-form-label\">Precio</label>\r\n                        <label htmlFor=\"idPrice\" className=\"col-sm-6 col-form-label\">RD${product.price}</label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row border-bottom\">\r\n                        <label htmlFor=\"quantityProp\" className=\"col-sm-6 col-form-label\">Cantidad</label>\r\n                        <label htmlFor=\"quantityProp\" className=\"col-sm-6 col-form-label\">{quantity}</label>\r\n                    </div>\r\n \r\n                    <div className=\"form-group row border-bottom\">\r\n                        <label htmlFor=\"totalProp\" className=\"col-sm-6 col-form-label font-weight-bold\">Total</label>\r\n                        <label htmlFor=\"totalProp\" className=\"col-sm-6 col-form-label font-weight-bold text-success\">RD${product.price * quantity}</label>\r\n                    </div>\r\n                \r\n                </form>\r\n\r\n            </CardBody>\r\n          </Card>\r\n        ))}\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default OrderedProductDetailsView;","\r\nimport React from 'react';\r\n\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nfunction OrderMapView({ google, location }) {\r\n    return (\r\n      <div style={{height: 400, padding: 0, position: 'relative'}}>\r\n        <Map\r\n          google={google}\r\n          zoom={14}\r\n          initialCenter={{\r\n            lat: location.latitude,\r\n            lng: location.longitude\r\n          }}>\r\n          <Marker name={'Current location'} />\r\n        </Map>\r\n      </div>\r\n    );\r\n}\r\n  \r\nconst WrappedOrderMapView = GoogleApiWrapper({\r\napiKey: ('AIzaSyC1wC2ImcL1s4wITbDbM-g3nLK01fJHGkc')\r\n})(OrderMapView);\r\n\r\nexport default WrappedOrderMapView;","import React, { useState } from 'react';\r\n\r\nimport { CardText, Button, Modal, ModalHeader, ModalBody, ModalFooter, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport StatusSelect from './StatusSelect';\r\n\r\nimport OrderedProductDetailsView from './OrderedProductDetailsView';\r\n\r\nimport OrderMapView from './maps/OrderMapView';\r\n\r\nimport OrderService from '../../../services/OrderService';\r\n\r\nfunction ProductDetailsModal({ onClose, showModal, toggleShowModal, order, showAlert, onOrderStatusChange }) {\r\n\r\n    const { orderLines, id: orderId, location, status: orderStatus, total } = order;\r\n\r\n    const [activeTab, setActiveTab] = useState(() => 'orderProductsDetails');\r\n  \r\n    const toggle = tab => {\r\n        if(activeTab !== tab) setActiveTab(tab);\r\n    };\r\n  \r\n    const handleStatusChange = async event => {\r\n      const newStatus = event.target.value;\r\n      const responseData = await OrderService.updateStatus(orderId, newStatus);\r\n      if(responseData && responseData.success) {\r\n        onOrderStatusChange(orderId, newStatus);\r\n      } else {\r\n        console.log('Error updating status.')\r\n        showAlert({ color: 'warning', message: 'Error actualizando el estado.'});\r\n      }\r\n  \r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <Modal isOpen={showModal}>\r\n          <ModalHeader toggle={toggleShowModal}>\r\n            <CardText>Order #: {orderId}</CardText>\r\n            <CardText>Productos ordenados</CardText>\r\n            <StatusSelect orderStatus={orderStatus} onOrderStatusChange={handleStatusChange} />\r\n          </ModalHeader>\r\n          <ModalBody>\r\n              <Nav tabs>\r\n\r\n                <NavItem>\r\n                  <NavLink style={{ cursor: \"pointer\" }} className={activeTab === \"orderProductsDetails\" ? \"active\" : \"\"} onClick={() => toggle(\"orderProductsDetails\") }>Productos</NavLink>\r\n                </NavItem>\r\n  \r\n                <NavItem>\r\n                  <NavLink style={{ cursor: \"pointer\" }} className={activeTab === \"orderProductsLocation\" ? \"active\" : \"\"} onClick={() => toggle(\"orderProductsLocation\") }>Localización</NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <NavLink style={{ cursor: \"pointer\" }} className={activeTab === \"customer\" ? \"active\" : \"\"} onClick={() => toggle(\"customer\") }>Cliente</NavLink>\r\n                </NavItem>\r\n\r\n              </Nav>\r\n\r\n              <TabContent activeTab={activeTab}>\r\n\r\n                <TabPane tabId=\"orderProductsDetails\">\r\n                    <TotalDisplay total={total} />\r\n                    <div>\r\n                        <OrderedProductDetailsView orderLines={orderLines} />\r\n                    </div>\r\n                    <TotalDisplay total={total} />\r\n                \r\n                </TabPane>\r\n\r\n                <TabPane tabId=\"orderProductsLocation\">\r\n                    <div className=\"mt-2\">\r\n                        <OrderMapView location={location} />\r\n                    </div>\r\n                  \r\n                </TabPane>\r\n\r\n                <TabPane tabId=\"customer\">\r\n                  <CustomerView user={order.user} />\r\n                </TabPane>\r\n\r\n              </TabContent>\r\n\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"success\" onClick={onClose}>\r\n              Cerrar\r\n            </Button>{\" \"}\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst TotalDisplay = ({ total }) => {\r\n    return (\r\n\r\n        <div className=\"form-group row p-1\">\r\n            <label htmlFor=\"generalTotalProp\" className=\"col-sm-4 col-form-label font-weight-bold\">Total</label>\r\n            <label htmlFor=\"generalTotalProp\" className=\"col-sm-4 col-form-label font-weight-bold text-success\">RD${total}</label>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nfunction CustomerView({ user }) {\r\n\r\n    const { id, username, name, lastName, email, telephone } = user;\r\n\r\n    return (\r\n        <div className=\"shadow bg-white mt-2\">\r\n            <form className=\"p-4\">\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"idProp\" className=\"col-sm-6 col-form-label font-weight-bold\">#:</label>\r\n                    <label htmlFor=\"idProp\" className=\"col-sm-6 col-form-label font-weight-bold\">{id}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"usernameProp\" className=\"col-sm-6 col-form-label\">Usuario:</label>\r\n                    <label htmlFor=\"usernameProp\" className=\"col-sm-6 col-form-label\">{username}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"nameProp\" className=\"col-sm-6 col-form-label\">Nombre: </label>\r\n                    <label htmlFor=\"nameProp\" className=\"col-sm-6 col-form-label\">{name} {lastName}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"emailProp\" className=\"col-sm-6 col-form-label\">Email: </label>\r\n                    <label htmlFor=\"emailProp\" className=\"col-sm-6 col-form-label\">{email}</label>\r\n                </div>\r\n\r\n                <div className=\"form-group row border-bottom\">\r\n                    <label htmlFor=\"telephoneProp\" className=\"col-sm-6 col-form-label\">Teléfono: </label>\r\n                    <label htmlFor=\"telephoneProp\" className=\"col-sm-6 col-form-label\">{telephone}</label>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default ProductDetailsModal;","\r\nimport React from 'react';\r\n\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nfunction AllOrdersMapsView({ google, locations, onMarkerClick = () => {} }) {\r\n    return (\r\n      <div style={{height: 400, padding: 0, position: 'relative'}}>\r\n        <Map\r\n          google={google}\r\n          zoom={11}\r\n          initialCenter={{\r\n            lat: 18.486057,\r\n            lng: -69.931213\r\n          }}\r\n        >\r\n          {\r\n            locations.map(location => (\r\n              <Marker\r\n                key={location.id}\r\n                title={'The marker`s title will appear as a tooltip.'}\r\n                name={'SOMA'}\r\n                position={{lat: location.latitude, lng: location.longitude}}\r\n                onClick={() => onMarkerClick(location.id)}\r\n              />\r\n            ))\r\n          }\r\n        </Map>\r\n      </div>\r\n    )  \r\n}\r\n  \r\nconst WrappedAllOrdersMapsView = GoogleApiWrapper({\r\napiKey: ('AIzaSyC1wC2ImcL1s4wITbDbM-g3nLK01fJHGkc')\r\n})(AllOrdersMapsView);\r\n\r\nexport default WrappedAllOrdersMapsView;","\r\n\r\nimport React from 'react';\r\n\r\nimport StatusSelect from './StatusSelect';\r\n\r\nfunction OrderToolbar({ onSearch, orderStatus, onOrderStatusChange }) {\r\n    return (\r\n      <div className=\"Toolbar p-2 border rounded\">\r\n        <div className=\"searchInputContainer p-1\">\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"inputGroupPrepend2\">\r\n                  <i className=\"fa fa-search\"></i>\r\n                </span>\r\n              </div>\r\n              <input\r\n                  onChange={onSearch}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Buscar\"\r\n                  aria-describedby=\"inputGroupPrepend2\"\r\n                  required\r\n              />\r\n              <div className=\"ml-2\">\r\n                <StatusSelect orderStatus={orderStatus} onOrderStatusChange={onOrderStatusChange} />\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default OrderToolbar;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport './OrderView.css';\r\n\r\nimport OrderService from '../../../services/OrderService';\r\n\r\nimport OrderTable from \"./OrderTable\";\r\nimport ProductDetailsModal from './ProductDetailsModal';\r\nimport AllOrdersMapsView from './maps/AllOrdersMapsView';\r\nimport OrderToolbar from './OrderToolbar';\r\n\r\nconst toggleTableSort = { id: false, username: false, email: false, telephone: false, createdAt: false, total: false, comment: false };\r\n\r\nfunction OrderView({ showAlert }) {\r\n  const [orders, setOrders] = useState(() => []);\r\n  const [tableData, setTableData] = useState(() => []);\r\n  const [selectedOrder, setSelectedOrder] = useState(() => ({orderLines: [], locations: []}));\r\n  const [showOrderedProductsModal, setShowOrderedProductsModal] = useState(() => false);\r\n  const [statusFilter, setStatusFilter] = useState(() => '');\r\n\r\n  const transformToTableData = orders => {\r\n    return orders.map((\r\n      { user: { username, email, telephone }, status, id, createdAt, total, comment }) => ({ id, status, total, comment, createdAt, username, email, telephone })\r\n    );\r\n  };\r\n\r\n  const getOrders = async () => {\r\n\r\n    const responseData = await OrderService.getOrders();\r\n\r\n    if(responseData && responseData.success) {\r\n      const orders = responseData.response;\r\n        setOrders(orders);\r\n        const tableData = transformToTableData(orders);\r\n        setTableData(tableData);\r\n    } else {\r\n      console.log('Error getting orders.', responseData);\r\n      showAlert({ color: 'warning', message: 'Error getting orders.'});\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n  const handleRowClick = orderId => {\r\n    const order = orders.find(order => order.id === orderId)\r\n    if(order) {\r\n      setSelectedOrder(order);\r\n      setShowOrderedProductsModal(true);\r\n    }\r\n  };\r\n\r\n  const filterTableData = event => {\r\n    const value = event.target.value;\r\n    const tableData = transformToTableData(orders);\r\n    if(value) {\r\n        const filteredOrders = tableData.filter(order => {\r\n            const keys = Object.keys(order);\r\n            for(let key of keys) {\r\n                let propValue = order[key];\r\n                if(propValue) {\r\n                    propValue = '' + propValue;\r\n                    if(propValue.includes(value)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        setTableData(filteredOrders);\r\n    } else {\r\n      setTableData(tableData);\r\n    }\r\n  };\r\n\r\n  const onOrderedProductsModalClose = () => {\r\n    setShowOrderedProductsModal(false);\r\n  };\r\n\r\n  const toggleShowModal = () => {\r\n    setShowOrderedProductsModal(!showOrderedProductsModal);\r\n  };\r\n\r\n  const onOrderStatusChange = (orderId, newStatus) => {\r\n\r\n    const newOrders = orders.map(order => {\r\n      if(order.id === orderId) {\r\n        order.status = newStatus;\r\n      }\r\n      return order;\r\n    });\r\n\r\n    setOrders(newOrders);\r\n\r\n    const mappedTableData = tableData.map(record => {\r\n      if(record.id === orderId) {\r\n        record.status = newStatus;\r\n        const order = orders.find(order => order.id === orderId);\r\n        setSelectedOrder(order);\r\n      }\r\n      return record;\r\n    });\r\n\r\n    \r\n    setTableData(mappedTableData);\r\n\r\n  };\r\n\r\n  const filterByStatus = event => {\r\n\r\n    const status = event.target.value;\r\n\r\n    const tableData = transformToTableData(orders);\r\n\r\n    if(!status) {\r\n      setStatusFilter('');\r\n      return setTableData(tableData);\r\n    }\r\n\r\n    const filteredOrders = tableData.filter(order => order.status === status);\r\n\r\n    setStatusFilter(status);\r\n    setTableData(filteredOrders);\r\n\r\n  };\r\n\r\n  const sortColumn = prop => {\r\n \r\n    const toggleSort = toggleTableSort[prop];\r\n\r\n    const compare = (value1, value2) => {\r\n      if(value1 < value2) {\r\n        return 1;\r\n      } else if (value1 > value2) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    const tableData = transformToTableData(orders);\r\n\r\n    tableData.sort((orderA, orderB) => {\r\n      \r\n      let value1 = orderA[prop];\r\n      let value2 = orderB[prop];\r\n\r\n      if(toggleSort) {\r\n        return compare(value1, value2);\r\n      } else {\r\n        return compare(value2, value1);\r\n      }\r\n\r\n    });\r\n\r\n    toggleTableSort[prop] = !toggleSort;\r\n\r\n    const newOrders = [...tableData];\r\n\r\n    setTableData(newOrders);\r\n\r\n  };\r\n\r\n  const onMarkerClick = (locationId) => {\r\n    const order = orders.find(order => order.location.id === locationId);\r\n    if(order) {\r\n      setSelectedOrder(order);\r\n      setShowOrderedProductsModal(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"OrderView\">\r\n      <AllOrdersMapsView locations={orders.map(order => order.location)} onMarkerClick={onMarkerClick} />\r\n      <ProductDetailsModal\r\n        showModal={showOrderedProductsModal}\r\n        toggleShowModal={toggleShowModal}\r\n        onClose={onOrderedProductsModalClose}\r\n        showAlert={showAlert}\r\n        onOrderStatusChange={onOrderStatusChange}\r\n        order={selectedOrder}\r\n       />\r\n      <div>\r\n        <OrderToolbar\r\n          onSearch={filterTableData}\r\n          orderStatus={statusFilter}\r\n          onOrderStatusChange={filterByStatus}\r\n        />\r\n      </div>\r\n      <div className=\"Container mt-1\">\r\n        <OrderTable\r\n            orders={tableData}\r\n            onRowClick={handleRowClick}\r\n            onColumnClick={sortColumn}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default OrderView;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport ProductCard from './ProductCard';\r\n\r\nimport ProductService from '../../../services/ProductService';\r\n\r\nimport './ProductView.css';\r\n\r\nfunction OrderProductsView({ showAlert }) {\r\n\r\n    const [products, setProducts ] = useState([]);\r\n    const [filterableProducts, setFilterableProducts ] = useState([]);\r\n    const [selectedProductId, setSelectedProductId] = useState(-1);\r\n    const [selectedProduct, setSelectedProduct] = useState({});\r\n\r\n    const getProducts = async () => {\r\n\r\n        const responseData = await ProductService.getProducts();\r\n\r\n        if(responseData.success) {\r\n            const products = responseData.response;\r\n            setProducts(products);\r\n              setFilterableProducts(products);\r\n              \r\n          } else {\r\n            console.log('Error getting products')\r\n            showAlert({ color: 'warning', message: 'Error obteniendo productos.'});\r\n          }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProducts();\r\n    }, []);\r\n\r\n    const onProductCardClick = product => {\r\n        setSelectedProduct(product);\r\n        setSelectedProductId(product.id);\r\n    };\r\n\r\n    const getProductCards = () => {\r\n        return filterableProducts.map(product => {\r\n            const selected = product.id === selectedProductId ? 'selected' : '';\r\n            return <ProductCard key={product.id} product={product} onClick={onProductCardClick} selected={selected} />;\r\n        });\r\n      };\r\n\r\n    return (\r\n        <div className=\"ProductCardContainer\">\r\n\r\n            {\r\n                getProductCards()\r\n            }\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OrderProductsView;","import React, { useState } from 'react';\r\n\r\nimport ProductView from './product/ProductView';\r\nimport OrderView from './order/OrderView';\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport OrderProductsView from './product/OrderProductsView';\r\n\r\nfunction DeliveryppTab(props) {\r\n\r\n    const [activeTab, setActiveTab] = useState('available_products');\r\n\r\n    const toggle = tab => {\r\n        if(activeTab !== tab) setActiveTab(tab);\r\n    };\r\n\r\n    const getAdminTabNavItems = () => {\r\n        return (\r\n            <>\r\n                <NavItem>\r\n                    <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'product' ? 'active' : '' } onClick={() => { toggle('product'); }}>Productos</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'orders' ? 'active' : '' } onClick={() => { toggle('orders'); }} >Ordenes</NavLink>\r\n                </NavItem>\r\n            </>  \r\n        );\r\n    };\r\n\r\n    const getAdminTabPanes = () => {\r\n        return (\r\n            <>\r\n                <TabPane tabId=\"product\">\r\n                    <ProductView showAlert={props.showAlert} />\r\n                </TabPane>\r\n                <TabPane tabId=\"orders\">\r\n                    <OrderView showAlert={props.showAlert} />\r\n                </TabPane>\r\n            </>\r\n        )\r\n    }\r\n\r\n  return (\r\n    <div className=\"container-md p-1 border mb-8\">\r\n\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink style={{cursor: 'pointer'}} className={ activeTab === 'available_products' ? 'active' : '' } onClick={() => { toggle('available_products'); }}>Productos Disponibles</NavLink>\r\n        </NavItem>\r\n        {\r\n            props.isUserLoggedIn && props.user.role === 'ADMIN' && getAdminTabNavItems()\r\n        }\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"available_products\">\r\n          <OrderProductsView showAlert={props.showAlert} />\r\n        </TabPane>\r\n        {\r\n            props.isUserLoggedIn && props.user.role === 'ADMIN' && getAdminTabPanes()\r\n        }\r\n      </TabContent>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryppTab;","import React from \"react\";\r\n\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Button,\r\n  } from 'reactstrap';\r\n\r\n\r\nfunction NavBar({ onSignInClick, onLogOutClick, isUserLoggedIn, user}) {\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">\r\n            <span style={{color: '#940205'}}>Deliverypp</span>\r\n        </NavbarBrand>\r\n        <Nav className=\"mr-auto\" navbar></Nav>\r\n        {\r\n          /*\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                  <NavLink href=\"/products\">Productos</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          */\r\n        }\r\n        \r\n        {\r\n            isUserLoggedIn ?\r\n                  <div>\r\n                      <span className=\"mr-1\">{user.name}</span>\r\n                      <Button outline title=\"Salir\" onClick={onLogOutClick} className=\"mr-1\"><i className=\"fas fa-sign-out-alt\"></i></Button>  \r\n                  </div>\r\n                :\r\n                  <div>\r\n                      <Button outline title=\"Entrar\" onClick={onSignInClick} className=\"mr-1\"><i className=\"fas fa-sign-in-alt\"></i></Button>\r\n                  </div>\r\n        }\r\n\r\n      </Navbar>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        © 2020 Copyright:\r\n        <a href=\"/\"> Deliverypp.com</a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nimport Deliverypp from '../Deliverypp';\r\n\r\nconst basePath = Deliverypp.getPath();\r\n\r\nconst AuthService = {\r\n    generateErrorResponse(error) {\r\n\r\n        let message = error.message;\r\n\r\n        if(message.includes('401')) {\r\n            message = \"Credenciales incorrectas. Verifique que su usuario y contraseña son correctos.\"\r\n        }\r\n\r\n        const responseData = {\r\n            success: false,\r\n            status: 'ERROR',\r\n            message: message\r\n        };\r\n\r\n        return responseData;\r\n    },\r\n    handleResponse(response) {\r\n        if(response && response.data) {\r\n\r\n            const deliveryppResponse = response.data;\r\n\r\n            return deliveryppResponse;\r\n\r\n        }\r\n    },\r\n    async register(user) {\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/register`, user);\r\n\r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n\r\n        }\r\n\r\n    },\r\n    async login(user) {\r\n\r\n        try {\r\n            const response = await axios.post(`${basePath}/api/login`, user);\r\n\r\n            const responseData = this.handleResponse(response);\r\n\r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n            \r\n            return this.generateErrorResponse(e);\r\n\r\n        }\r\n        \r\n    },\r\n    async getUserByToken(token) {\r\n\r\n        try {\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/auth/${token}`, headers);\r\n    \r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n            \r\n        }\r\n\r\n    },\r\n    async logout(token) {\r\n\r\n        try {\r\n\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            const response = await axios.get(`${basePath}/api/auth/${token}`, headers);\r\n    \r\n            const responseData = this.handleResponse(response);\r\n    \r\n            return responseData;\r\n    \r\n        } catch(e) {\r\n\r\n            return this.generateErrorResponse(e);\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n};\r\n\r\nexport default AuthService;","import React from 'react';\r\n\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport './Loader.css';\r\n\r\nfunction Loader(props) {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <Spinner color=\"light\"  style={{ width: '4rem', height: '4rem' }} />\r\n            <span style={{color: '#fff'}}> Espere...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { useState } from 'react';\r\n\r\nimport {\r\n    Col, Form,\r\n    FormGroup, Label, Input,\r\n    Button,\r\n    FormFeedback \r\n} from 'reactstrap';\r\n\r\nimport AuthService from '../../../services/AuthService';\r\n\r\nimport Loader from '../../common/Loader';\r\n\r\nfunction LoginForm({ onLogin = () => {} }) {\r\n\r\n    const [dirty, setDirty] = useState({\r\n        username: false,\r\n        password: false,\r\n    });\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const login = async e => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            username,\r\n            password\r\n        };\r\n\r\n        setLoading(true);\r\n\r\n        const responseData = await AuthService.login(user);\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            onLogin(responseData);\r\n        }, 1000);\r\n\r\n        // TODO: close form\r\n\r\n    }\r\n\r\n    const onUsernameInputChange = e => {\r\n\r\n        handleSetDirty('username');\r\n\r\n        const input = e.target;\r\n\r\n        const username = input.value;\r\n\r\n        setUsername(username);\r\n\r\n    }\r\n\r\n    const onPasswordInputChange = e => {\r\n\r\n        handleSetDirty('password');\r\n\r\n        const input = e.target;\r\n\r\n        const password = input.value;\r\n\r\n        setPassword(password);\r\n\r\n    }\r\n\r\n    const handleSetDirty = (prop) => {\r\n\r\n        if(!dirty[prop]) {\r\n            const newDirty = {...dirty};\r\n            newDirty[prop] = true;\r\n            setDirty(newDirty);\r\n        }\r\n\r\n    }\r\n\r\n    const isValidUsername = !!username;\r\n    const isValidPassword = !!password && password.length > 5;\r\n\r\n    const isFormValid = () => {\r\n        return isValidUsername && isValidPassword;\r\n    }\r\n\r\n    return (\r\n\r\n        <Form className=\"form position-relative p-2\">\r\n            {\r\n                loading && <Loader />\r\n            }\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"username\">Usuario</Label>\r\n                    <Input\r\n                        valid={dirty.username && isValidUsername}\r\n                        invalid={dirty.username && !isValidUsername}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        value={username}\r\n                        onChange={onUsernameInputChange}\r\n                    />\r\n                    {\r\n                        dirty.username && <FormFeedback>El nombre de usuario no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Contraseña</Label>\r\n                    <Input\r\n                        valid={dirty.password && isValidPassword}\r\n                        invalid={dirty.password && !isValidPassword}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"examplePassword\"\r\n                        placeholder=\"********\"\r\n                        value={password}\r\n                        onChange={onPasswordInputChange}\r\n                    />\r\n                    {\r\n                        dirty.password && <FormFeedback>Introduce una contraseña de más de 5 caracteres.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Button disabled={!isFormValid()} onClick={login}>Entrar</Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\n\r\nimport {\r\n    Col, Form,\r\n    FormGroup, Label, Input,\r\n    Button, FormFeedback \r\n} from 'reactstrap';\r\n\r\nimport validator from 'validator';\r\n\r\nimport AuthService from '../../../services/AuthService';\r\n\r\nimport Loader from '../../common/Loader';\r\n\r\nfunction RegisterForm({onRegister = () => {}}) {\r\n\r\n    const [dirty, setDirty] = useState({\r\n        username: false,\r\n        email: false,\r\n        password: false,\r\n        name: false,\r\n        telephone: false \r\n    });\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [telephone, setTelephone] = useState('');\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const register = async e => {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            name,\r\n            username,\r\n            email,\r\n            password,\r\n            lastName,\r\n            telephone\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const response = await AuthService.register(user);\r\n\r\n        if(response && response.token) {\r\n            localStorage.setItem('deliverypp_user_login_token', response.token);\r\n        }\r\n\r\n        clearForm();\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            onRegister(response);\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    const clearForm = () => {\r\n\r\n        setUsername('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setName('');\r\n        setLastName('');\r\n        setTelephone('');\r\n\r\n        setDirty({\r\n            username: false,\r\n            email: false,\r\n            password: false,\r\n            name: false,\r\n            telephone: false \r\n        });\r\n\r\n    }\r\n\r\n    const onUsernameInputChange = e => {\r\n\r\n        handleSetDirty('username');\r\n\r\n        const input = e.target;\r\n\r\n        const username = input.value;\r\n\r\n        setUsername(username);\r\n\r\n    }\r\n\r\n    const onEmailInputChange = e => {\r\n\r\n        handleSetDirty('email');\r\n\r\n        const input = e.target;\r\n\r\n        const email = input.value;\r\n\r\n        setEmail(email);\r\n\r\n    }\r\n\r\n    const onPasswordInputChange = e => {\r\n\r\n        handleSetDirty('password');\r\n\r\n        const input = e.target;\r\n\r\n        const password = input.value;\r\n\r\n        setPassword(password);\r\n\r\n    }\r\n\r\n    const onNameInputChange = e => {\r\n\r\n        handleSetDirty('name');\r\n\r\n        const input = e.target;\r\n\r\n        const name = input.value;\r\n\r\n        setName(name);\r\n    }\r\n\r\n    const onLastNameInputChange = e => {\r\n        const input = e.target;\r\n\r\n        const lastName = input.value;\r\n\r\n        setLastName(lastName);\r\n    }\r\n\r\n    const onTelephoneInputChange = e => {\r\n\r\n        handleSetDirty('telephone');\r\n\r\n        const input = e.target;\r\n\r\n        const telephone = input.value;\r\n\r\n        setTelephone(telephone);\r\n    }\r\n\r\n    const handleSetDirty = (prop) => {\r\n\r\n        if(!dirty[prop]) {\r\n            const newDirty = {...dirty};\r\n            newDirty[prop] = true;\r\n            setDirty(newDirty);\r\n        }\r\n\r\n    }\r\n\r\n    const isValidEmail = !!email && validator.isEmail(email);\r\n    const isValidUsername = !!username;\r\n    const isValidName = !!name;\r\n    const isValidPassword = !!password && password.length > 5;\r\n    const isValidTelephone = !!telephone && telephone.length === 10;\r\n\r\n    const isFormValid = () => {\r\n        return isValidEmail && isValidUsername && isValidName && isValidPassword && isValidTelephone;\r\n    }\r\n\r\n    return (\r\n\r\n        <Form className=\"form position-relative p-2\">\r\n            {\r\n                loading && <Loader />\r\n            }\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"register_username\">Usuario</Label>\r\n                    <Input\r\n                        valid={dirty.username && isValidUsername}\r\n                        invalid={dirty.username && !isValidUsername}\r\n                        type=\"text\"\r\n                        name=\"register_username\"\r\n                        id=\"register_username\"\r\n                        required\r\n                        value={username}\r\n                        onChange={onUsernameInputChange}\r\n                    />\r\n                    {\r\n                        dirty.username && <FormFeedback>El nombre de usuario no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input\r\n                        valid={dirty.email && isValidEmail}\r\n                        invalid={dirty.email && !isValidEmail}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"exampleEmail\"\r\n                        placeholder=\"youremail@email.com\"\r\n                        required\r\n                        value={email}\r\n                        onChange={onEmailInputChange}\r\n                    />\r\n                    {\r\n                        dirty.email && <FormFeedback>Introduce un email válido.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"password\">Contraseña</Label>\r\n                    <Input\r\n                        valid={dirty.password && isValidPassword}\r\n                        invalid={dirty.password && !isValidPassword}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"********\"\r\n                        value={password}\r\n                        onChange={onPasswordInputChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.password && <FormFeedback>Introduce una contraseña de más de 5 caracteres.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"name\">Nombre</Label>\r\n                    <Input\r\n                        valid={dirty.name && isValidName}\r\n                        invalid={dirty.name && !isValidName}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        value={name}\r\n                        onChange={onNameInputChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.name && <FormFeedback>El nombre no puede estar vacío.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"lastname\">Apellido</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"lastname\"\r\n                        id=\"lastname\"\r\n                        value={lastName}\r\n                        onChange={onLastNameInputChange}\r\n                        required\r\n                    />\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n                <FormGroup>\r\n                    <Label for=\"telephone\">Teléfono</Label>\r\n                    <Input\r\n                        valid={dirty.telephone && isValidTelephone}\r\n                        invalid={dirty.telephone && !isValidTelephone}\r\n                        type=\"number\"\r\n                        name=\"telephone\"\r\n                        id=\"telephone\"\r\n                        value={telephone}\r\n                        onChange={onTelephoneInputChange}\r\n                        placeholder=\"8095005000\"\r\n                        required\r\n                    />\r\n                    {\r\n                        dirty.name && <FormFeedback>Introduce un teléfono válido.</FormFeedback>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n\r\n            <Button disabled={!isFormValid()} onClick={register}>Registrarse</Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default RegisterForm;","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\n\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nimport LoginForm from './LoginForm';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nimport './RegisterLoginTab.css';\r\n\r\nfunction RegisterLoginTab(props) {\r\n\r\n  const [activeTab, setActiveTab] = useState('login');\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  let loginIconColor = 'grey';\r\n  let registerIconColor = 'grey';\r\n\r\n  if(activeTab === 'login') {\r\n    loginIconColor = props.color;\r\n  } else if(activeTab === 'register') {\r\n    registerIconColor = props.color;\r\n  }\r\n\r\n  const onRegister = (responseData) => {\r\n\r\n    if(!responseData) {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el registro. Trate luego.'});\r\n    } else if(responseData && !responseData.success) {\r\n      props.showAlert({ color: 'warning', message: responseData.message});\r\n    } if(responseData && responseData.success) {\r\n      setActiveTab('login');\r\n    } else {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el registro. Trate luego.'});\r\n    }\r\n\r\n  }\r\n\r\n  const onLogin = (responseData) => {\r\n\r\n    if(!responseData) {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el ingreso. Trate luego.'});\r\n    } else if(responseData && !responseData.success) {\r\n      props.showAlert({ color: 'warning', message: responseData.message});\r\n    } if(responseData && responseData.success && responseData.response) {\r\n        const response = responseData.response;\r\n        if(response.token) {\r\n            localStorage.setItem('deliverypp_user_login_token',  response.token);\r\n            props.toggle();\r\n            props.onLogin(response.user);\r\n        }\r\n    } else {\r\n      props.showAlert({ color: 'warning', message: 'Hubo un error durante el ingreso. Trate luego.'});\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"RegisterLoginTab\">\r\n      <Modal isOpen={props.showModal}>\r\n        <ModalHeader toggle={props.toggle}>Entrar</ModalHeader>\r\n        <ModalBody>\r\n          <Nav tabs>\r\n            <NavItem>\r\n              <NavLink\r\n                style={{ cursor: \"pointer\" }}\r\n                className={ activeTab === 'login' ? 'active' : '' }\r\n                onClick={() => { toggle(\"login\"); }}\r\n              >\r\n                Entrar <i className=\"fas fa-user\" style={{color: loginIconColor}}></i>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                style={{ cursor: \"pointer\" }}\r\n                className={ activeTab === 'register' ? 'active' : '' }\r\n                onClick={() => { toggle(\"register\"); }}\r\n              >\r\n                Registrarse <i className=\"fas fa-sign-in-alt\" style={{color: registerIconColor}}></i>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"login\">\r\n              <LoginForm onLogin={onLogin} color={props.color} />\r\n            </TabPane>\r\n            <TabPane tabId=\"register\">\r\n              <RegisterForm onRegister={onRegister} color={props.color} />\r\n            </TabPane>\r\n          </TabContent>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterLoginTab;\r\n","import React from 'react';\r\n\r\nimport { Spinner } from 'reactstrap';\r\n\r\nimport './Loader.css';\r\n\r\nfunction MainLoader(props) {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <Spinner type=\"grow\" color=\"dark\"  style={{ width: '4rem', height: '4rem' }} />\r\n            <span style={{color: '#fff'}}> Espere...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainLoader;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport DeliveryppTab from './components/deliverypp/DeliveryppTab';\nimport NavBar from './components/main/NavBar';\nimport Footer from './components/main/Footer';\n\nimport RegisterLoginTab from './components/main/auth/RegisterLoginTab';\n\nimport { Alert } from 'reactstrap';\n\nimport MainLoader from './components/common/MainLoader';\n\nimport AuthService from './services/AuthService';\n\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\n\nconst mainColor = '#940205';\n\nfunction App() {\n\n  const [showRegisterLoginTab, setShowRegisterLoginTab] = useState(false);\n  const [alertVisible, setAlertVisible] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('Registered');\n  const [alertColor, setAlertColor] = useState('info');\n  const [appLoading, setAppLoading] = useState(true);\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n\n    const token = localStorage.getItem('deliverypp_user_login_token');\n\n    const getUser = async () => {\n      if(token) {\n        const responseData = await AuthService.getUserByToken(token);\n\n        if(responseData && responseData.response) {\n          const user = responseData.response;\n          if(responseData.success) {\n            setUser(user);\n            setIsUserLoggedIn(true);\n          }\n        } else {\n          setIsUserLoggedIn(false);\n        }\n        setTimeout(() => { setAppLoading(false); }, 1000);\n      } else {\n  \n        setIsUserLoggedIn(false);\n        setTimeout(() => { setAppLoading(false); }, 1000);\n        setIsUserLoggedIn(false);\n\n      }\n    }\n\n    if(!isUserLoggedIn) {\n      getUser();\n    }\n    \n  }, [isUserLoggedIn]);\n\n  const toggleRegisterLoginTab = () => {\n    setShowRegisterLoginTab(!showRegisterLoginTab);\n  };\n\n  const showAlert = ({ color, message }) => {\n    setAlertColor(color);\n    setAlertMessage(message);\n    setAlertVisible(true);\n\n    setTimeout(() => {\n      setAlertColor('info');\n      setAlertVisible(false);\n      setAlertMessage('');\n    }, 3000);\n  };\n\n  const onAlertDismiss = () => {\n    setAlertVisible(false);\n  };\n\n  const onLogOutClick = () => {\n\n    setAppLoading(true);\n\n    const token = localStorage.getItem('deliverypp_user_login_token');\n\n    AuthService.logout(token);\n\n    localStorage.removeItem('deliverypp_user_login_token');\n\n    setUser({});\n    setIsUserLoggedIn(false);\n\n    setTimeout(() => { setAppLoading(false); }, 1000);\n\n  };\n\n  const onLogin = (user) => {\n\n    setAppLoading(true);\n\n    setUser(user);\n    setIsUserLoggedIn(true);\n\n    setTimeout(() => { setAppLoading(false); }, 1000);\n\n  };\n\n  if(appLoading) {\n    return (\n      <MainLoader />\n    )\n  } else {\n    return (\n      <Router>\n        <div className=\"App\">\n\n          <div className=\"alertContainer\">\n            <Alert color={alertColor} isOpen={alertVisible} toggle={onAlertDismiss}>\n                {alertMessage}\n            </Alert>\n          </div>  \n\n          <NavBar\n            isUserLoggedIn={isUserLoggedIn}\n            user={user}\n            onSignInClick={() => setShowRegisterLoginTab(true)}\n            onLogOutClick={onLogOutClick}\n            color={mainColor}\n          />\n          \n          {\n            showRegisterLoginTab && <RegisterLoginTab showModal={showRegisterLoginTab} toggle={toggleRegisterLoginTab} color={mainColor} showAlert={showAlert} onLogin={onLogin} />\n          }\n\n          <Switch>\n            <Route exact path=\"/\" component={() => <DeliveryppTab showAlert={showAlert} color={mainColor} isUserLoggedIn={isUserLoggedIn} user={user} />} />\n            <Route component={Notfound} />\n          </Switch>\n\n          <Footer color={mainColor} />\n        </div>\n      </Router>\n    );\n  }\n\n}\n\nfunction Notfound() {\n  return (\n    <div>\n      La página no fue encontrada\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}